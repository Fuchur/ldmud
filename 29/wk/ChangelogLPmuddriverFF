Subject: Changelog LPmud driver FFFrom: Daniel Schild <schild@tsa.de>Date: Wed, 11 Nov 1998 13:56:53 +0100Organization: Teleport Sachsen-Anhalt GmbH / RegioCom GmbHX-Mailer: Mozilla 4.06 [en] (X11; I; Linux 2.0.35 i686)This is a multi-part message in MIME format.--------------0D6CD2B6E5EB4A8EE4326A26Content-Type: text/plain; charset=us-asciiContent-Transfer-Encoding: 7bitviel spass beim lesen. weiss selber kaum noch, was da drin steht. wennirgendwer den mist gebrauchen kann sach bescheid-- Daniel SchildDienst- und ApplikationsentwicklungTeleport Sachsen-Anhalt GmbH | RegioCom GmbHTel:    ++49 39203 8 2030    | ++49 39203 8 3300Fax:    ++49 39203 8 2031    | ++49 39203 8 3399E-Mail: schild@tsa.de        | schild@regiocom.netS-Mail: Steinfeldstr. 3, 39179 Barleben, Germany--------------0D6CD2B6E5EB4A8EE4326A26Content-Type: text/plain; charset=us-ascii; name="Changelog%"Content-Transfer-Encoding: 7bitContent-Disposition: inline; filename="Changelog%"Sat Jul  6 16:35:44 MET DST 1996 (schild@hppool.cs.uni-magdeburg.de (DanS))	* version 3.2.1@129%1	* introduced:	  . ANSI and K&R prototypes	  . ANSI and K&R function definitions	  . added defines - undefining EFuns or other functionality	    now causes not only the removal of the functionality itself,	    it will remove some unused lines of code too	  . HP-UX special fixes and optimizations	* features:	  . the driver now handles the most recent signals and fatals	    by calling a function in the master object (default "crash")	    default signal for offline-reload of the master object: SIGUSR1	    definitions in: signal_handler.h; signal_handler.h and config.h	  . introduced EFun 'reload_object'. This function resets the specified	    object without reloading it from the source.	    definitions in: object.c config.h	    The idea and some lines of source are taken from the MudOS	    development project	  . added some additional math EFuns:	    float ceil  (float f)          - returns the smallest int not < f	    float floor (float f)          - returns the largest int not > f	    float pow   (float x, float y) - returns x^y	    definitions in: interpret.c config.h	  . introduced EFun int set_eval_cost(int a).	    return types and actions:	       a == 0 - reset the maximum number of evaluation nodes per loop	       a < 0  - return the maximum number of evaluation nodes per loop	       a > 0  - set the maximum number of evaluation nodes per loop to a	    The idea and most lines of source are taken from the MudOS	    development project.	  . introduced EFun int get_eval_time(). This EFun returns the number of	    miliseconds since the start of the current evaluation loop.	  . The driver process now dumps its process ID into a file called	    'driver_pid' inside the directory where the driver is installed	  . introduced additionaly varargs handling.	    enhanced LPC with operator '...' for function definitions:	    string foo (string bar1, int bar2, mixed * rest...) {	       return sprintf ("bar1: %s\nbar2: %d\nrest: %O", bar1, bar2, rest);	    }	    the call:	       foo ("first",3,1,2,3,4,5,6,7,8,9,0);	    will result in:	        bar1: first	        bar2: 3	        rest: ({ 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 })            watch out for further enhancements.	    Idea and some semantics are taken from the MudOS development project.	  . extended EFun mixed debug_info (int flag, object obj):	       flag == 5 - returns the size of obj in memory	       flag == 6 - returns the time obj was last referenced	       flag == 7 - returns obj's reference count	       flag == 8 - returns true if obj is swapped	* changed init_telopts() in comm1.c to execute only one loop and	  to include telnet_neg.h for default negotiation settings	* disabled EFun slice_array() and combine_free_list() in func_spez	* disabled buildin-command 'malloc' for interactives without	  O_IS_WIZARD setMon Jul  8 08:03:59 MET DST 1996 (schild@hppool.cs.uni-magdeburg.de (DanS))	* version 3.2.1@130%1	* merged in the changes in the official driver distribution with minor	  changes in prototyping	  (	  diff3.2.1@129-130; release date: Sat Jul 6 23:41:05 MET DST 1996	    f_transpose_array(): avoid leaving an array with T_INVALID contents.	    new_player(): if neither ACCESS_CONTROL nor MSDOS, also call	      set_socket_nonblocking() and set_close_on_exec().	    get_message(): EPROTO is a non-fatal failure.	    Implement Synch according to RFC 854.	  )Mon Jul  8 12:24:01 MET DST 1996 (schild@hppool.cs.uni-magdeburg.de (DanS))	* version 3.2.1@130%2	* fixed bug in new varargs handling so that calls to local funtions	  work as expected.	* introduced new functionality for the '...' operator	  it now expands function arguments:	    void test (int x, int y, int z) {}	  the call	    a = ({ 1, 2, 3 });	    test(a...);	  results in:	    x = 1;	    y = 2	    z = 3;	  Idea and some semantics are taken from the MudOS development project.	  (thanks to Markus@TAPPMud for some hints)	* strict type checking for arguments to funtions is now disabled if you	  use either the varargs '...' operator or the array expand operator.	  The user has to check the type himself. (This is, because we don't	  know the array contents during compile time a.s.o.)Sat Jul 13 13:42:10 MET DST 1996 (schild@hppool.cs.uni-magdeburg.de (DanS))	* version 3.2.1@130%3	* added instrs.h to 'clean' rule in Makefile.in	  (thanks to Freaky@UNItopia aka freaky@rus.uni-stuttgart.de)	* fixed some minor things	  (thanks to Freaky@UNItopia aka freaky@rus.uni-stuttgart.de)	* checked the differnces between version 3.2.1@130 and this version	* removed some useless changes	* enhanced the signal handling package to use the closure hook H_CRASH	  which maybe either a string with the name of the function to call	  in the master object or a closure with up to 3 arguments:	    H_CRASH == T_STRING:	      call the function named by H_CRASH with 3 arguments:	        1. argument: a string containing the reason why the driver		   goes down		2. argument: type object; will contain the command giver		   for the current execution or 0 if none		3. argument: type object; will contain the current object		   or 0 if none	    H_CRASH == T_CLOSURE:	      call the closure with up to 3 arguments. Arguments and types are	      as specified above. If the number of arguments is less than 3	      the list will be truncated.	  default type for the hook is T_STRING; default value is "crash"	* introduced a new behaviour to call "reset" in objects	  (reset as in native mode):	  This is activated by the #define RESET_IF_SWAPPED inside config.h	  default value for RESET_IF_SWAPPED is 0	  If RESET_IF_SWAPPED equals:	    0 : this is the old behaviour;	        the driver will not reset objects swapped out	    1 : the driver will reset objects even if they are swapped out	    -1: the driver will only reset swapped objects if they have	        the O_RESET_IF_SWAPPED bit set. This bit will be set during		the creation phase of the object using the driver hook		H_RESET_IF_SWAPPED which maybe either a closure or a string.		if the type of H_RESET_IF_SWAPPED equals:		  T_STRING		    the driver will call the function namend by the hook inside		    the object. Remember - this is done once during creation time		  T_CLOSURE		    the driver will call the closure		If the hook returns 0 no reset will be called if the object is		swapped. A value other than 0 will result in calling reset		for this object even if it is swapped out.	  default type for the hook is T_STRING; default value is	  "reset_if_swapped"	  (thanks to Freaky@UNItopia aka freaky@rus.uni-stuttgart.de for a	  little :) discussion about that)	* added code for for EFun get_num_args() wich returns the number of	  arguments which the current function got. This only works if you	  assign the return value of get_num_args() to a local variable.	  (thanks to Freaky@UNItopia aka freaky@rus.uni-stuttgart.de for	  the idea)	* removed some useless changes	* changed 'configure' to look for full availibility of 'struct rusage'	  and if the system/user members of 'struct rusage' have a tv_usec member	  even if getrusage is simulated via syscallSat Jul 13 15:45:48 MET DST 1996 (schild@hppool.cs.uni-magdeburg.de (DanS))	* version 3.2.1@130%4	* introduced flag O_WILL_RESET. This flag will be set during the	  creation phase of the object to determine, if there is a function	  defined by H_RESET. If H_RESET is a closure every object will get	  O_WILL_RESET. H_RESET will be called only in objects with O_WILL_RESET	  set.	* enhanced the swapping mechanism to do lazy swapping. This is activated	  by defining LAZY_SWAP in config.h.	  If lazy swapping is enabled, the look_for_objects_to_swap function	  in backend.c just fills a FIFO. That FIFO is then emptied during	  the next loops, prozessing LAZY_SWAP objects each loop.	* merged in the Multiport package GDMulti-130 with minor changes.	  See README.Multiport for details.	* added permanent defines TRUE_VARARGS, EXPAND_ARRAY, XTENDED_DEBUG_INFO	  and RESET_IF_SWAPPED (has the same value as defined in config.h; if	  RESET_IF_SWAPPED in config.h equals 0 RESET_IF_SWAPPED is not defined)	Sat Nov 16 17:17:33 MET 1996 (schild@hppool.cs.uni-magdeburg.de (DanS))	* version 3.2.1@134%4	* merged in the changes in the official driver distribution	  (	  diff3.2.1@130-131; release date: Sat Aug 10 19:16:25 MET DST 1996	    New email addresses.	    Fixed code that wouldn't compile with old K&R compiler.	    Removed remains of combine_free_list().	    store_case_labels(): avoid overflow when calculating gain from a	    table with large span.	  diff3.2.1@131-132; release date: Sat Sep 21 21:48:41 MET DST 1996	    Variadic function suport.	    Fixed bug in find_living_object() .	  diff3.2.1@132-133; release date: Sat Sep 28 00:12:52 MET DST 1996	    get_message(), erq.c:main(), start_subserver(): check for interrupted	    select.	    prolang.y, function_call: set return type to TYPE_ANY for	    unknown efun.	  diff3.2.1@133-134; release date: Sat Oct 19 23:25:05 MET 1996	    regreplace fixes from Marcus.	    sprintf.c: check for out of memory conditions.	    Fixes for sizeof(char *) != sizeof(int)	    Latest amiga diffs.	  )	* removed the selfmade varargs handling (still alpha code) due to	  the variadic function support introduced in 3.2.1@132Sat Nov 30 21:31:28 MET 1996 (schild@hppool.cs.uni-magdeburg.de (DanS))	* version 3.2.1@135%5	* merged in the changes in the official driver distribution	  (	  diff3.2.1@134-135; release date: Sat Nov 30 04:24:48 MET 1996	    Fixes to compile on BSDI 2.0.1 / 2.1 .	    Another regreplace bugfix.	    regcomp(): fixed memory leak (patch by Marcus)            port.h: use __STDC__, not __STDC .            svalue_size(), case T_CLOSURE, ! MALLOC_smalloc: fixed infinite loop.            64 bit fixes.            setup_new_frame2(): when there it an error, pass funstart as pc.          )	* added startup functionality for super user privileges:		- the driver may set the systems hard limit for the maximum		  number of open files.		- the driver may lock its text segment and its data segment into		  memory to avoid being paged or swapped out.	     	- after completion the driver process irreversibly falls back		  to a non privileged user and group IDWed Apr  9 19:57:30 MET DST 1997 (schild@tsa.de (DanS))	* version 3.2.1@136%5	* merged in the changes in the official driver distribution	  (	  diff3.2.1@135-136; release date: Sat Nov 30 04:24:48 MET 1996	    store_include_end(): when returning to the auto include string,	    adjust stored_lines.	    patches for GnuWin32 host.	    64 bit fixes.	  )Thu Apr 10 03:30:10 MET DST 1997 (schild@tsa.de (DanS))	* version 3.2.1@137%5	* merged in the changes in the official driver distribution	  (	  AIX fixes.	  README.3.2: amylaar-users list and driver archive have moved.	  show_otable_status(): don't add objs_in_table * sizeof(struct object)	  to result.	  simulate.c: gcc >= 2.7 defines lstat prototype even on SunOS 4	  status_parse(): add sentences to total;	  define evaluation order of function calls.	  Reduced MAX_LAMBDA_LEVELS to 32k.	  !-escapes in charmode: Allow the same CR/LF combinations like for	  ordinary	  input. Echo immediately.	  )	Wed Apr 23 19:44:28 MET DST 1997 (schild@tsa.de (DanS))	* version 3.2.1@137%6a	* enhanced the swapping mechanism to always swap the line number	  information of all programm blocks directly after compilation--------------0D6CD2B6E5EB4A8EE4326A26--