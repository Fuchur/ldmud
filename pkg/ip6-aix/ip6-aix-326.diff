Index: 3-2-rel.6/lpmud.prj
--- 3-2-rel.6/lpmud.prj
+++ 3-2-rel.6(w)/lpmud.prj
@@ -1050,7 +1050,15 @@
   (doc/master/valid_read (lpmud/s/28_valid_read 1.1 644))
   (doc/master/valid_seteuid (lpmud/s/29_valid_sete 1.1 644))
   (doc/master/valid_snoop (lpmud/s/30_valid_snoo 1.1 644))
-  (doc/master/valid_write (lpmud/s/31_valid_writ 1.1 644)))
+  (doc/master/valid_write (lpmud/s/31_valid_writ 1.1 644))
+;; Files added by populate at Thu, 05 Aug 1999 12:02:46 -0700,
+;; to version 3-2-rel.6(w), by lars:
+
+  (src/mudipv6.h ())
+  (src/mudipv6.c ())
+  (src/config.WL ())
+  (src/Makefile.WL ())
+)
 (Merge-Parents
   (3-2-dev.76 complete
     (COPYRIGHT COPYRIGHT COPYRIGHT r) (CREDITS CREDITS CREDITS r)
Index: 3-2-rel.6/src/regexp.c
--- 3-2-rel.6/src/regexp.c Fri, 26 Mar 1999 19:27:43 -0800 lars (lpmud/36_regexp.c 1.13 644)
+++ 3-2-rel.6(w)/src/regexp.c Fri, 26 Mar 1999 19:27:43 -0800 lars (lpmud/36_regexp.c 1.13 644)
@@ -164,7 +164,7 @@
 #include "regexp.h"
 
 #ifndef lint
-static char    *Ident UNUSED = "$Id: ip6-aix-326.diff 1.1 Wed, 11 Aug 1999 16:04:24 -0700 lars $";
+static char    *Ident UNUSED = "$Id: ip6-aix-326.diff 1.1 Wed, 11 Aug 1999 16:04:24 -0700 lars $";
 #endif
 
 
Index: 3-2-rel.6/src/prolang.y
--- 3-2-rel.6/src/prolang.y Tue, 30 Mar 1999 18:28:11 -0800 lars (lpmud/37_prolang.y 1.23 644)
+++ 3-2-rel.6(w)/src/prolang.y Mon, 26 Jul 1999 18:52:06 -0700 lars (lpmud/37_prolang.y 1.23 644)
@@ -193,6 +193,8 @@
 static struct ident *all_locals = 0;
 static struct efun_shadow *all_efun_shadows = 0;
 
+static void store_line_number_relocation(int relocated_from);
+
 #ifdef __STDC__
 void yyerrorf(char *format, ...)
 {
Index: 3-2-rel.6/src/port.h
--- 3-2-rel.6/src/port.h Wed, 24 Mar 1999 16:03:44 -0800 lars (lpmud/38_port.h 1.19 644)
+++ 3-2-rel.6(w)/src/port.h Fri, 30 Jul 1999 10:23:22 -0700 lars (lpmud/38_port.h 1.19 644)
@@ -22,12 +22,6 @@
 Thats it.
 #endif
 
-#if !defined(__STDC__)
-/* TODO: Add a ANSI-check to configure and let it fail, too. */
-#error You need a Standard-C compiler.
-Thats it.
-#endif
-
 #include "machine.h"
 
 /*------------------------------------------------------------------
@@ -166,12 +160,12 @@
 #    define FORMATDEBUG(f,a,b)
 #endif
 
-#ifdef __STDC__
+/*#ifdef __STDC__ */
 /* TODO: Remove VARPROT */
-#    define VARPROT(proto,like,form,var) proto FORMATDEBUG(like,form,var)
-#else
+/*#    define VARPROT(proto,like,form,var) proto FORMATDEBUG(like,form,var)
+#else*/
 #    define VARPROT(proto, like,form,var) ()
-#endif
+/*#endif*/
 
 /* TODO: Give machine.h a 'HAS_INLINE' define */
 /* TODO: Rethink this as soon as configure/autoconf has a proper inline
@@ -245,7 +239,7 @@
 #ifndef __BEOS__
 /* int32 : an integer with 32 bits. */
 #    if SIZEOF_LONG == 4
-typedef long                int32;
+/* typedef long                int32; */
 typedef unsigned long       uint32;
 #    else
 #        if SIZEOF_INT == 4
Index: 3-2-rel.6/src/main.c
--- 3-2-rel.6/src/main.c Tue, 30 Mar 1999 18:28:11 -0800 lars (lpmud/b/8_main.c 1.30 644)
+++ 3-2-rel.6(w)/src/main.c Tue, 27 Jul 1999 05:38:34 -0700 lars (lpmud/b/8_main.c 1.30 644)
@@ -516,22 +516,6 @@
 }
 
 /*-------------------------------------------------------------------------*/
-void
-writex (int d, p_uint i)
-
-/* Memory safe function to write hexvalue <i> to fd <d>. */
-
-{
-    int j;
-    char c;
-
-    for (j = 2 * sizeof i; --j >= 0; i <<= 4) {
-        c = (i >> (8 * sizeof i - 4) ) + '0';
-        if (c >= '9' + 1)
-            c += 'a' - ('9' + 1);
-        write(d, &c, 1);
-    }
-}
 
 /*-------------------------------------------------------------------------*/
 void
Index: 3-2-rel.6/src/interpret.c
--- 3-2-rel.6/src/interpret.c Tue, 30 Mar 1999 18:28:11 -0800 lars (lpmud/b/14_interpret. 1.52 644)
+++ 3-2-rel.6(w)/src/interpret.c Thu, 01 Apr 1999 09:19:24 -0800 lars (lpmud/b/14_interpret. 1.52 644)
@@ -5515,8 +5515,7 @@
             sp->u.vec = subtract_array(sp->u.vec, v);
             break;
         } else if ((sp-1)->type == T_MAPPING &&
-                   sp->type == T_MAPPING &&
-                   !sp->u.map->num_values)
+                   sp->type == T_MAPPING)
         {
             struct mapping *m;
 
Index: 3-2-rel.6/src/comm.c
--- 3-2-rel.6/src/comm.c Tue, 30 Mar 1999 18:28:11 -0800 lars (lpmud/d/2_comm1.c 1.33 644)
+++ 3-2-rel.6(w)/src/comm.c Thu, 05 Aug 1999 06:57:15 -0700 lars (lpmud/d/2_comm1.c 1.33 644)
@@ -494,7 +494,7 @@
     char host_name[MAXHOSTNAMELEN+1];
     struct hostent *hp;
     char *p;
-    int tmp;
+    unsigned long int tmp;
 
     if (gethostname(host_name, sizeof host_name) == -1) {
         perror("gethostname");
@@ -526,10 +526,12 @@
      */
     if (udp_port != -1)
     {
-        host_ip_addr.sin_addr.s_addr = INADDR_ANY;
+	memset(&host_ip_addr.sin_addr, 0, sizeof(host_ip_addr.sin_addr));
+        host_ip_addr.sin_addr = in6addr_any;
+	host_ip_addr.sin6_family = AF_INET6;
         host_ip_addr.sin_port = htons((u_short)udp_port);
         debug_message("UDP recv-socket requested for port: %d\n", udp_port);
-        udp_s = socket(host_ip_addr.sin_family, SOCK_DGRAM, 0);
+        udp_s = socket(AF_INET6, SOCK_DGRAM, 0);
         if (udp_s == -1)
         {
             perror("socket(udp_socket)");
@@ -551,7 +553,7 @@
          */
         for(;;) {
             if (-1 == bind(udp_s, (struct sockaddr *)&host_ip_addr
-                          , sizeof host_ip_addr))
+                          , sizeof (host_ip_addr)))
             {
                 if (errno == EADDRINUSE) {
                     fprintf(stderr, "UDP Socket already bound!\n");
@@ -564,6 +566,7 @@
                     udp_s = -1;
                 } else {
                     perror("udp-bind");
+		printf("%u\n", errno);
                     exit(1);
                 }
             }
@@ -638,7 +641,7 @@
  */
 
 {
-    int tmp;
+    unsigned long int tmp;
 #ifdef MAXNUMPORTS
     int i;
 #endif
@@ -667,8 +670,10 @@
             /* Real port number */
 
             host_ip_addr.sin_port = htons((u_short)PNUMBER);
-            host_ip_addr.sin_addr.s_addr = INADDR_ANY;
-            MUDSOCKET = socket(host_ip_addr.sin_family, SOCK_STREAM, 0);
+            host_ip_addr.sin_addr = in6addr_any;
+		host_ip_addr.sin6_family = AF_INET6;
+		memset(&host_ip_addr.sin_addr, 0, sizeof(host_ip_addr.sin_addr));
+            MUDSOCKET = socket(AF_INET6, SOCK_STREAM, 0);
             if ((int)MUDSOCKET == -1) {
                 perror("socket");
                 exit(1);
@@ -1264,7 +1269,7 @@
     while(MY_TRUE)
     {
         struct sockaddr_in addr;
-        int                length; /* length of <addr> */
+        unsigned long int                length; /* length of <addr> */
         struct timeval timeout;
 
         /* --- select() on the sockets and handle ERQ --- */
@@ -1659,7 +1664,7 @@
                 trace_level = 0;
                 udp_buf[sizeof(udp_buf) - 1] = '\0';
                 udp_buf[cnt] = '\0';
-                st = inet_ntoa(addr.sin_addr);
+                st = inet6_ntoa(addr.sin_addr);
                 push_string_malloced(st);
                 push_string_malloced(udp_buf);
                 push_number(ntohs(addr.sin_port));
@@ -4156,7 +4161,7 @@
     /* Return the IP address as string.
      */
 
-    str = string_copy(inet_ntoa(ip->addr.sin_addr));
+    str = string_copy(inet6_ntoa(ip->addr.sin_addr));
     if (!str)
     {
         inter_sp = sp - 1;
@@ -4200,7 +4205,7 @@
 {
     char buf[20];
 
-    sprintf(buf, "\"%s\"", inet_ntoa(host_ip_number));
+    sprintf(buf, "\"%s\"", inet6_ntoa(host_ip_number));
     return string_copy(buf);
 }
 
@@ -4746,8 +4751,8 @@
 
         if (sscanf(to_host, "%d.%d.%d.%d", &ip1, &ip2, &ip3, &ip4) == 4)
         {
-            name.sin_addr.s_addr = inet_addr(to_host);
-            name.sin_family = AF_INET;
+            name.sin_addr = inet6_addr(to_host);
+            name.sin_family = AF_INET6;
         }
         else
         {
@@ -4755,7 +4760,7 @@
             if (hp == 0)
                 break;
             memcpy(&name.sin_addr, hp->h_addr, hp->h_length);
-            name.sin_family = AF_INET;
+            name.sin_family = AF_INET6;
         }
         name.sin_port = htons(to_port);
 
@@ -4811,7 +4816,8 @@
 
 #ifdef SO_SNDBUF
     {
-        int old, optlen;
+        int old;
+        unsigned long int optlen;
         struct interactive *ip;
 
         if (!(ip = O_GET_INTERACTIVE(current_object))
@@ -5228,7 +5234,7 @@
     struct object *ob;
     struct interactive *ip;
     struct sockaddr_in addr;
-    int length;
+    unsigned long length;
 
     length = sizeof(addr);
 
Index: 3-2-rel.6/src/comm.h
--- 3-2-rel.6/src/comm.h Wed, 10 Mar 1999 16:57:45 -0800 lars (lpmud/d/3_comm.h 1.10 644)
+++ 3-2-rel.6(w)/src/comm.h Tue, 09 Feb 1999 17:54:01 -0800 lars (lpmud/d/3_comm.h 1.10 644)
@@ -8,7 +8,6 @@
 #include "object.h"     /* struct object */
 #include "sent.h"       /* struct shadow_sentence */
 
-
 #ifdef SOCKET_HEADER
 #    include SOCKET_HEADER
 #endif
@@ -43,6 +42,7 @@
 
 #define MAX_TEXT  2048
 
+#include "mudipv6.h"
 
 /* --- Types --- */
 
@@ -207,6 +207,10 @@
 
 /* --- Prototypes --- */
 
+#ifdef VARPROT
+   #undef VARPROT
+   #define VARPROT(proto,like,form,var) proto FORMATDEBUG(like,form,var)
+#endif
 extern void  initialize_host_ip_number(void);
 extern void  prepare_ipc(void);
 extern void  ipc_remove(void);
Index: 3-2-rel.6/src/call_out.c
--- 3-2-rel.6/src/call_out.c Mon, 29 Mar 1999 16:16:15 -0800 lars (lpmud/d/5_call_out.c 1.12 644)
+++ 3-2-rel.6(w)/src/call_out.c Thu, 01 Apr 1999 08:45:13 -0800 lars (lpmud/d/5_call_out.c 1.12 644)
@@ -661,7 +661,7 @@
                 {
                     assigned_eval_cost = eval_cost = user->call_out_cost;
                 }
-                sapply_int(cop->function.named.name, ob, num_arg, MY_TRUE);
+                sapply(cop->function.named.name, ob, num_arg);
                 user->call_out_cost = eval_cost;
             }
             free_string(cop->function.named.name);
Index: 3-2-rel.6/src/backend.c
--- 3-2-rel.6/src/backend.c Tue, 30 Mar 1999 18:28:11 -0800 lars (lpmud/d/6_backend.c 1.36 644)
+++ 3-2-rel.6(w)/src/backend.c Thu, 01 Apr 1999 08:45:18 -0800 lars (lpmud/d/6_backend.c 1.36 644)
@@ -366,7 +366,7 @@
          */
         remove_destructed_objects();
 
-#if !defined(OLD_RESET) && defined(DEBUG)
+#if 0 && !defined(OLD_RESET) && defined(DEBUG)
         /* Check the sanity of the object list */
         /* TODO: Remove me for 3.2.6 */
         {
Index: 3-2-rel.6/src/Makefile.in
--- 3-2-rel.6/src/Makefile.in Tue, 30 Mar 1999 18:28:11 -0800 lars (lpmud/d/17_Makefile.i 1.21 644)
+++ 3-2-rel.6(w)/src/Makefile.in Tue, 09 Feb 1999 18:12:19 -0800 lars (lpmud/d/17_Makefile.i 1.21 644)
@@ -75,7 +75,7 @@
       port.c ptrtable.c \
       random.c regexp.c rxcache.c simulate.c simul_efun.c stralloc.c \
       sprintf.c swap.c wiz_list.c $(MALLOC).c
-OBJ=lang.o lex.o main.o interpret.o simulate.o object.o backend.o array.o\
+OBJ=mudipv6.o lang.o lex.o main.o interpret.o simulate.o object.o backend.o array.o\
     comm.o ed.o regexp.o mapping.o wiz_list.o swap.o $(MALLOC).o\
     call_out.o otable.o dumpstat.o stralloc.o hash.o port.o\
     access_check.o parse_old.o parse.o simul_efun.o sprintf.o\
Index: 3-2-rel.6/src/hosts/be/Makefile
--- 3-2-rel.6/src/hosts/be/Makefile Tue, 30 Mar 1999 18:28:11 -0800 lars (lpmud/e/37_Makefile 1.33 644)
+++ 3-2-rel.6(w)/src/hosts/be/Makefile Thu, 01 Apr 1999 08:45:27 -0800 lars (lpmud/e/37_Makefile 1.33 644)
@@ -96,12 +96,12 @@
 # $Format: "SETVERFLAGS = -app $ReleaseMajor$ $ReleaseMinor$ $ReleaseMicro$"$
SETVERFLAGS = -app 3 2 7
 
-# $Format: "ifeq ($ReleaseType$, rel)"$
ifeq (rel, rel)
+# $Format: "ifneq ($ReleaseType$, rel)"$
ifneq (rel, rel)
 # $Format: "  SETVERFLAGS += d $ProjectMinorVersion$"$
  SETVERFLAGS += d 7
+  SETVERFLAGS += d 54
 # $Format: "  VSTRING = $ReleaseMajor$.$ReleaseMinor$.$ReleaseMicro$-dev.$ProjectMinorVersion$"$
  VSTRING = 3.2.7-dev.7
+  VSTRING = 3.2.6-dev.54
 else
 # $Format: "  SETVERFLAGS += f"$
  SETVERFLAGS += f
Index: 3-2-rel.6/CHANGELOG
--- 3-2-rel.6/CHANGELOG Tue, 30 Mar 1999 18:28:11 -0800 lars (lpmud/e/38_CHANGELOG. 1.70 644)
+++ 3-2-rel.6(w)/CHANGELOG Thu, 01 Apr 1999 09:28:43 -0800 lars (lpmud/e/38_CHANGELOG. 1.70 644)
@@ -1,6 +1,19 @@
 This file lists all changes made to the game driver in all gory detail.
 See the file HISTORY for a user-oriented summary of all the changes.
 
+01-Apr-1999 (Lars Duening) -- Re-Release 3.2.6
+    - (call_out.c) Undid the change that callout can call protected
+        functions: this inability was intentional for security reasons.
+    - (backend.c) The consistency check of the object list was still
+        active. Now the code is still there, but deactivated.
+    - (doc/LPC/functions, doc/efun/call_out, doc/efun/call_other) Added
+        a bit documentation regarding protected functions (thanks, Macbeth!).
+    - (interpret.c, doc/LPC/operators) Subtraction of mappings allows
+        any width of the subtrahend.
+
+31-Mar-1999 (Lars Duening)
+    - (HISTORY, hosts/be/Makefile) Small corrections.
+
 31-Mar-1999 (Lars Duening) -- Release 3.2.6
     - Froze 3.2.6-dev.76 for release.
 
Index: 3-2-rel.6/src/main.h
--- 3-2-rel.6/src/main.h Fri, 26 Mar 1999 19:27:43 -0800 lars (lpmud/f/31_main.h 1.3 644)
+++ 3-2-rel.6(w)/src/main.h Mon, 26 Jul 1999 18:46:20 -0700 lars (lpmud/f/31_main.h 1.3 644)
@@ -71,7 +71,6 @@
 
 void reallocate_reserved_areas(void);
 
-extern void writex(int d, p_uint i);
 extern void writed(int d, p_uint i);
 
 #endif /* __MAIN_H__ */
Index: 3-2-rel.6/HISTORY
--- 3-2-rel.6/HISTORY Tue, 30 Mar 1999 18:28:11 -0800 lars (lpmud/f/49_HISTORY 1.47 644)
+++ 3-2-rel.6(w)/HISTORY Thu, 01 Apr 1999 09:22:42 -0800 lars (lpmud/f/49_HISTORY 1.47 644)
@@ -4,12 +4,10 @@
 
 For a detailed list of all changes see the file CHANGELOG.
 
-31-Mar-1999 (Lars Duening) -- Release 3.2.6
+01-Apr-1999 (Lars Duening) -- Release 3.2.6
     - Changed efuns:
         + allocate_mapping() renamed to m_allocate(). The old name
             is still available as alias.
-        + call_out() can call protected functions given as strings (as
-            it already could call static functions before).
         + clone_object() accepts objects as templates.
         + efun308() renamed to set_environment(). The old name is
           still available as alias.
@@ -70,8 +68,6 @@
     - Compiler:
         + New predefined macro __MAX_EVAL_COST__ expands to the evaluation
             cost limit.
-        + New predefined macro __MAX_EVAL_TIME__ expands to the evaluation
-            time limit.
         + Bugfix: __DOMAIN_NAME__ on some machines returned the NIS, not the
             DNS domain.
         + Bugfix: __MASTER_NAME__ could be set to a non-canonic name.
@@ -97,6 +93,8 @@
         + If used, the __INIT() function is protected instead of global, and
             can't be called from outside the objects anymore (it shouldn't be
             callable at all anyway).
+        + When subtracting mappings from each other, the subtrahend may
+            be of any width, but only its keys count.
         + The 'status tables' command has an additional entry 'Object status'.
         + Bugfix: fixed an eval cost leak in catch().
         + Bugfix: fixed memory leak in terminal_colour().
Index: 3-2-rel.6/doc/efun/call_other
--- 3-2-rel.6/doc/efun/call_other Wed, 10 Mar 1999 14:50:41 -0800 lars (lpmud/l/11_call_other 1.2 644)
+++ 3-2-rel.6(w)/doc/efun/call_other Thu, 01 Apr 1999 09:01:57 -0800 lars (lpmud/l/11_call_other 1.2 644)
@@ -15,7 +15,10 @@
 
 	If ob does not define a publicly accessible function of the
 	specified name, call_other() will return 0, which is
-	indistinguishable from a function returning 0.
+	indistinguishable from a function returning 0. "publicly
+        accessible" means "public" when calling other objects, and
+        "public" or "static" when calling this_object(). "private"
+        and "protected" function can never be called with call_other().
 
 	The return type of call_other() is 'any' be default. However,
 	if your LPC code uses #pragma strict_types, the return type is
@@ -39,5 +42,5 @@
 
 SEE ALSO
 	function_exists(E), call_resolved(E), create(E), pragma(LPC),
-	extern_call(E)
+	extern_call(E), functions(LPC)
 
Index: 3-2-rel.6/doc/efun/call_out
--- 3-2-rel.6/doc/efun/call_out Mon, 29 Mar 1999 16:16:15 -0800 lars (lpmud/m/43_call_out 1.1 644)
+++ 3-2-rel.6(w)/doc/efun/call_out Thu, 01 Apr 1999 09:01:57 -0800 lars (lpmud/m/43_call_out 1.1 644)
@@ -12,6 +12,10 @@
 	possible to use say() or write() which rely on a current
 	user to be something useful.
 
+        call_out() can only call functions which are publicly accessible,
+        i.e. "public" and "static" functions. "private" and "protected"
+        functions can't be called.
+
 	The execution of the call_out()s implies a simple (not
 	exhaustive) measure against rabbits: the evaluation costs of
 	those call_outs() executing at the same time are summed up on
Index: 3-2-rel.6/doc/LPC/functions
--- 3-2-rel.6/doc/LPC/functions Tue, 30 Mar 1999 18:28:11 -0800 lars (lpmud/r/28_functions 1.2 644)
+++ 3-2-rel.6(w)/doc/LPC/functions Thu, 01 Apr 1999 09:01:43 -0800 lars (lpmud/r/28_functions 1.2 644)
@@ -51,7 +51,10 @@
 
 		private variables static functions inherit "/foo/bar";
 
-	The type modfifier 'protected' is currently unused.
+	Functions declared as 'protected' can only be used explicitely
+        (function()) or via closures (#'function). They can't be called
+        with call_other(), call_out(), filter() or map(), to allow security
+        against computed calls.
 
 	Functions that are declared as ``nomask'' cannot be overloaded
 	by a inheriting program.
@@ -61,4 +64,4 @@
 
 SEE ALSO
 	types(LPC), modifiers(LPC), varargs(LPC), call_other(E),
-	simul_efun(C)
+	simul_efun(C), call_out(E)
Index: 3-2-rel.6/doc/LPC/operators
--- 3-2-rel.6/doc/LPC/operators Tue, 30 Mar 1999 18:28:11 -0800 lars (lpmud/m/0_operators 1.2 644)
+++ 3-2-rel.6(w)/doc/LPC/operators Thu, 01 Apr 1999 09:20:59 -0800 lars (lpmud/m/0_operators 1.2 644)
@@ -80,9 +80,12 @@
 
 	expr1 - expr2	Subtract 'expr2' from 'expr1'. Valid for
 			numbers, strings, arrays, mappings.
-			For arrays and mappings, all occurences of the
+			For arrays, all occurences of the
 			elements in 'expr2' are removed from 'expr1',
 			and the result is returned.
+                        For mapping, all occurances of elemens in 'expr1'
+                        which have a matching key in 'expr2' are removed, and
+                        the result is returned.
 
 	expr1 * expr2	Multiply 'expr1' with 'expr2'.
 
Index: 3-2-rel.6/src/mudipv6.h
--- 3-2-rel.6/src/mudipv6.h Thu, 05 Aug 1999 12:07:48 -0700 lars ()
+++ 3-2-rel.6(w)/src/mudipv6.h Wed, 04 Aug 1999 03:55:11 -0700 lars (lpmud/D/39_mudipv6.h  644)
@@ -0,0 +1,17 @@
+#ifndef _driverv6_
+
+	#define _driverv6_
+	#define sockaddr_in sockaddr_in6
+
+	#define sin_port sin6_port
+	#define sin_addr sin6_addr
+	#define sin_family sin6_family
+	#define s_addr s6_addr
+	#define in_addr in6_addr
+
+char *inet6_ntoa(struct in6_addr in);
+
+struct in6_addr inet6_addr(char *to_host);
+
+#endif
+
Index: 3-2-rel.6/src/mudipv6.c
--- 3-2-rel.6/src/mudipv6.c Thu, 05 Aug 1999 12:07:48 -0700 lars ()
+++ 3-2-rel.6(w)/src/mudipv6.c Wed, 04 Aug 1999 03:04:49 -0700 lars (lpmud/D/40_mudipv6.c  644)
@@ -0,0 +1,22 @@
+#include <netinet/in.h>
+#include <sys/socket.h>
+
+#include "mudipv6.h"
+
+char *inet6_ntoa(struct in6_addr in)
+{
+	static char str[4097];
+
+	inet_ntop(AF_INET6, &in, str, 4096);
+	return str;
+}
+
+
+struct in6_addr inet6_addr(char *to_host)
+{
+	struct in6_addr addr;
+
+	inet_pton(AF_INET6, to_host, &addr);
+	return addr;
+}
+
Index: 3-2-rel.6/src/config.WL
--- 3-2-rel.6/src/config.WL Thu, 05 Aug 1999 12:07:48 -0700 lars ()
+++ 3-2-rel.6(w)/src/config.WL Wed, 07 Apr 1999 02:42:59 -0700 lars (lpmud/D/41_config.WL  644)
@@ -0,0 +1,311 @@
+/* modified for Wunderland by Holger@Wunderland 07.04.99 */
+
+#ifndef __CONFIG_H__
+#define __CONFIG_H__ 1
+
+/* Should code for the external request demon be included?
+ */
+#define ERQ_DEMON
+
+/* Maximum sizes for an erq send or reply.
+ */
+#define ERQ_MAX_REPLY 1024
+#define ERQ_MAX_SEND  1024
+
+/* Only executables that are safe no matter what arguments/options
+ * are supplied should be placed in ERQ_DIR. If you want something
+ * different, consider writing a wrapper program or shell script.
+ */
+#define ERQ_DIR "/usr/mud/bin/erq"
+
+/* #define ACCESS_CONTROL if you want the driver to do any access control.
+ */
+#undef ACCESS_CONTROL
+
+/* file for access permissions data */
+#define ACCESS_FILE "ACCESS.ALLOW"
+
+/* logfile to show valid and rejected connections
+ * simple not define this for NO logs
+ */
+/* #define ACCESS_LOG "access.allow.log" */
+
+/*
+ * Define the maximum size of log files (in bytes).
+ */
+#define MAX_LOG_SIZE                50000
+/*
+ * Max size of a file allowed to be read by 'read_file()'.
+ */
+#define READ_FILE_MAX_SIZE        50000
+
+/*
+ * If an object is left alone for a certain time, then the
+ * function clean_up will be called. This function can do anything,
+ * like destructing the object. If the function isn't defined by the
+ * object, then nothing will happen.
+ *
+ * This time should be substantially longer than the swapping time.
+ */
+#define TIME_TO_CLEAN_UP          14400  /* 4 Stunden */
+
+/*
+ * How long time until an unused object is swapped out.
+ * Machine with too many players and too little memory: 900 (15 minutes)
+ * Machine with few players and lot of memory: 10000
+ * Machine with infinite memory: 0 (never swap).
+ */
+#define TIME_TO_SWAP		5400  /* 1,5 Stunden */
+#define TIME_TO_SWAP_VARIABLES	7200  /* 2   Stunden */
+
+/*
+ * How many seconds until an object is reset again.
+ * Set this value high if big system, otherwise low.
+ * No castles:         1800        (30 minutes)
+ * >100 castles:10000        (almost 3 hours).
+ */
+#define TIME_TO_RESET          3600        /* one hour */
+
+/*
+ * Define the maximum stack size of the stack machine. This stack will also
+ * contain all local variables and arguments.
+ */
+#define EVALUATOR_STACK_SIZE      2000
+
+/*
+ * Define the maximum call depth for functions.
+ * MAX_USER_TRACE is used for for normal program execution, the full
+ * MAX_TRACE is only available in error handling.
+ */
+#define MAX_USER_TRACE              60
+#define MAX_TRACE                   65
+
+/*
+ * Define the size of the compiler stack. This defines how complex
+ * expressions the compiler can parse. The value should be big enough.
+ */
+#define COMPILER_STACK_SIZE        400
+
+/*
+ * Maximum number of bits in a bit field. They are stored in printable
+ * strings, 6 bits per byte.
+ * The limit is more based on considerations of speed than memory
+ * consumption.
+ */
+#define MAX_BITS                  6144        /* 1 KByte */
+
+/*
+ * Define what port number the game is to use.
+ */
+#define PORTNO                    4711
+
+/* Maximum numbers of ports the GD accepts connections to.
+ * If this is not defined, the original one-port-code takes effect.
+ * Compiling the GD with ENFORCE_ONE_PORT defined overrides this definition.
+ */
+#define MAXNUMPORTS                 3
+
+/*
+ * Max number of local variables in a function.
+ */
+#define MAX_LOCAL                   40
+
+/* Maximum number of evaluated nodes/loop.
+ * If this is exceeded, the current function is halted.
+ * ls() can take about 30000 for large directories.
+ */
+#define MAX_COST               1000000
+
+/* to catch an eval_cost too big error in an object that called recursive
+ * master functions, CATCH_RESERVED_COST should be greater than
+ * MASTER_RESERVED_COST * 2.
+ */
+#define CATCH_RESERVED_COST       2000
+#define MASTER_RESERVED_COST     0x200 /* must be power of 2 */
+
+/*
+ * Where to swap out objects. This file is not used if TIME_TO_SWAP is 0.
+ * If the mudlib is mounted via nfs but your /tmp isn't, and isn't purged
+ * periodically either, it's a good idea to place the swap file there.
+ * The hostname will be appended to the filename defined here.
+ */
+#define SWAP_FILE		"/usr/mud/swapfiles/Mudswapfile"
+
+/*
+ * This is the maximum array size allowed for one single array.
+ */
+#define MAX_ARRAY_SIZE            5000
+
+/*
+ * Maximum number of players in the game.
+ */
+#define MAX_PLAYERS                 60
+
+/*
+ * When uploading files, we want fast response; however, normal players
+ * shouldn't be able to hog the system in this way.  Define ALLOWED_ED_CMDS
+ * to be the ratio of the no of ed cmds executed per player cmd, and
+ * MAX_CMDS_PER_BEAT to be the max no of buffered player commands the
+ * system will accept in each heartbeat interval.
+ */
+
+#define ALLOWED_ED_CMDS             20
+#define MAX_CMDS_PER_BEAT            5 /* not implemented yet :-( */
+
+/*
+ * Reserve an extra memory area from malloc(), to free when we run out
+ * of memory to get some warning and start Armageddon.
+ * If this value is 0, no area will be reserved.
+ */
+#define RESERVED_USER_SIZE      800000
+#define RESERVED_MASTER_SIZE    100000
+#define RESERVED_SYSTEM_SIZE    200000
+
+/* Define the size of the shared string hash table.  This number needn't
+ * be prime, probably between 1000 and 30000; if you set it to about 1/5
+ * of the number of distinct strings you have, you will get a hit ratio
+ * (number of comparisons to find a string) very close to 1, as found strings
+ * are automatically moved to the head of a hash chain.  You will never
+ * need more, and you will still get good results with a smaller table.
+ * If the size is a power of two, hashing will be faster.
+ */
+
+#define HTABLE_SIZE               8192
+
+/* Define the size of the table of defines, reserved words, identifiers
+ * and efun names. Should be either several times smaller than HTABLE_SIZE
+ * or identical with it.
+ */
+#define ITABLE_SIZE                256   /* 256 is probably fastest */
+
+/* Object hash table size.
+ * Define this like you did with the strings; probably set to about 1/4 of
+ * the number of objects in a game, as the distribution of accesses to
+ * objects is somewhat more uniform than that of strings.
+ */
+
+#define OTABLE_SIZE               4096
+
+/* Maximum size of an expanded preprocessor definition.
+ */
+
+#define DEFMAX                   65000
+
+/* the number of apply_low cache entries will be 2^APPLY_CACHE_BITS.
+ */
+#define APPLY_CACHE_BITS            12
+
+/* The parameters of the regular expression/result cache.
+ * The expression cache uses a hashtable of RXCACHE_TABLE entries.
+ * Undefine RXCACHE_TABLE to disable the all regexp caching.
+ */
+
+#define RXCACHE_TABLE            16384
+
+/*
+ * Should newly defined LPC functions be aligned in memory? this costs 1.5
+ * bytes on average, but saves some time when searching in case of an
+ * apply_low cache function miss.
+ */
+#define ALIGN_FUNCTIONS
+
+/*
+ * Define COMPAT_MODE if you are using mudlib 2.4.6 or older. This
+ * replaces the old command line option -o.
+ */
+
+#undef COMPAT_MODE
+#define NATIVE_MODE
+#define EUIDS
+
+/* Define SUPPLY_PARSE_COMMAND if you want the efun parse_command.
+ * If you don't need it, better #undef it, lest some new wiz can inadvertly
+ * crash your mud or make it leak memory.
+ */
+#define SUPPLY_PARSE_COMMAND
+
+/* Define INITIALIZATION_BY___INIT if you want all initializations of variables
+ * to be suspended till the object is created ( as supposed to initialization
+ * at compile time; the latter is more memory efficient for loading and faster
+ * at cloning, while the former allows to use efuns, e.g. shutdown().
+ */
+
+#define INITIALIZATION_BY___INIT
+
+/* Define MASTER_NAME if you want something different from "obj/master" resp.
+ * "secure/master" as default.
+ */
+/* #define MASTER_NAME "kernel/master" */
+
+/*
+ * Define MAX_BYTE_TRANSFER to the number of bytes you allow to be read
+ * and written with read_bytes and write_bytes
+ */
+
+#define MAX_BYTE_TRANSFER        200000 /* Einige Files > 50kB */
+
+/*
+ * CATCH_UDP_PORT
+ *
+ * Define this if the mud are to catch incoming udp messages on a
+ * specific port. If == -1 it will not be used unless the mud is started
+ * with the -u### flag. Where ### is the portnumber for the udp port.
+ * If undefined the -u flag will be ignored.
+ */
+#define CATCH_UDP_PORT            4246
+#define UDP_SEND
+
+/* Maximum size of a socket send buffer.
+ */
+#define SET_BUFFER_SIZE_MAX      65536
+
+/* Define this macro to get the old reset implementation.
+ * TODO: Get rid of all OLD_RESET code.
+ */
+/* #define OLD_RESET */
+
+#ifdef OLD_RESET
+/* Object reset times are not exact, but instead rounded up to the
+ * next multiple of RESET_GRANULARITY. This should be between 10
+ * and 60 seconds (see otable.c for a more detailed discussion).
+ */
+#define RESET_GRANULARITY          300   /* five minutes */
+#endif
+
+/* Runtime statistics:
+ *  COMM_STAT: count number and size of outgoing packets.
+ *  APPLY_CACHE_STAT: count number of hits and misses in the apply cache.
+ */
+#define COMM_STAT
+#define APPLY_CACHE_STAT
+
+/* When smalloc is used without SBRK_OK and MIN_MALLOCED is defined,
+ * the gamedriver will reserve this amount of memory on startup for
+ * large blocks, thus reducing the large block fragmentation. The value
+ * therefore should be a significantly large multiple of the large
+ * chunk size.
+ */
+/* #define MIN_MALLOCED         0x1000000 */
+
+/* When smalloc is used, these two values give the upper limits for
+ * large and small block allocation (useful for systems with no
+ * functioning process limit).
+ */
+#define MAX_MALLOCED         0x4000000
+#define MAX_SMALL_MALLOCED   0x1000000
+
+/* Define this to annotate all allocations with file:line of the driver
+ * source responsible for it.
+ */
+#undef SMALLOC_TRACE
+
+/* Define this to annotate all allocations with file:line of the lpc program
+ * responsible for it.
+ */
+#undef SMALLOC_LPC_TRACE
+
+/* If using TRACE_CODE , how many instructions should be kept? */
+#define TOTAL_TRACE_LENGTH      0x1000
+
+#endif /* __CONFIG_H__ */
+
Index: 3-2-rel.6/src/Makefile.WL
--- 3-2-rel.6/src/Makefile.WL Thu, 05 Aug 1999 12:07:48 -0700 lars ()
+++ 3-2-rel.6(w)/src/Makefile.WL Wed, 07 Apr 1999 02:43:13 -0700 lars (lpmud/D/42_Makefile.W  644)
@@ -0,0 +1,342 @@
+# Generated automatically from Makefile.in by configure.
+# These lines are needed on some machines.
+MAKE=make
+SHELL=/bin/sh
+INSTALL=/usr/bin/install -c
+#
+CC=gcc
+#
+YACC = yacc
+YACCTAB = y.tab.
+#
+RM = rm -f
+MV = mv
+CP = cp
+#
+# Chose one of these mallocs:
+# Satoria's malloc. Uses little memory. With FAST_FIT, it is also one of the
+# fastest. Required for garbage collection.
+MALLOC=smalloc
+# must not #define SBRK_OK without static linking on __RS6000__
+# How can static linking be done?
+#
+# Use the standard malloc on your system:
+#MALLOC=sysmalloc
+#
+# Set MUD_LIB to the directory which contains the mud data. Was formerly
+# defined in config.h !
+MUD_LIB = /usr/mud/mudlib
+#
+# Set BINDIR to the directory where you want to install the executables.
+BINDIR = /usr/mud/bin
+#
+#PROFIL= -DOPCPROF -DVERBOSE_OPCPROF
+#PROFIL=-p -DMARK
+#PROFIL=-pg
+PROFIL=
+#Enable warnings from the compiler, if wanted.
+WARN= # no warning options - will work with all compilers :-)
+#WARN= -Wall -Wshadow -Dlint
+#WARN= -Wall -Wshadow -Wno-parentheses # gcc settings
+#
+# Optimization and source level debugging options.
+# adding a -fomit-frame-pointer on the NeXT (gcc version 1.93 (68k, MIT syntax))
+# will corrupt the driver.
+OPTIMIZE = -O4 -g -fstrength-reduce -fno-force-mem -fno-force-addr -fno-inline-functions -fomit-frame-pointer # high optimization
+#OPTIMIZE= -O4 -g -fstrength-reduce -fno-force-mem -fno-force-addr -fno-inline-functions # for better debugging
+#OPTIMIZE= -g # no optimization; for frequent recompilations.
+#
+# debugging options: [-DDEBUG] [-DYYDEBUG|-DYYDEBUG=1] [-DTRACE_CODE]
+# -DDEBUG: Enable run time debugging. It will use more time and space.
+# When the flag is changed, be sure to recompile everything.
+# Simply comment out this line if not wanted.
+# If you change anything in the source, you are strongly encouraged to have
+# DEBUG defined.
+# If you will not change anything, you are still encouraged to have
+# it defined, if you want to locate any game driver bugs.
+#DEBUG=-DDEBUG -DTRACE_CODE
+#DEBUG=
+#
+MPATH=-DMUD_LIB='"$(MUD_LIB)"' -DBINDIR='"$(BINDIR)"'
+#
+CFLAGS=  $(OPTIMIZE) $(DEBUG) -DMALLOC_$(MALLOC) $(WARN) $(MPATH) $(PROFIL)
+#
+LIBS= -lm
+#
+LDFLAGS=
+#
+#Note that, if you use smalloc with SBRK_OK(which is the default), and
+#don't link statically, it could happen that the system malloc is linked
+#along with the one from smalloc; this combination is bound to cause crashes.
+MFLAGS = "BINDIR=$(BINDIR)" "MUD_LIB=$(MUD_LIB)"
+#
+SRC = access_check.c array.c backend.c call_out.c closure.c comm.c \
+      dumpstat.c ed.c efuns.c gcollect.c hash.c heartbeat.c interpret.c \
+      lang.c lex.c main.c mapping.c object.c otable.c parse.c parse_old.c \
+      port.c ptrtable.c \
+      random.c regexp.c rxcache.c simulate.c simul_efun.c stralloc.c \
+      sprintf.c swap.c wiz_list.c $(MALLOC).c
+OBJ=lang.o lex.o main.o interpret.o simulate.o object.o backend.o array.o\
+    comm.o ed.o regexp.o mapping.o wiz_list.o swap.o $(MALLOC).o\
+    call_out.o otable.o dumpstat.o stralloc.o hash.o port.o\
+    access_check.o parse_old.o parse.o simul_efun.o sprintf.o\
+    gcollect.o closure.o random.o rxcache.o efuns.o ptrtable.o \
+    heartbeat.o 
+
+driver: $(OBJ)
+	$(CC) $(OPTIMIZE) $(LDFLAGS) $(OBJ) -o $@ $(LIBS)
+
+install: driver
+	$(INSTALL) -c $? $(BINDIR)/driver326
+
+install-utils:
+	(cd util; $(MAKE) $(MFLAGS) install)
+
+utils:
+	(cd util; $(MAKE) $(MFLAGS))
+
+parse: driver
+	-$(MV) parse parse.old
+	$(CP) driver parse
+
+lint: *.c
+	lint *.c
+
+clean:
+	$(RM) $(YACCTAB)h $(YACCTAB)c make_func.c *.o make_func
+	$(RM) efun_defs.c instrs.h lang.y lang.h lang.c y.output tags TAGS
+	$(RM) parse core mudlib/core mudlib/debug.log lpmud.log driver
+	(cd util ; echo "Cleaning in util." ; $(MAKE) clean)
+
+distclean: clean
+	$(RM) driver config.status machine.h Makefile
+
+tags: $(SRC)
+	ctags $(SRC)
+
+TAGS: $(SRC)
+	etags $(SRC)
+
+make_func.c: make_func.y
+	$(YACC) make_func.y
+	$(MV) $(YACCTAB)c make_func.c
+	
+
+make_func.o : make_func.c driver.h config.h machine.h port.h
+	  $(CC) $(CFLAGS) -DYACC='"$(YACC)"' -c make_func.c
+
+make_func: make_func.o hash.o exec.h
+	$(CC) $(OPTIMIZE) $(LDFLAGS) make_func.o hash.o -o make_func
+
+lang.y efun_defs.c instrs.h: func_spec make_func prolang.y config.h
+	$(RM) efun_defs.c
+	$(RM) lang.y
+	./make_func
+
+lang.c lang.h: lang.y
+	$(YACC) -d -v lang.y
+	$(MV) $(YACCTAB)c lang.c
+	
+	$(MV) $(YACCTAB)h lang.h
+
+$(MALLOC).o : $(MALLOC).c driver.h config.h machine.h port.h
+	$(RM) smalloc.o
+	$(RM) sysmalloc.o
+	$(CC) $(CFLAGS) -c $(MALLOC).c
+
+#--------------------------------------------------------
+# Dependencies, manual and automatic.
+
+array.o : instrs.h lang.h
+
+closure.o : instrs.h lang.h
+
+dumpstat.o : instrs.h lang.h
+
+gcollect.o : instrs.h lang.h
+
+interpret.o : instrs.h lang.h
+
+lang.o : driver.h config.h machine.h lex.h interpret.h object.h \
+    instrs.h port.h switch.h stralloc.h
+
+lex.o : instrs.h lang.h efun_defs.c
+
+simul_efun.o : instrs.h lang.h
+
+simulate.o : instrs.h
+
+sprintf.o : instrs.h
+
+# --- DO NOT MODIFY THIS LINE -- AUTO-DEPENDS FOLLOW ---
+access_check.o : filestat.h comm.h access_check.h driver.h sent.h object.h \
+    interpret.h config.h port.h machine.h exec.h ptrtable.h instrs.h \
+    datatypes.h hosts/amiga/patchfloat.h
+
+array.o : wiz_list.h swap.h stralloc.h simulate.h rxcache.h regexp.h \
+    prolang.h object.h mapping.h main.h interpret.h instrs.h exec.h \
+    datatypes.h backend.h array.h my-alloca.h driver.h smalloc.h sent.h \
+    lang.h ptrtable.h port.h machine.h config.h hosts/amiga/patchfloat.h
+
+backend.o : wiz_list.h swap.h stralloc.h smalloc.h simulate.h rxcache.h \
+    regexp.h random.h otable.h object.h my-alloca.h mapping.h main.h lex.h \
+    interpret.h heartbeat.h gcollect.h filestat.h exec.h ed.h comm.h \
+    call_out.h array.h backend.h hosts/amiga/nsignal.h driver.h datatypes.h \
+    sent.h instrs.h ptrtable.h port.h machine.h config.h \
+    hosts/amiga/patchfloat.h
+
+call_out.o : wiz_list.h stralloc.h simulate.h object.h main.h interpret.h \
+    gcollect.h exec.h comm.h closure.h backend.h array.h call_out.h \
+    driver.h smalloc.h sent.h instrs.h ptrtable.h datatypes.h port.h \
+    machine.h config.h hosts/amiga/patchfloat.h
+
+closure.o : switch.h simul_efun.h simulate.h stralloc.h prolang.h object.h \
+    main.h lex.h instrs.h interpret.h exec.h array.h closure.h my-alloca.h \
+    driver.h ptrtable.h sent.h smalloc.h lang.h datatypes.h port.h \
+    machine.h config.h hosts/amiga/patchfloat.h
+
+comm.o : util/erq.h wiz_list.h stralloc.h simulate.h sent.h object.h main.h \
+    interpret.h gcollect.h filestat.h exec.h ed.h backend.h array.h \
+    access_check.h comm.h hosts/amiga/nsignal.h telnet.h my-alloca.h \
+    driver.h smalloc.h instrs.h ptrtable.h datatypes.h config.h port.h \
+    machine.h hosts/amiga/patchfloat.h
+
+dumpstat.o : smalloc.h simulate.h ptrtable.h prolang.h object.h mapping.h \
+    instrs.h interpret.h filestat.h exec.h comm.h array.h dumpstat.h \
+    driver.h datatypes.h sent.h lang.h port.h machine.h config.h \
+    hosts/amiga/patchfloat.h
+
+ed.o : stralloc.h simulate.h rxcache.h regexp.h object.h main.h interpret.h \
+    gcollect.h filestat.h comm.h closure.h ed.h driver.h smalloc.h sent.h \
+    instrs.h exec.h ptrtable.h datatypes.h port.h machine.h config.h \
+    hosts/amiga/patchfloat.h
+
+efuns.o : swap.h stralloc.h smalloc.h simulate.h mapping.h main.h \
+    interpret.h datatypes.h array.h efuns.h driver.h object.h exec.h sent.h \
+    instrs.h ptrtable.h port.h machine.h config.h hosts/amiga/patchfloat.h
+
+gcollect.o : wiz_list.h swap.h stralloc.h smalloc.h simul_efun.h simulate.h \
+    sent.h rxcache.h prolang.h otable.h object.h mapping.h main.h lex.h \
+    instrs.h interpret.h heartbeat.h filestat.h exec.h ed.h comm.h \
+    closure.h call_out.h backend.h array.h gcollect.h driver.h datatypes.h \
+    ptrtable.h regexp.h lang.h port.h machine.h config.h \
+    hosts/amiga/patchfloat.h
+
+hash.o : hash.h
+
+heartbeat.o : wiz_list.h simulate.h sent.h object.h gcollect.h datatypes.h \
+    comm.h backend.h array.h heartbeat.h driver.h interpret.h instrs.h \
+    exec.h main.h smalloc.h port.h machine.h config.h ptrtable.h \
+    hosts/amiga/patchfloat.h
+
+interpret.o : wiz_list.h switch.h swap.h sprintf.h smalloc.h stralloc.h \
+    simul_efun.h simulate.h sent.h random.h ptrtable.h prolang.h parse.h \
+    otable.h object.h mapping.h main.h lex.h instrs.h heartbeat.h \
+    gcollect.h exec.h efuns.h ed.h comm.h closure.h call_out.h backend.h \
+    array.h interpret.h my-rusage.h my-alloca.h driver.h datatypes.h lang.h \
+    port.h machine.h config.h hosts/amiga/patchfloat.h
+
+lang.o : wiz_list.h switch.h swap.h stralloc.h simul_efun.h simulate.h \
+    object.h mapping.h main.h lex.h instrs.h interpret.h gcollect.h exec.h \
+    closure.h backend.h array.h prolang.h my-alloca.h driver.h smalloc.h \
+    ptrtable.h sent.h datatypes.h lang.h port.h machine.h config.h \
+    hosts/amiga/patchfloat.h
+
+lex.o : efun_defs.c hosts/amiga/socket.h stralloc.h simul_efun.h simulate.h \
+    prolang.h patchlevel.h main.h instrs.h hash.h gcollect.h filestat.h \
+    exec.h comm.h closure.h backend.h array.h lex.h my-alloca.h driver.h \
+    ./hosts/amiga/socket_sim.h ./hosts/amiga/socket_tcp.h smalloc.h \
+    ptrtable.h object.h interpret.h sent.h lang.h datatypes.h port.h \
+    machine.h config.h ./hosts/amiga/socket_sim_protos.h \
+    hosts/amiga/patchfloat.h
+
+main.o : wiz_list.h swap.h stralloc.h simul_efun.h simulate.h rxcache.h \
+    random.h patchlevel.h otable.h object.h mapping.h lex.h interpret.h \
+    gcollect.h filestat.h comm.h array.h backend.h main.h \
+    hosts/amiga/socket.h my-alloca.h driver.h exec.h smalloc.h ptrtable.h \
+    sent.h instrs.h regexp.h datatypes.h ./hosts/amiga/socket_sim.h \
+    ./hosts/amiga/socket_tcp.h port.h machine.h config.h \
+    ./hosts/amiga/socket_sim_protos.h hosts/amiga/patchfloat.h
+
+make_func.o : hash.h exec.h my-alloca.h driver.h datatypes.h port.h \
+    machine.h config.h hosts/amiga/patchfloat.h
+
+mapping.o : wiz_list.h stralloc.h smalloc.h simulate.h regexp.h object.h \
+    main.h interpret.h gcollect.h backend.h array.h mapping.h my-alloca.h \
+    driver.h datatypes.h sent.h instrs.h exec.h ptrtable.h port.h machine.h \
+    config.h hosts/amiga/patchfloat.h
+
+object.o : wiz_list.h swap.h stralloc.h simulate.h sent.h random.h \
+    ptrtable.h prolang.h otable.h mapping.h main.h interpret.h filestat.h \
+    exec.h comm.h closure.h backend.h array.h object.h my-alloca.h driver.h \
+    smalloc.h instrs.h lang.h datatypes.h port.h machine.h config.h \
+    hosts/amiga/patchfloat.h
+
+otable.o : simulate.h object.h interpret.h hash.h gcollect.h comm.h \
+    backend.h otable.h driver.h sent.h instrs.h exec.h ptrtable.h \
+    datatypes.h main.h port.h machine.h config.h hosts/amiga/patchfloat.h
+
+parse.o : wiz_list.h stralloc.h simulate.h object.h main.h instrs.h \
+    interpret.h closure.h array.h parse.h driver.h smalloc.h sent.h exec.h \
+    ptrtable.h datatypes.h port.h machine.h config.h \
+    hosts/amiga/patchfloat.h
+
+parse_old.o : wiz_list.h simulate.h random.h object.h main.h interpret.h \
+    array.h parse.h driver.h sent.h instrs.h exec.h ptrtable.h datatypes.h \
+    smalloc.h port.h machine.h config.h hosts/amiga/patchfloat.h
+
+port.o : hosts/crypt.c main.h backend.h my-rusage.h driver.h interpret.h \
+    object.h port.h machine.h config.h ptrtable.h instrs.h datatypes.h \
+    sent.h exec.h hosts/amiga/patchfloat.h
+
+ptrtable.o : simulate.h ptrtable.h driver.h sent.h object.h instrs.h \
+    interpret.h port.h machine.h config.h exec.h datatypes.h \
+    hosts/amiga/patchfloat.h
+
+random.o : random.h driver.h port.h machine.h config.h \
+    hosts/amiga/patchfloat.h
+
+regexp.o : regexp.h driver.h port.h machine.h config.h \
+    hosts/amiga/patchfloat.h
+
+rxcache.o : stralloc.h smalloc.h regexp.h hash.h gcollect.h comm.h \
+    rxcache.h driver.h datatypes.h object.h interpret.h exec.h sent.h \
+    port.h machine.h config.h ptrtable.h instrs.h hosts/amiga/patchfloat.h
+
+simul_efun.o : swap.h stralloc.h simulate.h prolang.h parse.h object.h \
+    lex.h instrs.h interpret.h gcollect.h exec.h array.h simul_efun.h \
+    my-alloca.h driver.h smalloc.h sent.h lang.h ptrtable.h datatypes.h \
+    port.h machine.h config.h hosts/amiga/patchfloat.h
+
+simulate.o : wiz_list.h swap.h stralloc.h simul_efun.h sent.h rxcache.h \
+    prolang.h otable.h object.h mapping.h main.h lex.h instrs.h interpret.h \
+    heartbeat.h filestat.h exec.h ed.h dumpstat.h comm.h closure.h \
+    call_out.h backend.h array.h simulate.h hosts/amiga/nsignal.h \
+    my-alloca.h driver.h smalloc.h ptrtable.h regexp.h lang.h datatypes.h \
+    port.h machine.h config.h hosts/amiga/patchfloat.h
+
+smalloc.o : object.h exec.h simulate.h main.h gcollect.h backend.h comm.h \
+    smalloc.h driver.h sent.h interpret.h datatypes.h instrs.h port.h \
+    machine.h config.h ptrtable.h hosts/amiga/patchfloat.h
+
+sprintf.o : swap.h stralloc.h simul_efun.h simulate.h sent.h prolang.h \
+    object.h mapping.h main.h instrs.h interpret.h exec.h array.h sprintf.h \
+    driver.h smalloc.h ptrtable.h lang.h datatypes.h port.h machine.h \
+    config.h hosts/amiga/patchfloat.h
+
+stralloc.o : simulate.h hash.h gcollect.h comm.h stralloc.h driver.h sent.h \
+    object.h instrs.h interpret.h exec.h smalloc.h port.h machine.h \
+    config.h ptrtable.h datatypes.h hosts/amiga/patchfloat.h
+
+swap.o : hosts/amiga/socket.h wiz_list.h stralloc.h simul_efun.h simulate.h \
+    prolang.h random.h otable.h object.h mapping.h main.h interpret.h \
+    gcollect.h exec.h comm.h backend.h array.h swap.h driver.h \
+    ./hosts/amiga/socket_sim.h ./hosts/amiga/socket_tcp.h smalloc.h \
+    ptrtable.h sent.h instrs.h lang.h datatypes.h port.h machine.h config.h \
+    ./hosts/amiga/socket_sim_protos.h hosts/amiga/patchfloat.h
+
+wiz_list.o : stralloc.h object.h main.h interpret.h gcollect.h backend.h \
+    array.h wiz_list.h driver.h smalloc.h sent.h exec.h ptrtable.h instrs.h \
+    datatypes.h port.h machine.h config.h hosts/amiga/patchfloat.h
+
+# --- DO NOT MODIFY THIS LINE -- AUTO-DEPENDS PRECEDE ---
