diff -p ../mudos/v22.2a25/GNUmakefile.in ./GNUmakefile.in
*** ../mudos/v22.2a25/GNUmakefile.in	Wed Mar 04 09:49:32 1998
--- ./GNUmakefile.in	Thu Mar 04 12:14:44 1999
*************** neat:
*** 214,220 ****
  	-rm -f opcodes.h efunctions.h opc.h efun_protos.h
  	-rm -f malloc.c mallocwrapper.c
  	-rm -f func_spec.cpp applies.h applies_table.c files
! 	-rm -f grammar.y comptest* a.out
  	-rm -f packages/Makefile packages/GNUmakefile packages/packages
  
  # remove everything except configuration
--- 214,220 ----
  	-rm -f opcodes.h efunctions.h opc.h efun_protos.h
  	-rm -f malloc.c mallocwrapper.c
  	-rm -f func_spec.cpp applies.h applies_table.c files
! 	-rm -f grammar.y comptest* $(A_OUT)
  	-rm -f packages/Makefile packages/GNUmakefile packages/packages
  
  # remove everything except configuration
diff -p ../mudos/v22.2a25/arch.h ./arch.h
*** ../mudos/v22.2a25/arch.h	Wed Mar 04 09:49:56 1998
--- ./arch.h	Thu Mar 04 12:14:44 1999
***************
*** 7,12 ****
--- 7,27 ----
  #define ARCH "Sequent DYNIX"
  #endif
  
+ /*
+  * Note - Cygwin runs under windows and automatically
+  * defines a number of windows related things. These
+  * must be undef'd so that the 'normal' windows port code
+  * in MudOS is not used.
+  */
+ #ifdef __CYGWIN__
+ #undef WINNT
+ #undef WIN95
+ #undef WIN98
+ #undef WINSOCK
+ #undef WIN32
+ #define ARCH "Cygwin-32"
+ #endif
+ 
  #ifdef WINNT
  #define ARCH "Microsoft Windows NT"
  #endif
diff -p ../mudos/v22.2a25/build.MudOS ./build.MudOS
*** ../mudos/v22.2a25/build.MudOS	Wed Mar 04 09:50:04 1998
--- ./build.MudOS	Thu Mar 04 12:14:44 1999
*************** INSTALL_DIR="../bin"
*** 129,134 ****
--- 129,146 ----
  
  echo "Trying out some stuff to see what works; ignore errors ..."
  
+ #
+ # Determine if running under Cygwin-32 and use a.exe instead
+ # of a.out if so
+ #
+ if test $CYGWIN; then
+   A_OUT=a.exe
+   echo Using a.exe for Cygwin GNU compiler default executable
+ else
+   A_OUT=a.out 
+   echo Using standard a.out for compiler default executable
+ fi
+ 
  # 
  # Figure out what make is, and how to invoke it
  # 
*************** int main() {
*** 339,345 ****
  }
  END
  $CC $CFLAGS comptest.c
! ARCH=`./a.out`
  
  case $ARCH in
      AIX)
--- 351,357 ----
  }
  END
  $CC $CFLAGS comptest.c
! ARCH=`./$A_OUT`
  
  case $ARCH in
      AIX)
*************** esac
*** 357,381 ****
  #
  # check for some missing functions
  #
! rm a.out
  cat >comptest.c <<END
  int main() {
  strchr(0,0); strrchr(0,0);
  }
  END
  $CC $CFLAGS comptest.c
! if test ! -f a.out; then
      STR="-Dstrchr=index -Dstrrchr=rindex"
  fi
  
! rm a.out
  cat >comptest.c <<END
  int main() {
  memcpy(0,0,0);memset(0,0,0);strtol(0,0,0);strcspn(0,0);
  }
  END
  $CC $CFLAGS comptest.c
! if test ! -f a.out; then
      STRFUNCS=strfuncs.o
  fi
  
--- 369,393 ----
  #
  # check for some missing functions
  #
! rm $A_OUT
  cat >comptest.c <<END
  int main() {
  strchr(0,0); strrchr(0,0);
  }
  END
  $CC $CFLAGS comptest.c
! if test ! -f $A_OUT; then
      STR="-Dstrchr=index -Dstrrchr=rindex"
  fi
  
! rm $A_OUT
  cat >comptest.c <<END
  int main() {
  memcpy(0,0,0);memset(0,0,0);strtol(0,0,0);strcspn(0,0);
  }
  END
  $CC $CFLAGS comptest.c
! if test ! -f $A_OUT; then
      STRFUNCS=strfuncs.o
  fi
  
*************** echo YACC=$YACC >>Makefile.tmp
*** 397,402 ****
--- 409,415 ----
  echo RANLIB=$RANLIB >>Makefile.tmp
  echo A=a >>Makefile.tmp
  echo O=o >>Makefile.tmp
+ echo A_OUT=$A_OUT >>Makefile.tmp
  
  echo "***************** Configuration completed **************"
  echo "Installing MudOS on $ARCH"
diff -p ../mudos/v22.2a25/efuns_port.c ./efuns_port.c
*** ../mudos/v22.2a25/efuns_port.c	Wed Mar 04 09:50:34 1998
--- ./efuns_port.c	Thu Mar 04 12:14:44 1999
*************** f_localtime PROT((void))
*** 114,120 ****
      vec->item[LT_ZONE].type = T_STRING;
      vec->item[LT_ZONE].subtype = STRING_MALLOC;
  #if defined(BSD42) || defined(apollo) || defined(_AUX_SOURCE) \
! 	|| defined(OLD_ULTRIX)
      /* 4.2 BSD doesn't seem to provide any way to get these last two values */
      vec->item[LT_GMTOFF].u.number = 0;
      vec->item[LT_ZONE].type = T_NUMBER;
--- 114,120 ----
      vec->item[LT_ZONE].type = T_STRING;
      vec->item[LT_ZONE].subtype = STRING_MALLOC;
  #if defined(BSD42) || defined(apollo) || defined(_AUX_SOURCE) \
! 	|| defined(OLD_ULTRIX) || defined(__CYGWIN__)
      /* 4.2 BSD doesn't seem to provide any way to get these last two values */
      vec->item[LT_GMTOFF].u.number = 0;
      vec->item[LT_ZONE].type = T_NUMBER;
diff -p ../mudos/v22.2a25/socket_ctrl.c ./socket_ctrl.c
*** ../mudos/v22.2a25/socket_ctrl.c	Thu Nov 05 20:37:50 1998
--- ./socket_ctrl.c	Thu Mar 04 12:14:44 1999
*************** INLINE int set_socket_owner P2(int, fd, 
*** 21,27 ****
  #ifdef OLD_ULTRIX
      return fcntl(fd, F_SETOWN, which);
  #else
! #ifdef WINSOCK
      return 1; /* FIXME */
  #else
      return ioctl(fd, SIOCSPGRP, &which);
--- 21,27 ----
  #ifdef OLD_ULTRIX
      return fcntl(fd, F_SETOWN, which);
  #else
! #if defined(WINSOCK) || defined(__CYGWIN__)
      return 1; /* FIXME */
  #else
      return ioctl(fd, SIOCSPGRP, &which);

