Short: New efuns quote_string(), unquote_string()
From: Tubmud
Type: Feature

varargs string LIB_STRINGS->quote_string(string s,
                                                 status for_symbol);
          This function returns the given string with quoted special
          characters. For a string containing a newline character
          it will return a string containing a backslash followed by
          an 'n' at the place of the newline in the original.
          For symbols (if the second argument is true) spaces are
          treated as special, for strings (second argument is 0)
          doublequotes are.
          For both special are the characters described in "strings".
          Characters below 32 (space) and above 126 (~) are represented
          as "\xhh" wherein HH stands for a hex number.

string LIB_STRINGS->unquote_string(string s);
          This function is the opposite to quote_string(), it replaces
          all quoted characters by their special meaning. It understands
          the normal special characters described in "strings" and the
          octal notation "\OOO" (OOO is an octal number of at most three
          digits) and the hex notation "\xHH" (HH is a hex number of at
          most two digits, capitalization does not matter).
          Of course with unquote_string() also strings which contains
          the notation of quoted symbols can be unquoted. No flag is
          necessary though.

==> Better as part of 'save/restore value' package?


