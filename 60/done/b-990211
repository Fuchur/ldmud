Subject: 3.2.6-dev.35 Crash
From: Christian 'Chameloid' Kirschbaum <chrissy@cs.tu-berlin.de>
Date: Thu, 11 Feb 1999 20:13:55 +0100 (MET)
Type: Bug
State: Fixed.
See also: p-990203-1, b-990207

This is after applying p-990203-1 :-(
This should be fixed in 3.2.6-dev.36 now.

Holla Mateese,

Ich habe die neue Release gleich mal installiert und mit der Tubmud-
Mudlib kam es nach gut 20 Minuten zum Crash.  Folgendes zeigte gdb:

tubmud 234 (~/mudlib): gdb ~/mudbin/driver ./core
GNU gdb 4.17
Copyright 1998 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you are
welcome to change it and/or distribute copies of it under certain conditions.
Type "show copying" to see the conditions.
There is absolutely no warranty for GDB.  Type "show warranty" for details.
This GDB was configured as "sparc-sun-sunos4.1.3_U1"...
Core was generated by `driver-3.2.6-dev'.
Program terminated with signal 10, Bus error.
Reading symbols from /usr/lib/libc.so.1.9...done.
Reading symbols from /usr/lib/libdl.so.1.0...done.
#0  eval_instruction (
    first_instruction=0x2e7bcf "\005\002²B\001Fñ4\004Q;4\002Q=\001\006 \004 \0029K\020m\0024\001Q\005\002 \001\233B\003=", sp=0x9d918) at interpret.c:3691
3691                current_strings = current_prog->strings;
(gdb) bt
#0  eval_instruction (
    first_instruction=0x2e7bcf "\005\002²B\001Fñ4\004Q;4\002Q=\001\006 \004 \0029K\020m\0024\001Q\005\002 \001\233B\003=", sp=0x9d918)
    at interpret.c:3691
#1  0x2e984 in apply_low (fun=0x34982e "god_action", ob=0x30da40, num_arg=0)
    at interpret.c:10294
#2  0x2eb48 in sapply (fun=0x34982e "god_action", ob=0x30da40, num_arg=0)
    at interpret.c:10375
#3  0x5bc98 in call_out () at call_out.c:659
#4  0x3f15c in call_heart_beat () at backend.c:795
#5  0x3ea38 in backend () at backend.c:492
#6  0x19d14 in main (argc=4, argv=0xeffffc14) at main.c:313
(gdb) list
3686    #endif
3687            while (sp != fp)
3688                free_svalue(--sp);
3689            *sp = *svp;        /* This way, the same ref counts are maintained */
3690            if ( NULL != (current_prog = csp->prog) ) /* is 0 when we reach the bottom */
3691                current_strings = current_prog->strings;
3692            function_index_offset = csp->function_index_offset;
3693            current_variables     = csp->current_variables;
3694            break_sp = csp->break_sp;
3695            if (csp->extern_call) {
(gdb) q

Hmm, eben kam auf der Startshell des Drivers folgendes:

Parse error: U3_3 ^0 ^\"(,X-Y","P< <^ T+\"\" 0   P","$ @  D( $( , $@$","     0    \"&( E0","    $ '$ (6)

Das Mud laeuft aber noch... *scratch*

Kannst du damit was anfangen?  Den core werde ich mal aufheben...

Gruss,
Chris aka Chameloid@Tubmud.


--------------------------------------------------------------------------------

Subject: nochmal 3.2.6-dev.35 crash
From: Christian 'Chameloid' Kirschbaum <chrissy@cs.tu-berlin.de>
Date: Thu, 11 Feb 1999 20:31:21 +0100 (MET)

Hallo nochmal Lars,

gerade eben gab es wieder ein Crash mit 3.2.6-dev.35, etwa genau nach der 
gleichen Zeit (~40 mins).  Es scheint genau den selben Grund zuhaben.
Das lieferte gdb:

tubmud 258 (~): gdb mudbin/driver mudlib/core 
GNU gdb 4.17
Copyright 1998 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you are
welcome to change it and/or distribute copies of it under certain conditions.
Type "show copying" to see the conditions.
There is absolutely no warranty for GDB.  Type "show warranty" for details.
This GDB was configured as "sparc-sun-sunos4.1.3_U1"...
Core was generated by `driver-3.2.6-dev'.
Program terminated with signal 10, Bus error.
Reading symbols from /usr/lib/libc.so.1.9...done.
Reading symbols from /usr/lib/libdl.so.1.0...done.
#0  eval_instruction (
    first_instruction=0x948f9b "\005\003)\020\003\005\004)A\t;/\004Q;/\003QFì\005\004\026A\001FK\003\2064", sp=0x9d938) at interpret.c:3691
3691                current_strings = current_prog->strings;
(gdb) bt
#0  eval_instruction (
    first_instruction=0x948f9b "\005\003)\020\003\005\004)A\t;/\004Q;/\003QFì\005\004\026A\001FK\003\2064", sp=0x9d938)
    at interpret.c:3691
#1  0x2e984 in apply_low (fun=0x51276e "catch_check", ob=0x9d5ae8, num_arg=0)
    at interpret.c:10294
#2  0x2eb48 in sapply (fun=0x51276e "catch_check", ob=0x9d5ae8, num_arg=0)
    at interpret.c:10375
#3  0x5bc98 in call_out () at call_out.c:659
#4  0x3f15c in call_heart_beat () at backend.c:795
#5  0x3ea38 in backend () at backend.c:492
#6  0x19d14 in main (argc=4, argv=0xeffffc14) at main.c:313
(gdb) list
3686    #endif
3687            while (sp != fp)
3688                free_svalue(--sp);
3689            *sp = *svp;        /* This way, the same ref counts are maintained */
3690            if ( NULL != (current_prog = csp->prog) ) /* is 0 when we reach the bottom */
3691                current_strings = current_prog->strings;
3692            function_index_offset = csp->function_index_offset;
3693            current_variables     = csp->current_variables;
3694            break_sp = csp->break_sp;
3695            if (csp->extern_call) {
(gdb) q

Da scheint irgendetwas mit den Strings nicht in Ordnung zu sein.
Ich gehe jetzt wieder auf 3.2.5 (leider mit terminal_colour()-Speicherleck)
erstmal zurueck.

Gruss,
Chris aka Chameloid@Tubmud.


PS: Ich hebe die cores auf.

