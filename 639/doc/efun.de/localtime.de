SYNOPSIS
        #include <sys/time.h>

        int * localtime(int clock)
        int * localtime(int* uclock)

BESCHREIBUNG
        Das Argument <clock> wird als Anzahl der Sekunden seit 1.1.1970, 0
        Uhr, interpretiert und in die Ortszeit umgewandelt. Diese wird dann in
        einer huebschen Struktur zurueckgegeben. Ist <clock> nicht angegeben,
        wird die aktuelle Zeit von time() verwendet.

        Alternativ kann ein Array von zwei Zahlen angegeben werden: die erste
        Zahl ist <clock> wie oben, die zweite ist die Anzahl der Mikrosekunden
        in der aktuellen Sekunde.

        Das Resultat ist ein Array von Zahlen:

          int TM_SEC   (0) : Sekunden (0..59)
          int TM_MIN   (1) : Minuten (0..59)
          int TM_HOUR  (2) : Stunden (0..23)
          int TM_MDAY  (3) : Monatstag (1..31)
          int TM_MON   (4) : Monat (0..11)
          int TM_YEAR  (5) : Jahr (e.g.  2001)
          int TM_WDAY  (6) : Wochentag (Sunday = 0)
          int TM_YDAY  (7) : Tag im Jahr (0..365)
          int TM_ISDST (8) : TRUE: Sommerzeit aktiv

BEISPIEL

        printf("Today is %s\n"
              , ({ "Sunday", "Monday", "Tuesday", "Wednesday"
                 , "Thursday", "Friday", "Saturday"
                })[localtime()[TM_WDAY]]);

SIEHE AUCH
        ctime(E), gmtime(E), time(E), utime(E)
