Short: Crash in terminal_colour()
Date: Sun, 24 Feb 2002 14:22:38 +0100 (CET)
From: Markus Peter <warp@spin.de>
Type: Bug
State: New
Driver: 3.3.171

Hallo

Ich hab seit ner Weile regelmaessig crashes im driver, aktuell bei Version
3.3.171 - diesmal hab ich allerdings wenigstens einen backtrace:

Program terminated with signal 11, Segmentation fault.
#0  0x400e0b30 in ?? ()
(gdb) bt
#0  0x400e0b30 in ?? ()
#1  0x08068519 in f_terminal_colour (sp=0x8113ac0, num_arg=4) at
efuns.c:2045
#2  0x08079197 in eval_instruction (
    first_instruction=0x82f15f3
"Z\006\003¸d\001\030\034\002\n\0052c\b\034\003\022\0026o\003([\034\001\034\003\034\004gò",
initial_sp=0x8113a98)
    at interpret.c:7245
#3  0x0809017f in apply_low (fun=0x830631c, ob=0x84141e8, num_arg=4,
    b_ign_prot=0) at interpret.c:14830
#4  0x080907da in int_apply (fun=0x830631c, ob=0x84141e8, num_arg=4,
    b_ign_prot=0, b_use_default=1) at interpret.c:15015
#5  0x0808efe8 in eval_instruction (first_instruction=0x820aa6f
"¹%\030[¹\n",
    initial_sp=0x8113a38) at interpret.c:14339
#6  0x0808c9ef in eval_instruction (
    first_instruction=0x82f208b "¹d\005¸\003L\017X[\n g\e",
    initial_sp=0x8113990) at interpret.c:13119
#7  0x0809017f in apply_low (fun=0x83191a4, ob=0x84141e8, num_arg=2,
    b_ign_prot=0) at interpret.c:14830
#8  0x080907da in int_apply (fun=0x83191a4, ob=0x84141e8, num_arg=2,
    b_ign_prot=0, b_use_default=1) at interpret.c:15015
#9  0x0808efe8 in eval_instruction (
    first_instruction=0x82d43d3 "Z\001\005[[\n$\n%§\\\025\025",
    initial_sp=0x8113950) at interpret.c:14339
#10 0x0809067f in apply_low (fun=0x83188a0, ob=0x83189a0, num_arg=1,
    b_ign_prot=0) at interpret.c:14938
#11 0x080907da in int_apply (fun=0x83188a0, ob=0x83189a0, num_arg=1,
    b_ign_prot=0, b_use_default=1) at interpret.c:15015
#12 0x0808efe8 in eval_instruction (
    first_instruction=0x82d25db
"Z\002\027[\n\016\n\017¹\003\030§\\\020/c\a[g\006", initial_sp=0x81138e8)
at interpret.c:14339
#13 0x0809017f in apply_low (fun=0x8316530, ob=0x831761c, num_arg=2,
    b_ign_prot=0) at interpret.c:14830
---Type <return> to continue, or q <return> to quit---
#14 0x080907da in int_apply (fun=0x8316530, ob=0x831761c, num_arg=2,
    b_ign_prot=0, b_use_default=1) at interpret.c:15015
#15 0x0808efe8 in eval_instruction (first_instruction=0x82f255b "\034",
    initial_sp=0x8113780) at interpret.c:14339
#16 0x0809017f in apply_low (fun=0x833d768, ob=0x84141e8, num_arg=1,
    b_ign_prot=0) at interpret.c:14830
#17 0x080907da in int_apply (fun=0x833d768, ob=0x84141e8, num_arg=1,
    b_ign_prot=0, b_use_default=1) at interpret.c:15015
#18 0x08090e1b in sapply_int (fun=0x833d768, ob=0x84141e8, num_arg=1,
    b_find_static=0, b_use_default=1) at interpret.c:15176
#19 0x0804ba32 in parse_command (buff=0xbfffe208 "who", from_efun=0)
    at actions.c:1045
#20 0x0804be0e in execute_command (str=0xbfffe208 "who", ob=0x84141e8)
    at actions.c:1200
#21 0x08050a87 in backend () at backend.c:563
#22 0x0809d79c in main (argc=19, argv=0xbffffb34) at main.c:460
#23 0x4008565f in ?? ()

Das ganze laeuft unter einem Debian mit Linux Kernel 2.4.12

Das core file heb ich mal auf, falls du noch irgendwelche Infos draus
brauchen koenntest.

Der betreffende LPC Code fuehrt nicht reproduzierbar zum Crash, d.h. die
meiste Zeit ueber laeuft er ohne Probleme. Falls es hilft kann ich dir den
auch noch vorbeischicken, wobei der Code der hier vermutlich aufgerufen
wird ueber eine ganze Reihe Files verteilt ist - da gab ich dir dann am
besten Wizardrechte in unserem MUD so dass du dir das selber ansehen
kannst, wenn du willst.

-- 
Markus Peter - SPiN AG
warp@spin.de



