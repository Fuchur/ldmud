Only in ../3-3-ff-exp/doc/concepts: mccp
diff -u -r 3-3-339/doc/driver/predefined ../3-3-ff-exp/doc/driver/predefined
--- 3-3-339/doc/driver/predefined	2002-11-18 06:23:13.000000000 +0100
+++ ../3-3-ff-exp/doc/driver/predefined	2002-12-21 13:53:39.000000000 +0100
@@ -68,6 +68,7 @@
 
       __IPV6__ :      support for IP v 6
       __MYSQL__ :     support for mySQL
+      __MCCP__:       support for MCCP http://www.randomly.org/projects/MCCP
       __ALISTS__:     support for alists
       __PCRE__:       support for PCRE instead of traditional regexps.
       __DEPRECATED__: support for obsolete and deprecated efuns.
@@ -89,5 +90,8 @@
     3.3 made __LPC_NOSAVE__ always defined and added __ALISTS__,
         __LPC_STRUCTS__, __LPC_INLINE_CLOSURES__, and __PCRE__.
 
+    mccp patch added __PCRE__.
+
 SEE ALSO
     pragma(LPC), preprocessor(LPC)
+
Only in ../3-3-ff-exp/doc/efun: end_mccp_compress
Only in ../3-3-ff-exp/doc/efun: query_mccp
Only in ../3-3-ff-exp/doc/efun: query_mccp_stats
Only in ../3-3-ff-exp/doc/efun: start_mccp_compress
diff -u -r 3-3-339/src/Makefile.in ../3-3-ff-exp/src/Makefile.in
--- 3-3-339/src/Makefile.in	2002-12-15 08:44:39.000000000 +0100
+++ ../3-3-ff-exp/src/Makefile.in	2002-12-21 13:44:32.000000000 +0100
@@ -67,7 +67,7 @@
 #
 CFLAGS= @EXTRA_CFLAGS@ $(OPTIMIZE) $(DEBUG) $(WARN) $(MPATH) $(PROFIL)
 #
-LIBS=@LIBS@ @PKGLIBS@
+LIBS=@LIBS@ @PKGLIBS@ -lgringotts -ldb
 #
 LDFLAGS=@LDFLAGS@ $(PROFIL)
 #
@@ -83,7 +83,7 @@
       lex.c main.c mapping.c md5.c mempools.c mregex.c mstrings.c object.c \
       otable.c\
       parser.c parse.c pkg-alists.c pkg-mysql.c pkg-pcre.c port.c \
-      ptrtable.c \
+      ptrtable.c pkg-stringcompiler.c pkg-encrypt.c \
       random.c regexp.c simulate.c simul_efun.c stdstrings.c \
       strfuns.c sprintf.c swap.c wiz_list.c xalloc.c 
 OBJ = access_check.o actions.o array.o backend.o bitstrings.o call_out.o \
@@ -93,7 +93,7 @@
       lex.o main.o mapping.o md5.o mempools.o mregex.o mstrings.o object.o \
       otable.o \
       parser.o parse.o pkg-alists.o pkg-mysql.o pkg-pcre.o port.o \
-      ptrtable.o \
+      ptrtable.o pkg-stringcompiler.o pkg-encrypt.o \
       random.o regexp.o simulate.o simul_efun.o stdstrings.o \
       strfuns.o sprintf.o swap.o wiz_list.o xalloc.o @ALLOCA@ 
 
Only in ../3-3-ff-exp/src: access_check.o
Only in ../3-3-ff-exp/src: actions.o
Only in ../3-3-ff-exp/src: array.o
Only in ../3-3-ff-exp/src/autoconf: .svn
diff -u -r 3-3-339/src/autoconf/configure.in ../3-3-ff-exp/src/autoconf/configure.in
--- 3-3-339/src/autoconf/configure.in	2002-12-03 08:26:07.000000000 +0100
+++ ../3-3-ff-exp/src/autoconf/configure.in	2002-12-21 13:45:18.000000000 +0100
@@ -107,6 +107,7 @@
 AC_MY_ARG_ENABLE(use-alists,no,,[Enables alist support])
 AC_MY_ARG_ENABLE(use-mysql,no,,[Enables mySQL support])
 AC_MY_ARG_ENABLE(use-pthreads,no,,[enable using of threads for socket writes])
+AC_MY_ARG_ENABLE(use-mccp,no,,[Enables MCCP support])
 AC_MY_ARG_ENABLE(use-pcre,yes,,[Enables PCRE instead of traditional regexps])
 AC_MY_ARG_ENABLE(use-deprecated,yes,,[Enables obsolete and deprecated efuns])
 AC_MY_ARG_ENABLE(use-structs,yes,,[Enables structs])
@@ -252,6 +253,7 @@
 AC_CDEF_FROM_ENABLE(initialization_by___init)
 AC_CDEF_FROM_ENABLE(use_system_crypt)
 AC_CDEF_FROM_ENABLE(use_alists)
+AC_CDEF_FROM_ENABLE(use_mccp)
 AC_CDEF_FROM_ENABLE(use_pcre)
 AC_CDEF_FROM_ENABLE(use_pthreads)
 AC_CDEF_FROM_ENABLE(use_ipv6)
@@ -545,6 +547,12 @@
     AC_CHECK_LIB(resolv,main, LIBS="$LIBS -lresolv")
 fi
 
+# --- Check if we need zlib libraries for mccp ---
+
+if test "x$enable_use_mccp" = "x" || test "x$enable_use_mccp" = "xyes"; then
+   AC_CHECK_LIB(z,main, LIBS="$LIBS -lz")
+fi
+
 # --- Check if we need the crypto libraries ---
 
 if test "x$enable_use_system_crypt" = "x" || test "x$enable_use_system_crypt" = "xyes"; then
@@ -1837,6 +1845,7 @@
 AC_SUBST(cdef_use_mysql)
 AC_SUBST(cdef_use_pthreads)
 AC_SUBST(cdef_use_alists)
+AC_SUBST(cdef_use_mccp)
 AC_SUBST(cdef_use_pcre)
 AC_SUBST(cdef_use_deprecated)
 AC_SUBST(cdef_use_structs)
diff -u -r 3-3-339/src/comm.c ../3-3-ff-exp/src/comm.c
--- 3-3-339/src/comm.c	2002-12-18 09:19:41.000000000 +0100
+++ ../3-3-ff-exp/src/comm.c	2002-12-21 13:44:15.000000000 +0100
@@ -453,6 +453,12 @@
 
 /* Forward declarations */
 
+#ifdef USE_MCCP
+static int start_compress(interactive_t *,unsigned char telopt);
+static int end_compress(interactive_t *);
+#endif
+static void mccp_telnet_neg(int);
+
 static void free_input_to(input_to_t *);
 static void telnet_neg(interactive_t *);
 static void send_will(int);
@@ -1394,8 +1400,7 @@
 #ifdef USE_PTHREADS
 
 static int
-thread_socket_write(SOCKET_T s UNUSED, char *msg, size_t size, interactive_t *ip)
-
+thread_socket_write(SOCKET_T s UNUSED, char *msg, size_t size, interactive_t *ip, int docompress)
 /* Stand in for socket_write(): take the data to be written and append
  * it to the buffer list of <ip>.
  */
@@ -1415,6 +1420,13 @@
     b->length = size;
     b->next = NULL;
 
+#ifdef USE_MCCP
+    if (ip->out_compress)   
+      b->compress = docompress;
+    else
+#endif
+      b->compress = 0;
+
     memcpy(b->buffer, msg, size);
 
     /* Chain in the new buffer */
@@ -1510,7 +1522,7 @@
 
 {
     interactive_t *ip = (interactive_t *) arg;
-    int oldvalue;
+    int oldvalue,length;
 
     pthread_setcancelstate(PTHREAD_CANCEL_ENABLE, &oldvalue); /* make us cancelable */
     pthread_setcanceltype(PTHREAD_CANCEL_DEFERRED, &oldvalue);
@@ -1566,11 +1578,46 @@
         {
             /* write the stuff to socket */
             buf->errorno = 0;
+#ifdef USE_MCCP
+	    if (buf->compress)
+	      {
+		int status;
+		ip->out_compress->next_in = (unsigned char *) buf->buffer;
+		ip->out_compress->avail_in = buf->length;
+		ip->out_compress->avail_out = COMPRESS_BUF_SIZE -
+		  (ip->out_compress->next_out -
+		   ip->out_compress_buf);
+		
+		status = deflate(ip->out_compress, Z_SYNC_FLUSH);
+		
+		if (status != Z_OK)
+		  printf("compression error!!!!!!!\n");
+		length = ip->out_compress->next_out - ip->out_compress_buf;
+	      }
+	    
+ 	    if (buf->compress)
+ 	      {
+ 		if ((socket_write(ip->socket, ip->out_compress_buf, length)) == -1)
+ 		  { 
+ 		    buf->errorno = errno;
+ 		  } /* if socket_write() == -1 */
+		
+ 		/* we update the compressed buffer here */
+ 		ip->out_compress->next_out = ip->out_compress_buf;
+ 	      }
+	    else
+	      {
+		if ((socket_write(ip->socket, buf->buffer, buf->length)) == -1)
+		  {
+		    buf->errorno = errno;
+		  } /* if socket_write() == -1 */
+	      }
+#else
             if ((socket_write(ip->socket, buf->buffer, buf->length)) == -1)
             {
                 buf->errorno = errno;
             } /* if socket_write() == -1 */
-
+#endif
             /* Don't xfree(buf) here as smalloc is not threadsafe! */
             pthread_mutex_lock(&ip->write_mutex);
 
@@ -1976,25 +2023,68 @@
          * If it is enough, send it, else terminate the outer loop
          * (because *source must be exhausted for this to happen).
          */
+
         chunk = dest - ip->message_buf;
         if (chunk < min_length)
         {
             break;
         }
 
-        /* Write .message_buf[] to the network. */
-
+#if !defined(USE_PTHREADS) && defined(USE_MCCP)
+        if (ip->out_compress)
+	  {
+	    
+	    ip->out_compress->next_in = (unsigned char *) ip->message_buf;
+	    ip->out_compress->avail_in = chunk;
+	    
+	    ip->out_compress->avail_out = COMPRESS_BUF_SIZE -
+	      (ip->out_compress->next_out -
+	       ip->out_compress_buf);
+	    
+	    {
+              int status = deflate(ip->out_compress, Z_SYNC_FLUSH);
+              
+              if (status != Z_OK)
+		return;
+	    }
+	    
+	    /* ok.. perhaps i should take care that all data in message_buf
+	       is compressed, but i guess there is no chance that 1024 byte compressed
+	       won't fit into the 8192 byte buffer */
+	    
+	    length = ip->out_compress->next_out - ip->out_compress_buf;
+	  }
+#endif  
+        /* now sending the buffer... */
+        
         for (retries = 6;;) {
-
+           
 #ifdef USE_PTHREADS
-            if ((n = (int)thread_socket_write(ip->socket, ip->message_buf, (size_t)chunk, ip)) != -1)
+	  if ((n = (int)thread_socket_write(ip->socket, ip->message_buf, (size_t)chunk, ip, 1)) != -1)
+	    {
+	      break;
+	    }
 #else
+# ifdef USE_MCCP
+	  if (ip->out_compress) /* here we choose the correct buffer */	     
+	    {
+	      if ((n = (int)socket_write(ip->socket, ip->out_compress_buf, (size_t)length)) != -1)
+		{
+		  break;
+		}
+	    }
+	  else 
+	    {
+# endif
             if ((n = (int)socket_write(ip->socket, ip->message_buf, (size_t)chunk)) != -1)
+	      {
+		break;
+	      }
+# ifdef USE_MCCP
+	    }
+# endif
 #endif
-            {
-                break;
-            }
-            switch (errno) {
+	  switch (errno) {
               case EINTR:
                 if (--retries)
                     continue;
@@ -2053,9 +2143,21 @@
         inet_packets++;
         inet_volume += n;
 #endif
-        if (n != chunk)
-            fprintf(stderr, "%s write socket: wrote %ld, should be %ld.\n"
-                          , time_stamp(), (long)n, (long)chunk);
+
+#if defined(USE_MCCP) && !defined(USE_PTHREADS)
+	if (ip->out_compress)
+	  {
+            /* we update the compressed buffer here */
+            ip->out_compress->next_out = ip->out_compress_buf + length - n;
+	    if (n != length)
+	      fprintf(stderr, "%s write socket (compressed): wrote %ld, should be %ld.\n"
+		      , time_stamp(), (long)n, (long)chunk);
+	  }
+	else
+#endif
+	if (n != chunk)
+	  fprintf(stderr, "%s write socket: wrote %ld, should be %ld.\n"
+		  , time_stamp(), (long)n, (long)chunk);
 
         /* Continue with the processing of source */
         dest = &ip->message_buf[0];
@@ -3066,7 +3168,7 @@
                     {
 #ifdef USE_PTHREADS
                         thread_socket_write(ip->socket, ip->text + ip->chars_ready
-                                    , (size_t)(length - ip->chars_ready), ip);
+                                    , (size_t)(length - ip->chars_ready), ip, 0);
 #else
                         socket_write(ip->socket, ip->text + ip->chars_ready
                                     , (size_t)(length - ip->chars_ready));
@@ -3270,6 +3372,10 @@
           /* buffer list is returned by thread */
         interactive_cleanup(interactive);
 #endif
+#ifdef USE_MCCP
+	if (interactive->out_compress)
+	  end_compress(interactive);
+#endif
         shutdown(interactive->socket, 2);
         socket_close(interactive->socket);
     } /* if (erq or user) */
@@ -3296,10 +3402,18 @@
         free_object(interactive->modify_command, "remove_interactive");
     }
 
+#ifdef USE_MCCP
+    if (interactive->out_compress_buf)
+       free(interactive->out_compress_buf);
+    if (interactive->out_compress)
+       free(interactive->out_compress);
+#endif
 #ifdef USE_PTHREADS
-    pthread_mutex_destroy(&interactive->write_mutex);
-    pthread_cond_destroy(&interactive->write_cond);
+     pthread_mutex_destroy(&interactive->write_mutex);
+     pthread_cond_destroy(&interactive->write_cond);
 #endif
+
+    
     free_svalue(&interactive->prompt);
 
     if (interactive->trace_prefix)
@@ -3503,6 +3617,12 @@
 
     /* Initialize the rest of the interactive structure */
 
+#ifdef USE_MCCP
+    new_interactive->compressing = 0;
+    new_interactive->out_compress = NULL;
+    new_interactive->out_compress_buf=NULL;
+#endif
+    
     new_interactive->input_to = NULL;
     put_number(&new_interactive->prompt, 0);
     new_interactive->modify_command = NULL;
@@ -4640,7 +4760,9 @@
     }
 } /* reply_h_telnet_neg() */
 
-/*-------------------------------------------------------------------------*/
+/*-
+
+  -----------------------------------------------------------------------*/
 void
 init_telopts (void)
 
@@ -4738,15 +4860,15 @@
 
     /* Mud specific protocols */
 
-    telopts_do[TELOPT_COMPRESS] = reply_h_telnet_neg;
-    telopts_dont[TELOPT_COMPRESS] = reply_h_telnet_neg;
-    telopts_will[TELOPT_COMPRESS] = reply_h_telnet_neg;
-    telopts_wont[TELOPT_COMPRESS] = reply_h_telnet_neg;
-
-    telopts_do[TELOPT_COMPRESS2] = reply_h_telnet_neg;
-    telopts_dont[TELOPT_COMPRESS2] = reply_h_telnet_neg;
-    telopts_will[TELOPT_COMPRESS2] = reply_h_telnet_neg;
-    telopts_wont[TELOPT_COMPRESS2] = reply_h_telnet_neg;
+    telopts_do[TELOPT_COMPRESS] = mccp_telnet_neg;
+    telopts_dont[TELOPT_COMPRESS] = mccp_telnet_neg;
+    telopts_will[TELOPT_COMPRESS] = mccp_telnet_neg;
+    telopts_wont[TELOPT_COMPRESS] = mccp_telnet_neg;
+
+    telopts_do[TELOPT_COMPRESS2] = mccp_telnet_neg;
+    telopts_dont[TELOPT_COMPRESS2] = mccp_telnet_neg;
+    telopts_will[TELOPT_COMPRESS2] = mccp_telnet_neg;
+    telopts_wont[TELOPT_COMPRESS2] = mccp_telnet_neg;
 
     telopts_do[TELOPT_MSP] = reply_h_telnet_neg;
     telopts_dont[TELOPT_MSP] = reply_h_telnet_neg;
@@ -4954,11 +5076,11 @@
                     if (to > &ip->text[ip->chars_ready])
                     {
                         thread_socket_write(ip->socket, &ip->text[ip->chars_ready],
-                          (size_t)(to - &ip->text[ip->chars_ready]), ip);
+                          (size_t)(to - &ip->text[ip->chars_ready]), ip, 0);
                         ip->chars_ready = to - ip->text;
                     }
                     if (to > first) {
-                        thread_socket_write(ip->socket, "\b \b", 3, ip);
+                        thread_socket_write(ip->socket, "\b \b", 3, ip, 0);
                         to--;
                         ip->chars_ready--;
                     }
@@ -6522,6 +6644,10 @@
  * codes for colours and other things needs to bypass the allowed
  * charset filters, but isn't important enough to waste bandwith
  * on a synchronous transmission.
+ *
+ * If the client uses MCCP compression add_message ist always used
+ * with flushing buffer _after_ the Message.
+ *
  */
 
 {
@@ -6569,7 +6695,11 @@
         save_command_giver = command_giver;
         command_giver = current_object;
 
+#ifdef USE_MCCP
+	if ((sp->u.number & 1)||ip->out_compress)
+#else
         if (sp->u.number & 1)
+#endif
         {
             /* Write before flush... */
 
@@ -6579,8 +6709,13 @@
 
             sending_telnet_command = MY_FALSE;
 
+#ifdef USE_MCCP
+            if ((sp->u.number & 2)||ip->out_compress)
+	      add_message(message_flush);
+#else
             if (sp->u.number & 2)
-                add_message(message_flush);
+	      add_message(message_flush);
+#endif
             wrote = mstrsize(msg);
         }
         else
@@ -6595,7 +6730,7 @@
             for (i = 6; i > 0; i--) {
 #ifdef USE_PTHREADS
                 wrote = (mp_int)thread_socket_write(ip->socket, get_txt(msg)
-                                                   , mstrsize(msg), ip);
+                                                   , mstrsize(msg), ip, 1);
 #else
                 wrote = (mp_int)socket_write(ip->socket, get_txt(msg), mstrsize(msg));
 #endif
@@ -7814,3 +7949,317 @@
 } /* f_query_udp_port() */
 
 /***************************************************************************/
+
+static void
+mccp_telnet_neg (int option)
+{
+  interactive_t *ip = O_GET_INTERACTIVE (command_giver);
+  
+   switch (ip->tn_state)
+     {
+     case TS_WILL:
+       DTF(("MCCP NEG (%d) STATE (WILL)\n", option));
+       break;
+     case TS_WONT:
+       DTF(("MCCP NEG (%d) STATE (WONT)\n", option));
+       break;
+     case TS_DO:
+       DTF(("MCCP NEG (%d) STATE (DO)\n", option));
+#ifdef USE_MCCP
+       if (!ip->compressing)
+	 start_compress(ip, option);
+#endif
+       break;
+     case TS_DONT:
+       DTF(("MCCP NEG (%d) STATE (DONT)\n", option));
+#ifdef USE_MCCP
+       if(ip->compressing==option)
+	 end_compress(ip);
+#endif
+       break;
+     default:
+       DTF(("MCCP NEG (%d) STATE (%d)\n", option, ip->tn_state));
+     }
+}
+
+#ifdef USE_MCCP
+
+svalue_t *
+f_start_mccp_compress (svalue_t * sp)
+{
+  interactive_t *ip;
+  int mccpver;
+  int retval;
+  
+  mccpver=sp->u.number;
+  
+  if ((mccpver!=TELOPT_COMPRESS)&&
+      (mccpver!=TELOPT_COMPRESS2))
+    {
+      error("arg 1 should be TELOPT_COMPRESS or TELOPT_COMPRESS2.\n");
+      return sp;
+    }
+  
+  if (!O_SET_INTERACTIVE(ip, current_object))
+    {
+      error("start_mccp_compress() must be called inside the interactive\n");
+      return sp;
+    }
+  
+  free_svalue(sp);
+  retval=start_compress(ip,mccpver);
+  put_number(sp,retval);
+  
+  return sp;
+}
+
+svalue_t *
+f_end_mccp_compress (svalue_t * sp)
+{
+  interactive_t *ip;
+  int retval;
+  
+  if (!O_SET_INTERACTIVE(ip, current_object))
+    {
+      error("end_mccp_compress() must be called inside the interactive\n");
+      return sp;
+    }
+  
+  retval=end_compress(ip);
+  sp++;
+  put_number(sp,retval);
+  
+  return sp;
+}
+
+
+svalue_t *
+f_query_mccp (svalue_t * sp)
+     /* EFUN query_mccp()
+      *
+      * int query_mccp(object ob)
+      *
+      * this efun returns 0 if no mccp is used for interactive ob.
+      * if ob|this_player uses mccp it returns TELOPT_COMPRESS or
+      * TELOPT_COMPRESS2
+      */
+{
+  interactive_t *ip;
+  
+  /* Make sure the object is interactive */
+  if (!(O_SET_INTERACTIVE (ip, sp->u.ob)) || ip->closing)
+    {
+      error ("Bad arg 1 to query_mccp(): object not interactive.\n");
+      return sp;
+    }
+  
+  free_svalue (sp);
+  put_number (sp, ip->compressing);
+  
+  return sp;
+}				/* query_mccp() */
+
+svalue_t *
+f_query_mccp_stats (svalue_t * sp)
+     /* EFUN query_mccp_stats()
+      *
+      * int *query_mccp_stats(object ob)
+      *
+      * if the connection of interactive ob ( or this_object() if ob==0 )
+      * is compressed it returns an array with zlib statistics
+      * ({ total_in, total_out }) ( uncompressed/compressed)
+      *
+      */
+{
+  interactive_t *ip;
+  vector_t *mccp_stats;
+  
+  /* Make sure the object is interactive */
+  if (!(O_SET_INTERACTIVE (ip, sp->u.ob)) || ip->closing)
+    {
+      error ("Bad arg 1 to query_mccp_stats(): object not interactive.\n");
+      return sp;
+    }
+  
+  free_svalue (sp);
+  
+  if (ip->compressing > 0)
+    {
+      mccp_stats = allocate_uninit_array (2);
+      put_number (mccp_stats->item, ip->out_compress->total_in);
+      put_number (mccp_stats->item + 1, ip->out_compress->total_out);
+      put_array (sp, mccp_stats);
+    }
+  else
+    {
+      put_number (sp, 0);
+    }
+  return sp;
+}				/* query_mccp_stats() */
+
+
+/*
+ * the rest of the file is sligthly modified taken from the mccp-site so
+ * the header of the original file remains here:
+ */
+
+/*
+ * mccp.c - support functions for the Mud Client Compression Protocol
+ *
+ * see http://www.randomly.org/projects/MCCP/
+ *
+ * Copyright (c) 1999, Oliver Jowett <oliver@randomly.org>
+ *
+ * This code may be freely distributed and used if this copyright
+ * notice is retained intact.
+ */
+
+void *
+zlib_alloc (void *opaque, unsigned int items, unsigned int size)
+{
+  return calloc (items, size);
+}
+
+void
+zlib_free (void *opaque, void *address)
+{
+  free (address);
+}
+
+
+static int
+start_compress (interactive_t * ip, unsigned char telopt)
+{
+  z_stream *s;
+  
+  /* already compressing */
+  if (ip->out_compress)
+    return 1;
+  
+  /* allocate and init stream, buffer */
+  s = (z_stream *) malloc (sizeof (*s));
+  ip->out_compress_buf = (unsigned char *) malloc (COMPRESS_BUF_SIZE);
+  
+  s->next_in = NULL;
+  s->avail_in = 0;
+  s->next_out = ip->out_compress_buf;
+  s->avail_out = COMPRESS_BUF_SIZE;
+  s->zalloc = zlib_alloc;
+  s->zfree = zlib_free;
+  s->opaque = NULL;
+  
+  if (deflateInit (s, 9) != Z_OK)
+    {
+      free (ip->out_compress_buf);
+      free (s);
+      return 0;
+    }
+  
+  /* version 1 or 2 support */
+  if (telopt == TELOPT_COMPRESS)
+    {
+      DTF (("%s TDEBUG: send IAC SB %02x WILL SE\n", time_stamp (), telopt));
+      SEND_TELNET_COMMAND (add_message ("%c", IAC);
+ 			   add_message ("%c%c%c%c", SB, telopt, WILL, SE);
+ 			   add_message (message_flush););
+    }
+  else if (telopt == TELOPT_COMPRESS2)
+    {
+      DTF (("%s TDEBUG: send IAC SB %02x WILL SE\n", time_stamp (), telopt));
+      SEND_TELNET_COMMAND (add_message ("%c", IAC);
+ 			   add_message ("%c%c%c%c", SB, telopt, IAC, SE);
+ 			   add_message (message_flush););
+    }
+  else
+    {
+      printf ("Bad teleoption %d passed", telopt);
+      free (ip->out_compress_buf);
+      free (s);
+      return 0;
+    }
+  
+  ip->compressing = telopt;
+  ip->out_compress = s;
+  
+  printf("%s MCCP-DEBUG: '%s' mccp started (%d)\n", time_stamp(), get_txt(ip->ob->name),telopt);
+  
+  /* success */
+  return 1;
+}
+
+/* Try to send any pending compressed-but-not-sent data in `desc' */
+int
+process_compressed (interactive_t * ip)
+{
+  int iStart, nBlock, nWrite, len;
+  
+  if (!ip->out_compress)
+    return 1;
+  
+  len = ip->out_compress->next_out - ip->out_compress_buf;
+  if (len > 0)
+    {
+      for (iStart = 0; iStart < len; iStart += nWrite)
+ 	{
+ 	  nBlock = UMIN (len - iStart, 4096);
+ 	  if ((nWrite =
+ 	       write (ip->socket, ip->out_compress_buf + iStart, nBlock)) < 0)
+ 	    {
+ 	      if (errno == EAGAIN || errno == ENOSR)
+ 		break;
+	      
+ 	      /* write error */
+	      return 0;
+ 	    }
+ 	  if (nWrite <= 0)
+ 	    break;
+ 	}
+      
+      if (iStart)
+ 	{
+	  if (iStart < len)
+ 	    memmove (ip->out_compress_buf, ip->out_compress_buf + iStart,
+ 		     len - iStart);
+	  
+ 	  ip->out_compress->next_out = ip->out_compress_buf + len - iStart;
+ 	}
+    }
+  
+  /* success */
+  return 1;
+}
+
+/* Cleanly shut down compression on `desc' */
+static int
+end_compress (interactive_t * ip)
+{
+  unsigned char dummy[1];
+  
+  if (!ip->out_compress)
+    return 1;
+ 
+  ip->out_compress->avail_in = 0;
+  ip->out_compress->next_in = dummy;
+  
+  /* No terminating signature is needed - receiver will get Z_STREAM_END */
+   if (deflate (ip->out_compress, Z_FINISH) != Z_STREAM_END)
+     return 0;
+ 
+   /* try to send any residual data */
+   if (!process_compressed (ip))
+     return 0;
+   
+   /* reset compression values */
+   deflateEnd (ip->out_compress);
+   free (ip->out_compress_buf);
+   free (ip->out_compress);
+   ip->compressing = 0;
+   ip->out_compress = NULL;
+   ip->out_compress_buf = NULL;
+ 
+   printf("%s MCCP-DEBUG: '%s' mccp ended\n", time_stamp(), get_txt(ip->ob->name));
+   
+   /* success */
+   return 1;
+}
+#endif
diff -u -r 3-3-339/src/comm.h ../3-3-ff-exp/src/comm.h
--- 3-3-339/src/comm.h	2002-12-10 08:08:45.000000000 +0100
+++ ../3-3-ff-exp/src/comm.h	2002-12-21 13:44:12.000000000 +0100
@@ -8,6 +8,10 @@
 #include <pthread.h>
 #endif
 
+#ifdef USE_MCCP
+# include <zlib.h>
+#endif
+
 #include "simulate.h"   /* callback_t for input_to_t */
 #include "svalue.h"
 
@@ -105,6 +109,7 @@
 struct write_buffer_s
 {
     struct write_buffer_s *next;
+    int compress; /* should the buffer get compressed by mccp? */
     size_t length;
     int    errorno; /* After writing, the errno */
     char buffer[1 /* .length */ ];
@@ -207,24 +212,31 @@
     char message_buf[MAX_SOCKET_PACKET_SIZE];
       /* The send buffer. */
 
+#ifdef USE_MCCP
+   unsigned char   compressing;                 /* MCCP support */
+   z_stream      * out_compress;                /* MCCP support */
+   unsigned char * out_compress_buf;            /* MCCP support */
+#endif   
+
 #ifdef USE_PTHREADS
-    /* The data exchange with the writer thread happens through two
-     * lists: write_first/write_last hands of data to write to
-     * the thread, written_first receives the written buffers.
-     * Reason for this 2-way exchange is that the writer thread
-     * must not call xfree().
-     * TODO: These two lists + one extra can be combined into
-     * TODO:: one list, plus two roving pointers into it.
-     */
-    pthread_mutex_t        write_mutex;
-    pthread_cond_t         write_cond;
-    pthread_t              write_thread;
-    struct write_buffer_s *write_first;  /* List of buffers to write */
-    struct write_buffer_s *write_last;
-    unsigned long          write_size;
-    struct write_buffer_s *write_current; /* Buffer currently written */
-    struct write_buffer_s *written_first; /* List of written buffers */
-#endif
+     /* The data exchange with the writer thread happens through two
+      * lists: write_first/write_last hands of data to write to
+      * the thread, written_first receives the written buffers.
+      * Reason for this 2-way exchange is that the writer thread
+      * must not call xfree().
+      * TODO: These two lists + one extra can be combined into
+      * TODO:: one list, plus two roving pointers into it.
+      */
+     pthread_mutex_t        write_mutex;
+     pthread_cond_t         write_cond;
+     pthread_t              write_thread;
+     struct write_buffer_s *write_first;  /* List of buffers to write */
+     struct write_buffer_s *write_last;
+     unsigned long          write_size;
+     struct write_buffer_s *write_current; /* Buffer currently written */
+     struct write_buffer_s *written_first; /* List of written buffers */
+  #endif
+   
 };
 
 /* --- Bitflags and masks for interactive.noecho ---
@@ -402,4 +414,7 @@
 extern void refresh_access_data(void (*add_entry)(struct sockaddr_in *, int, long*) );
 #endif /* ACCESS_CONTROL */
 
+#define COMPRESS_BUF_SIZE 8192
+#define UMIN(a,b) ((a) < (b) ? (a) : (b))
+
 #endif /* COMM_H__ */
Only in ../3-3-ff-exp/src: comm.o
Only in ../3-3-ff-exp/src: config.h
diff -u -r 3-3-339/src/config.h.in ../3-3-ff-exp/src/config.h.in
--- 3-3-339/src/config.h.in	2002-12-07 08:38:22.000000000 +0100
+++ ../3-3-ff-exp/src/config.h.in	2002-12-21 13:44:20.000000000 +0100
@@ -290,6 +290,13 @@
  */
 @cdef_use_alists@ USE_ALISTS
 
+/* Define this if you want MCCP (Mud Control Compression Protocol).
+ */
+@cdef_use_mccp@ USE_MCCP
+
+/* Define this if you want to use the string compiler */
+#define USE_STRING_COMPILER
+
 /* Define this if you want PCRE instead of traditional regexps.
  */
 @cdef_use_pcre@ USE_PCRE
diff -u -r 3-3-339/src/func_spec ../3-3-ff-exp/src/func_spec
--- 3-3-339/src/func_spec	2002-12-12 07:17:34.000000000 +0100
+++ ../3-3-ff-exp/src/func_spec	2002-12-21 13:44:17.000000000 +0100
@@ -510,6 +510,12 @@
 void    set_combine_charset(int *|string);
 void    set_connection_charset(int *|string, int default: F_CONST1);
 mixed   set_prompt(string|closure|int, object default: F_THIS_PLAYER);
+#ifdef USE_MCCP
+mixed   query_mccp(object default: F_THIS_PLAYER);
+int    *query_mccp_stats(object default: F_THIS_PLAYER);
+int     start_mccp_compress(int);
+int     end_mccp_compress();
+#endif
 
 void    write(mixed);
 object *users();
@@ -640,6 +646,23 @@
 
 #endif /* USE_MYSQL */
 
+#ifdef USE_STRING_COMPILER /* Stringcompiler */
+
+mixed   string_compiler(...);
+int     string_compiler_term(...);
+int     string_compiler_one(...);
+int     string_compiler_arglist(...);
+mixed   query_variable(string);
+mixed   set_variable(string,mixed);
+
+#endif /* USE_STRING_COMPILER  */
+
+#ifdef USE_GRINGOTTS /* encryption library libgringotts */
+
+string  grg_enc(string, void|string|int, void|int);
+string  grg_dec(string, void|string|int, void|int);
+
+#endif /* USE_GRINGOTTS */
 
 /* The following functions are optional and can be configured out.
  */
diff -u -r 3-3-339/src/lex.c ../3-3-ff-exp/src/lex.c
--- 3-3-339/src/lex.c	2002-12-21 07:37:56.000000000 +0100
+++ ../3-3-ff-exp/src/lex.c	2002-12-21 14:07:25.000000000 +0100
@@ -792,6 +792,15 @@
 #ifdef USE_MYSQL
     add_permanent_define("__MYSQL__", -1, string_copy("1"), MY_FALSE);
 #endif
+#ifdef USE_GRINGOTTS
+    add_permanent_define("__GRINGOTTS__", -1, string_copy("1"), MY_FALSE);
+#endif
+#ifdef USE_STRING_COMPILER
+    add_permanent_define("__STRINGCOMPILER__", -1, string_copy("1"), MY_FALSE);
+#endif
+#ifdef USE_MCCP
+    add_permanent_define("__MCCP__", -1, string_copy("1"), MY_FALSE);
+#endif
 #ifdef USE_ALISTS
     add_permanent_define("__ALISTS__", -1, string_copy("1"), MY_FALSE);
 #endif
diff -u -r 3-3-339/src/main.c ../3-3-ff-exp/src/main.c
--- 3-3-339/src/main.c	2002-12-07 08:38:22.000000000 +0100
+++ ../3-3-ff-exp/src/main.c	2002-12-21 13:44:18.000000000 +0100
@@ -1493,6 +1493,12 @@
   fputs("           IPv6: supported.\n", stdout);
 #endif
 
+#ifndef USE_MCCP
+  fputs("           MCCP: not supported.\n", stdout);
+#else
+  fputs("           MCCP: supported.\n", stdout);
+#endif
+  
 #ifndef USE_MYSQL
   fputs("          mySQL: not supported.\n", stdout);
 #else
Only in ../3-3-ff-exp/src: pkg-encrypt.c
Only in ../3-3-ff-exp/src: pkg-stringcompiler.c
diff -u -r 3-3-339/src/settings/default ../3-3-ff-exp/src/settings/default
--- 3-3-339/src/settings/default	2002-10-11 05:31:08.000000000 +0200
+++ ../3-3-ff-exp/src/settings/default	2002-12-21 14:21:15.000000000 +0100
@@ -86,8 +86,8 @@
 # in seconds.
 # A swapping time <= 0 disables that particular swapping feature.
 
-with_time_to_swap=900
-with_time_to_swap_variables=1800
+with_time_to_swap=0
+with_time_to_swap_variables=0
 
 # This time determines the interval before an object is reset again.
 # The actual length of the intervals is determined somewhat randomly
@@ -116,7 +116,7 @@
 # This value gives the upper limits for the total allocated memory.
 # A value of 0 means 'unlimited'.
 
-with_max_malloced=0x4000000 
+with_max_malloced=0
 
 # If these values are >0, the driver will reserve this amount of memory
 # on startup for large resp. small blocks, reducing the block fragmentation.
@@ -134,12 +134,12 @@
 # of euids, ie. load_object() and clone_object() require the current
 # object to have a non-zero euid.
 
-enable_strict_euids=no
+enable_strict_euids=yes
 
 # The maximum number of eval-ticks for one execution. If this
 # is exceeded, the execution is aborted.
 
-with_max_cost=1000000
+with_max_cost=500000
 
 
 # --- Communication ---
@@ -172,7 +172,7 @@
 #   'xerq': the driver is compiled with erq support, the Makefiles
 #           are set up to compile Brian's xerq.
 
-enable_erq=erq
+enable_erq=xerq
 
 # Max size of a packet received from/send to the ERQ.
 # TODO: Do the current erqs compile this in?
@@ -222,11 +222,11 @@
 # enabled), relative to the mudlib directory. The driver will append
 # '.<hostname>' to the file.
 
-with_swap_file=LP_SWAP.3
+with_swap_file=var/LP_SWAP.3
 
 # Enable support for IPv6 (assuming your system supports it).
 
-enable_use_ipv6=no
+enable_use_ipv6=yes
 
 
 # --- Wizlist ---
@@ -236,7 +236,7 @@
 # If disabled ('with_wizlist_file=no'), a wizlist file can still be
 # given on the commandline.
 
-with_wizlist_file=WIZLIST
+with_wizlist_file=no
 
 # --- Access Control ---
 
@@ -246,27 +246,27 @@
 
 # The name of the file from where the access permissions are read.
 
-with_access_file=ACCESS.ALLOW
+with_access_file=etc/ACCESS.ALLOW
 
 # Enable this to log all connection attempts.
 
-enable_access_log=no
+enable_access_log=yes
 
 # The name of the file where all connections are logged.
 
-with_access_log=access.allow.log
+with_access_log=log/driver/access.allow.log
 
 
 # --- Language ---
 
 # Enable this if you want the efun parse_command().
 
-enable_use_parse_command=yes
+enable_use_parse_command=no
 
 # Enable this if you want the efun set_light() and the simple 2.4.5 light
 # system.
 
-enable_use_set_light=yes
+enable_use_set_light=no
 
 # Enable this if you want the efun set_is_wizard().
 
@@ -274,7 +274,7 @@
 
 # Enable this if you want the efun process_string().
 
-enable_use_process_string=yes
+enable_use_process_string=no
 
 # Enable INITIALIZATION_BY___INIT if you want all initializations of
 # variables be suspended until the object is created. This variant is
@@ -312,7 +312,7 @@
 #          The libraries are searched in the default path, <path>/lib/mysql,
 #          <path>/lib and <path>, in this order.
 
-enable_use_mysql=no
+enable_use_mysql=yes
 
 # Enable support for alists.
 
@@ -350,7 +350,7 @@
 # With this option enable, expensive operations like string additions
 # have additional evalcosts depending on the amount of data handled.
 
-enable_dynamic_costs=no
+enable_dynamic_costs=yes
 
 # Define the maximum stack size of the virtual machine. It must be big
 # enough to hold all local variables, arguments and temporary values.
Only in ../3-3-ff-exp/src/settings: ff-test
diff -u -r 3-3-339/src/settings/finalfrontier ../3-3-ff-exp/src/settings/finalfrontier
--- 3-3-339/src/settings/finalfrontier	2002-09-18 19:42:56.000000000 +0200
+++ ../3-3-ff-exp/src/settings/finalfrontier	2002-12-21 13:45:25.000000000 +0100
@@ -24,32 +24,34 @@
 # --- Runtime limits ---
 
 # --- Timing ---
-with_time_to_swap=1800
-with_time_to_swap_variables=3600
+with_time_to_swap=4800
+with_time_to_swap_variables=7200
 with_time_to_reset=1800
 
 # --- Memory ---
 with_reserved_user_size=0x400000
 with_reserved_master_size=0x100000
 with_reserved_system_size=0x200000
-with_max_malloced=0x16000000
-enable_min_malloced=yes
-with_min_malloced=0x8000000
-enable_min_small_malloced=yes
-with_min_small_malloced=0x4000000
+with_max_malloced=0x19000000
+#enable_min_malloced=yes
+#with_min_malloced=0x8000000
+#enable_min_small_malloced=yes
+#with_min_small_malloced=0x4000000
 
 # --- Interpreter ---
-with_max_cost=1000000
+with_max_cost=1500000
 with_max_trace=85
 with_max_user_trace=80
  
+enable_dynamic_costs=no
+
 # --- Communication ---
 with_portno=7600
 with_udp_port=7610
 
 #----------- Compilation Options ----------
-enable_malloc_trace=yes
-enable_malloc_lpc_trace=yes
+enable_malloc_trace=no
+enable_malloc_lpc_trace=no
 
 # --- Access Control ---
 enable_access_control=yes
@@ -57,11 +59,13 @@
 # --- Language ---
 enable_use_parse_command=yes
 enable_use_mysql=yes
-enable_use_alists=yes
 enable_use_pcre=no
+enable_use_alists=yes
+enable_use_pthreads=no
+enable_use_mccp=yes
 
 # --- Runtime limits ---
-with_catch_reserved_cost=10000
+with_catch_reserved_cost=2000
 with_master_reserved_cost=0x800
 with_max_players=200
 
@@ -71,6 +75,6 @@
 with_htable_size=0x10000
 with_otable_size=0x4000
 with_apply_cache_bits=14
-
+with_rxcache_table=16384
 
 
Only in ../3-3-ff-exp/src/settings: hogwarts
diff -u -r 3-3-339/src/string_spec ../3-3-ff-exp/src/string_spec
--- 3-3-339/src/string_spec	2002-11-14 02:24:32.000000000 +0100
+++ ../3-3-ff-exp/src/string_spec	2002-12-21 13:44:07.000000000 +0100
@@ -201,4 +201,8 @@
 
 #endif /* SUPPLY_PARSE_COMMAND */
 
+#ifdef USE_STRING_COMPILER
+STRING_COMPILER "string_compiler"
+#endif
+
 /***************************************************************************/
