Short: Inheritance causes memory corruption
From: "Heiko Kopp" <heiko.kopp@informatik.uni-rostock.de>
Date: Wed, 20 Mar 2002 18:12:11 +0100
Type: Bug
State: Done - fixed in 3.3.195
Driver: 3.3.x

Hier kommt der Backtrace:

Program received signal SIGSEGV, Segmentation fault.
0x080c3a42 in fatal (fmt=3D0x80e9300 "'illegal' instruction
encountered.\n") at simulate.c:523
523             *((char*)0) =3D 0/a;
(gdb) bt
#0  0x080c3a42 in fatal (fmt=3D0x80e9300 "'illegal' instruction
encountered.\n") at simulate.c:523
#1  0x0807aca5 in eval_instruction (first_instruction=3D0x81b0767
"\017\034", initial_sp=3D0x811acc8)
    at interpret.c:6989
#2  0x080948e5 in apply_low (fun=3D0x82f97f0, ob=3D0x838d88c, =
num_arg=3D1,
b_ign_prot=3D0) at interpret.c:15001
#3  0x08094a2a in int_apply (fun=3D0x82f97f0, ob=3D0x838d88c, =
num_arg=3D1,
b_ign_prot=3D0, b_use_default=3D1)
    at interpret.c:15079
#4  0x080930e9 in eval_instruction (first_instruction=3D0x81eeaef
"[\035\t[\034", initial_sp=3D0x811aca8)
    at interpret.c:14402
#5  0x08096b33 in call_lambda (lsvp=3D0x811aca0, num_arg=3D1) at
interpret.c:16208
#6  0x08099cef in f_funcall (sp=3D0x811aca8, num_arg=3D2) at
interpret.c:18332
#7  0x0807c25c in eval_instruction (first_instruction=3D0x82fc34f =
"[\232",
initial_sp=3D0x811ac90)
    at interpret.c:7290
#8  0x08096b33 in call_lambda (lsvp=3D0x816f808, num_arg=3D1) at
interpret.c:16208
#9  0x080ab5f7 in reset_object (ob=3D0x838d88c, arg=3D5) at object.c:746
#10 0x080c56ee in load_object (lname=3D0x814dc00 "std/room",
create_super=3D0, depth=3D0, chain=3D0x0)
    at simulate.c:1789
#11 0x080c5c2b in lookfor_object (str=3D0x82fb488, bLoad=3D1) at
simulate.c:2026
#12 0x080c8535 in f_load_object (sp=3D0x811ac80) at simulate.c:3961
#13 0x0807bfc3 in eval_instruction (
    first_instruction=3D0x82dbdcb
"=B8\2313%\006\231\003'\n\v3c\005\n\f=B1\017X[\n\r[\n\004\025\030=F1[\034=
",=20
    initial_sp=3D0x811ac20) at interpret.c:7245
#14 0x080948e5 in apply_low (fun=3D0x831552c, ob=3D0x838730c, =
num_arg=3D2,
b_ign_prot=3D0) at interpret.c:15001
#15 0x08094a2a in int_apply (fun=3D0x831552c, ob=3D0x838730c, =
num_arg=3D2,
b_ign_prot=3D0, b_use_default=3D1)
    at interpret.c:15079
#16 0x080930e9 in eval_instruction (first_instruction=3D0x82cc4c3 =
"\034",
initial_sp=3D0x811abe8)
    at interpret.c:14402
#17 0x080948e5 in apply_low (fun=3D0x8315378, ob=3D0x830c0bc, =
num_arg=3D1,
b_ign_prot=3D0) at interpret.c:15001
#18 0x08094a2a in int_apply (fun=3D0x8315378, ob=3D0x830c0bc, =
num_arg=3D1,
b_ign_prot=3D0, b_use_default=3D1)
    at interpret.c:15079
#19 0x080950e2 in sapply_int (fun=3D0x8315378, ob=3D0x830c0bc, =
num_arg=3D1,
b_find_static=3D0, b_use_default=3D1)
    at interpret.c:15240
#20 0x080954f9 in apply (fun=3D0x8315378, ob=3D0x830c0bc, num_arg=3D1) =
at
interpret.c:15280
#21 0x080c7efa in execute_callback (cb=3D0x81004b0, nargs=3D1, keep=3D0,
toplevel=3D1) at simulate.c:3569
#22 0x0805f515 in call_function_interactive (i=3D0x81b0e50, =
str=3D0xbfffe050
"") at comm.c:3271
#23 0x08051b90 in backend () at backend.c:560
#24 0x080a1df4 in main (argc=3D4, argv=3D0xbffff9a4) at main.c:459
#25 0x400f8627 in __libc_start_main (main=3D0x80a1768 <main>, argc=3D4,
ubp_av=3D0xbffff9a4,=20
    init=3D0x8049c54 <_init>, fini=3D0x80d42b0 <_fini>, =
rtld_fini=3D0x4000dcc4
<_dl_fini>, stack_end=3D0xbffff99c)
    at ../sysdeps/generic/libc-start.c:129

Viel Spa=DF damit,

   ----------------------------------------------------------

From: Heiko Kopp <heiko.kopp@informatik.uni-rostock.de>
Date: Thu, 21 Mar 2002 17:07:40 +0100

Hi Lars

hier kommt der nächste Crash, möglich das die beiden zusammen hängen, sieht 
jedenfalls anders aus :-)

Mud output ohne GDB:

2002.03.21 16:59:24 (free_svalue) Illegal svalue 0x83054e4 type 0
2002.03.21 16:59:24 Current object was daemons/wizardd#3
kernel/master kernel/simul/master.c line 50
81ada4d:  28        3 local                      (0: 91)        line 50
81ada4f:  23          return                     (1: 92)
kernel/master kernel/master.c line 168
81acb7e:  92          restore_arg_frame          (2: 81)        line 168
81acb7f: 111        2 push_local_variable_lvalue (1: 80)
81acb81:  40          (void)=                    (2: 81)
81acb82:  28        2 local                      (0: 79)        line 170
81acb84:  23          return                     (1: 80)
lib/lib_grammar <lambda ?> line 0
82a7d1b:  92          restore_arg_frame          (2: 76)        line 0
82a7d1c:  23          return                     (1: 75)
lib/lib_grammar lib/lib_grammar.c line 17
81b0537:  91          save_arg_frame             (0: 71)        line 17
81b0538: 104          call_inherited             (1: 72)
lib/lib_grammar std/object.c line 24
81ea867:  91          save_arg_frame             (0: 72)        line 24
81ea868: 104          call_inherited             (1: 73)
lib/lib_grammar std/modules/object/access.c line 21
81aeb37:  10        0 cstring0                   (0: 73)        line 21
81aeb39: 106        0 push_identifier_lvalue     (1: 74)
81aeb3b:  40          (void)=                    (2: 75)
81aeb3c:  10        0 cstring0                   (0: 73)
81aeb3e: 106        1 push_identifier_lvalue     (1: 74)
81aeb40:  40          (void)=                    (2: 75)        line 23
81aeb41:  16          const1                     (0: 73)
81aeb42:  23          return                     (1: 74)
lib/lib_grammar std/object.c line 24
81ea86d:  92          restore_arg_frame          (2: 74)        line 24
81ea86e:  88          pop_value                  (1: 73)
81ea86f:  15          const0                     (0: 72)
81ea870: 106        4 push_identifier_lvalue     (1: 73)
81ea872:  40          (void)=                    (2: 74)        line 27
81ea873:  16          const1                     (0: 72)
81ea874:  23          return                     (1: 73)
lib/lib_grammar lib/lib_grammar.c line 17
81b053d:  92          restore_arg_frame          (2: 73)        line 17
81b053e:  88          pop_value                  (1: 72)
81b053f:  16          const1                     (0: 71)
81b0540:  23          return                     (1: 72)
daemons/wizardd#3 <lambda ?> line 0
82e96f3:  91          save_arg_frame             (0: 73)        line 0
82e96f4: 154        0 lambda_cconstant           (1: 74)
82e96f6:  28        0 local                      (2: 75)
82e96f8: 391          funcall                    (3: 76)
kernel/master kernel/master.c line 363
81acd97:  91          save_arg_frame             (0: 76)        line 363
81acd98:  29        9 catch                      (1: 77)
81acd9a:  91          save_arg_frame             (1: 77)
81acd9b:  28        0 local                      (2: 78)
81acd9d:  16          const1                     (3: 79)
81acd9e: 103          call_function              (4: 80)
81acbab:  28        1 local                      (0: 84)        line 200
81acbad:  59          !                          (1: 85)
81acbae:  37          &&                         (1: 85)
81acbbb:  99          branch_when_zero           (1: 85)
81acbe7:  90      770 clear_locals               (0: 84)        line 214
81acbea:  28        1 local                      (0: 84)        line 219
81acbec: 100          branch_when_non_zero       (1: 85)
81acbf7:   8        4 identifier                 (0: 84)        line 224
81acbf9:  10       14 cstring0                   (1: 85)
81acbfb:  60          index                      (2: 86)
81acbfc:  28        0 local                      (1: 85)
81acbfe: 248       39 load_name                  (2: 86)
81acc00: 334       20 m_delete                   (2: 86)
81acc02:  88          pop_value                  (1: 85)        line 227
81acc03:  91          save_arg_frame             (0: 84)
81acc04:  28        0 local                      (1: 85)
81acc06:  18        2 clit                       (2: 86)
81acc08: 406       35 object_info                (3: 87)
81acc0a:  92          restore_arg_frame          (2: 86)
81acc0b:  18       11 clit                       (1: 85)
81acc0d:  60          index                      (2: 86)
81acc0e:  16          const1                     (1: 85)
81acc0f:  51          !=                         (2: 86)
81acc10:  99     6145 branch_when_zero           (1: 85)
81acc13:  28        0 local                      (0: 84)        line 233
81acc15:  16          const1                     (1: 85)
81acc16:  14 -2147483648 number                     (2: 86)
81acc1b:  54          |                          (3: 87)
81acc1c: 326       12 functionlist               (2: 86)
81acc1e: 111        2 push_local_variable_lvalue (1: 85)
81acc20:  40          (void)=                    (2: 86)        line 235
81acc21:  28        2 local                      (0: 84)
81acc23: 179          sizeof                     (1: 85)
81acc24:  16          const1                     (1: 85)
81acc25:  46          >                          (2: 86)
81acc26:  99     6145 branch_when_zero           (1: 85)
81acc29:  91          save_arg_frame             (0: 84)        line 240
81acc2a:  28        0 local                      (1: 85)
81acc2c:  15          const0                     (2: 86)
81acc2d: 406       35 object_info                (3: 87)
81acc2f:  92          restore_arg_frame          (2: 86)
81acc30:  18       11 clit                       (1: 85)
81acc32:  60          index                      (2: 86)
81acc33:  99     6145 branch_when_zero           (1: 85)
81acc36:  28        2 local                      (0: 84)        line 245
81acc38: 179          sizeof                     (1: 85)
81acc39:  16          const1                     (1: 85)
81acc3a:  50          ==                         (2: 86)
81acc3b:  99       18 branch_when_zero           (1: 85)
81acc3d:   8        5 identifier                 (0: 84)        line 247
81acc3f:  28        2 local                      (1: 85)
81acc41:  15          const0                     (2: 86)
81acc42:  60          index                      (3: 87)
81acc43: 338       24 member                     (2: 86)
81acc45: 111        3 push_local_variable_lvalue (1: 85)
81acc47:  40          (void)=                    (2: 86)        line 249
81acc48:  28        3 local                      (0: 84)
81acc4a:  15          const0                     (1: 85)
81acc4b:  48          <                          (2: 86)
81acc4c:  99        1 branch_when_zero           (1: 85)
81acc4e:  24          return0                    (0: 84)        line 255
81acda1:  92          restore_arg_frame          (3: 79)        line 363
81acda2: 162          end_catch                  (2: 78)
81acda3:  92          restore_arg_frame          (2: 78)
81acda4:  88          pop_value                  (1: 77)
81acda5:  91          save_arg_frame             (0: 76)        line 366
81acda6:  28        0 local                      (1: 77)
81acda8:  10        2 cstring0                   (2: 78)
81acdaa:  15          const0                     (3: 79)
81acdab: 167          call_other                 (4: 80)
lib/lib_grammar std/object.c line 131
81ea91b:  15          const0                     (0: 80)        line 131
81ea91c:  28        0 local                      (1: 81)
81ea91e:  50          ==                         (2: 82)
81ea91f:  99       16 branch_when_zero           (1: 81)
81ea921:  91          save_arg_frame             (0: 80)        line 134
81ea922: 103          call_function              (1: 81)
81ea87f:  24          return0                    (0: 81)        line 43
81ea925:  92          restore_arg_frame          (2: 82)        line 134
81ea926:  88          pop_value                  (1: 81)
81ea927:  91          save_arg_frame             (0: 80)        line 137
81ea928:   8        4 identifier                 (1: 81)
81ea92a: 103          call_function              (2: 82)
81ea887:  24          return0                    (0: 82)        line 57
81ea92d:  92          restore_arg_frame          (2: 82)        line 137
81ea92e:  88          pop_value                  (1: 81)
81ea92f:  98          branch                     (0: 80)        line 139
81ea93a:  24          return0                    (0: 80)        line 144
kernel/master kernel/master.c line 366
81acdac:  92          restore_arg_frame          (2: 78)        line 366
81acdad:  88          pop_value                  (1: 77)
81acdae:  24          return0                    (0: 76)        line 369
daemons/wizardd#3 <lambda ?> line 0
82e96fa:  92          restore_arg_frame          (2: 75)        line 0
82e96fb:  23          return                     (1: 74)
lib/lib_grammar std/object.c line 116
81ea903:  91          save_arg_frame             (0: 68)        line 116
81ea904:  10        5 cstring0                   (1: 69)
81ea906:  10        6 cstring0                   (2: 70)
81ea908: 153          previous_object0           (3: 71)
81ea909: 184          this_object                (4: 72)
81ea90a:  28        1 local                      (5: 73)
81ea90c: 167          call_other                 (6: 74)
lib/lib_lpc lib/lib_lpc.c line 54
82bb2fb:  28        1 local                      (0: 75)        line 54
82bb2fd: 248       39 load_name                  (1: 76)
82bb2ff:  26          switch                     (1: 76)
82bb303:  25          break                      (0: 75)        line 58
82bb30d:  28        2 local                      (0: 75)        line 61
82bb30f:  26          switch                     (1: 76)
82bb313:  10       11 cstring0                   (0: 75)        line 65
82bb315:  28        0 local                      (1: 76)
82bb317: 248       39 load_name                  (2: 77)
82bb319:  41          +                          (2: 77)
82bb31a:  10       12 cstring0                   (1: 76)        line 66
82bb31c:  41          +                          (2: 77)
82bb31d:  28        2 local                      (1: 76)
82bb31f:  41          +                          (2: 77)
82bb320:  10       13 cstring0                   (1: 76)
82bb322:  41          +                          (2: 77)        line 67
82bb323:  28        1 local                      (1: 76)
82bb325: 248       39 load_name                  (2: 77)
82bb327:  41          +                          (2: 77)
82bb328:  10       14 cstring0                   (1: 76)
82bb32a:  41          +                          (2: 77)
82bb32b:  15          const0                     (1: 76)
82bb32c: 322        8 debug_message              (2: 77)
82bb32e:  15          const0                     (0: 75)
82bb32f:  88          pop_value                  (1: 76)
82bb330:  25          break                      (0: 75)        line 68
82bb33a:  24          return0                    (0: 75)        line 70
lib/lib_grammar std/object.c line 116
81ea90d:  92          restore_arg_frame          (2: 70)        line 116
81ea90e:  88          pop_value                  (1: 69)
81ea90f:  24          return0                    (0: 68)        line 118
daemons/wizardd#3 std/modules/parser.c line 845
82c0e47:  92          restore_arg_frame          (2: 64)        line 845
82c0e48: 111       13 push_local_variable_lvalue (1: 63)        line 848
82c0e4a:  40          (void)=                    (2: 64)
82c0e4b:  28       13 local                      (0: 62)
82c0e4d: 100        9 branch_when_non_zero       (1: 63)        line 849
82c0e4f:  15          const0                     (0: 62)
82c0e50: 111       12 push_local_variable_lvalue (1: 63)        line 850
82c0e52:  40          (void)=                    (2: 64)
82c0e53:  95          lbranch                    (0: 62)        line 852
82c0fba:  28       12 local                      (0: 62)        line 927
82c0fbc:  99          branch_when_zero           (1: 63)        line 928
82c100a:  18        2 clit                       (0: 62)        line 958
82c100c: 111       11 push_local_variable_lvalue (1: 63)
82c100e:  40          (void)=                    (2: 64)
82c100f:  98          branch                     (0: 62)
82c1034:  28       11 local                      (0: 62)
82c1036:  28        9 local                      (1: 63)
82c1038: 179          sizeof                     (2: 64)
82c1039:  48          <                          (2: 64)
82c103a: 102       42 bbranch_when_non_zero      (1: 63)
82c103c:  28       11 local                      (0: 62)        line 967
82c103e:  28        9 local                      (1: 63)
82c1040: 179          sizeof                     (2: 64)
82c1041:  47          >=                         (2: 64)
82c1042:  99        6 branch_when_zero           (1: 63)
82c1044:  28        8 local                      (0: 62)        line 969
82c1046: 106        7 push_identifier_lvalue     (1: 63)
82c1048:  40          (void)=                    (2: 64)        line 971
82c1049:  24          return0                    (0: 62)        line 973
82c104a:  16  97 254 252  24  12  88 158
'   post_command' in 'std/modules/living/command.c' ('        std/player#2') 
line 120
'post_command_to_daemon' in 'std/modules/living/daemons.c' ('        
std/player#2') line 293
'execute_daemon_command' in 'std/modules/living/daemons.c' ('        
std/player#2') line 236
'dispatch_command' in '        std/daemon.c' ('   daemons/wizardd#3') line 183
'parse_wizard_command' in '   daemons/wizardd.c' ('   daemons/wizardd#3') 
line 183
' parse_sentence' in 'std/modules/parser.c' ('   daemons/wizardd#3') line 1047
'     match_rule' in 'std/modules/parser.c' ('   daemons/wizardd#3') line 973
2002.03.21 16:59:24 LDMud aborting on fatal error.
./startnativetest: line 27: 31455 Speicherzugriffsfehler  $BIN_DIR/driver -N 
-DEVERMORE -D__START_TIME__=\"`date +%y%m%d%H%M%S`\" $PORTS

gdb Ausgaben:

Program received signal SIGSEGV, Segmentation fault.
0x080740a3 in free_svalue (v=0x834b4dc) at interpret.c:975
975             switch (v->u.lvalue->type)
(gdb) bt
#0  0x080740a3 in free_svalue (v=0x834b4dc) at interpret.c:975
#1  0x0804e8d1 in _free_vector (p=0x834b4ac) at array.c:305
#2  0x08074000 in free_svalue (v=0x8117ee0) at interpret.c:955
#3  0x0807bc91 in eval_instruction (first_instruction=0x82d6823 "[\034", 
initial_sp=0x8117e80) at interpret.c:7561
#4  0x08093381 in apply_low (fun=0x83542d8, ob=0x8357248, num_arg=2, 
b_ign_prot=0) at interpret.c:14916
#5  0x080939fa in int_apply (fun=0x83542d8, ob=0x8357248, num_arg=2, 
b_ign_prot=0, b_use_default=1) at interpret.c:15102
#6  0x080920f1 in eval_instruction (first_instruction=0x82c4f9b 
"Z\002\001\b\005%\005\b\005\034", initial_sp=0x8117e58)
    at interpret.c:14425
#7  0x08093381 in apply_low (fun=0x82f60f0, ob=0x8357248, num_arg=3, 
b_ign_prot=0) at interpret.c:14916
#8  0x080939fa in int_apply (fun=0x82f60f0, ob=0x8357248, num_arg=3, 
b_ign_prot=0, b_use_default=1) at interpret.c:15102
#9  0x080920f1 in eval_instruction (first_instruction=0x82c20bb 
"Z\001\001\n\003o\001(\002\r\n\0032c2\034", initial_sp=0x8117db0)
    at interpret.c:14425
#10 0x08093381 in apply_low (fun=0x82fcf9c, ob=0x834f964, num_arg=1, 
b_ign_prot=0) at interpret.c:14916
#11 0x080939fa in int_apply (fun=0x82fcf9c, ob=0x834f964, num_arg=1, 
b_ign_prot=0, b_use_default=1) at interpret.c:15102
#12 0x080940ae in sapply_int (fun=0x82fcf9c, ob=0x834f964, num_arg=1, 
b_find_static=0, b_use_default=1) at interpret.c:15263
#13 0x0804c7f5 in parse_command (buff=0xbfffc190 "wizhelp wizhelp", 
from_efun=0) at actions.c:1061
#14 0x0804ccdb in execute_command (str=0xbfffc190 "wizhelp wizhelp", 
ob=0x834f964) at actions.c:1228
#15 0x08051a1e in backend () at backend.c:563
#16 0x080a0b5c in main (argc=4, argv=0xbfffdae4) at main.c:459
#17 0x400f8627 in __libc_start_main (main=0x80a04e0 <main>, argc=4, 
ubp_av=0xbfffdae4, init=0x8049c54 <_init>,
    fini=0x80d1ea0 <_fini>, rtld_fini=0x4000dcc4 <_dl_fini>, 
stack_end=0xbfffdadc) at ../sysdeps/generic/libc-start.c:129
(gdb)

Gruß

Heiko.

-- 
Dipl.-Inf. Heiko Kopp			Telefon: +49 (0) 381 4982360
Unversity of Rostock                		Fax: +49 (0) 381 4983440
Deparment of Computer Science
Chair for Computer Architecture
Albert-Einstein-Str. 21
18059 Rostock
Germany

   ----------------------------------------------------------

From: "Heiko Kopp" <heiko.kopp@informatik.uni-rostock.de>
Date: Wed, 20 Mar 2002 18:12:11 +0100

Hier kommt der Backtrace:

Program received signal SIGSEGV, Segmentation fault.
0x080c3a42 in fatal (fmt=3D0x80e9300 "'illegal' instruction
encountered.\n") at simulate.c:523
523             *((char*)0) =3D 0/a;
(gdb) bt
#0  0x080c3a42 in fatal (fmt=3D0x80e9300 "'illegal' instruction
encountered.\n") at simulate.c:523
#1  0x0807aca5 in eval_instruction (first_instruction=3D0x81b0767
"\017\034", initial_sp=3D0x811acc8)
    at interpret.c:6989
#2  0x080948e5 in apply_low (fun=3D0x82f97f0, ob=3D0x838d88c, =
num_arg=3D1,
b_ign_prot=3D0) at interpret.c:15001
#3  0x08094a2a in int_apply (fun=3D0x82f97f0, ob=3D0x838d88c, =
num_arg=3D1,
b_ign_prot=3D0, b_use_default=3D1)
    at interpret.c:15079
#4  0x080930e9 in eval_instruction (first_instruction=3D0x81eeaef
"[\035\t[\034", initial_sp=3D0x811aca8)
    at interpret.c:14402
#5  0x08096b33 in call_lambda (lsvp=3D0x811aca0, num_arg=3D1) at
interpret.c:16208
#6  0x08099cef in f_funcall (sp=3D0x811aca8, num_arg=3D2) at
interpret.c:18332
#7  0x0807c25c in eval_instruction (first_instruction=3D0x82fc34f =
"[\232",
initial_sp=3D0x811ac90)
    at interpret.c:7290
#8  0x08096b33 in call_lambda (lsvp=3D0x816f808, num_arg=3D1) at
interpret.c:16208
#9  0x080ab5f7 in reset_object (ob=3D0x838d88c, arg=3D5) at object.c:746
#10 0x080c56ee in load_object (lname=3D0x814dc00 "std/room",
create_super=3D0, depth=3D0, chain=3D0x0)
    at simulate.c:1789
#11 0x080c5c2b in lookfor_object (str=3D0x82fb488, bLoad=3D1) at
simulate.c:2026
#12 0x080c8535 in f_load_object (sp=3D0x811ac80) at simulate.c:3961
#13 0x0807bfc3 in eval_instruction (
    first_instruction=3D0x82dbdcb
"=B8\2313%\006\231\003'\n\v3c\005\n\f=B1\017X[\n\r[\n\004\025\030=F1[\034=
",=20
    initial_sp=3D0x811ac20) at interpret.c:7245
#14 0x080948e5 in apply_low (fun=3D0x831552c, ob=3D0x838730c, =
num_arg=3D2,
b_ign_prot=3D0) at interpret.c:15001
#15 0x08094a2a in int_apply (fun=3D0x831552c, ob=3D0x838730c, =
num_arg=3D2,
b_ign_prot=3D0, b_use_default=3D1)
    at interpret.c:15079
#16 0x080930e9 in eval_instruction (first_instruction=3D0x82cc4c3 =
"\034",
initial_sp=3D0x811abe8)
    at interpret.c:14402
#17 0x080948e5 in apply_low (fun=3D0x8315378, ob=3D0x830c0bc, =
num_arg=3D1,
b_ign_prot=3D0) at interpret.c:15001
#18 0x08094a2a in int_apply (fun=3D0x8315378, ob=3D0x830c0bc, =
num_arg=3D1,
b_ign_prot=3D0, b_use_default=3D1)
    at interpret.c:15079
#19 0x080950e2 in sapply_int (fun=3D0x8315378, ob=3D0x830c0bc, =
num_arg=3D1,
b_find_static=3D0, b_use_default=3D1)
    at interpret.c:15240
#20 0x080954f9 in apply (fun=3D0x8315378, ob=3D0x830c0bc, num_arg=3D1) =
at
interpret.c:15280
#21 0x080c7efa in execute_callback (cb=3D0x81004b0, nargs=3D1, keep=3D0,
toplevel=3D1) at simulate.c:3569
#22 0x0805f515 in call_function_interactive (i=3D0x81b0e50, =
str=3D0xbfffe050
"") at comm.c:3271
#23 0x08051b90 in backend () at backend.c:560
#24 0x080a1df4 in main (argc=3D4, argv=3D0xbffff9a4) at main.c:459
#25 0x400f8627 in __libc_start_main (main=3D0x80a1768 <main>, argc=3D4,
ubp_av=3D0xbffff9a4,=20
    init=3D0x8049c54 <_init>, fini=3D0x80d42b0 <_fini>, =
rtld_fini=3D0x4000dcc4
<_dl_fini>, stack_end=3D0xbffff99c)
    at ../sysdeps/generic/libc-start.c:129

Viel Spa=DF damit,

Gru=DF

Heiko.

   ----------------------------------------------------------

From: Heiko Kopp <heiko.kopp@informatik.uni-rostock.de>
Date: Wed, 20 Mar 2002 10:37:52 +0100

On Wednesday 20 March 2002 07:27, you wrote:
> Heiko Kopp wrote on Tuesday, March 19 2002, 11:29:58:
> >Program received signal SIGSEGV, Segmentation fault.
> >0x080a8a58 in mstring_equal (pStr1=0x0, pStr2=0x816dea0) at
> >mstrings.c:931
> >931         if (pStr1 == pStr2 || get_txt(pStr1) == get_txt(pStr2))
> >(gdb)
>
> Wie sieht denn der Rest des Backtraces aus?

ich hab jetzt noch mal ein wenig im LPC-Code debuggt;

Das Problem kann ich verhindern, wenn ich die Reihenfolge zweier
inherit-Statements vertausche.

so geht es:

inherit "/std/modules/parser";
inherit "/std/room";

so geht es nicht:

inherit "/std/room";
inherit "/std/modules/parser";

Ansonsten hab ich an dem entsprechenden Objekt nichts verändert. Eigentlich
ist die Inheritance von /std/modules/parser garnicht nötig, da dies vom Raum
schon durchgefuehrt wird, aber deswegen sollte ja der Treiber nich gleich
abschmieren ;-)

Wenn du debuggen wills, sag einfach bescheid.
Gruß

   ----------------------------------------------------------

From: Heiko Kopp <heiko.kopp@informatik.uni-rostock.de>
Date: Wed, 20 Mar 2002 10:23:57 +0100

-----BEGIN PGP SIGNED MESSAGE-----

On Wednesday 20 March 2002 07:27, you wrote:
> Heiko Kopp wrote on Tuesday, March 19 2002, 11:29:58:
> >Program received signal SIGSEGV, Segmentation fault.
> >0x080a8a58 in mstring_equal (pStr1=0x0, pStr2=0x816dea0) at
> >mstrings.c:931
> >931         if (pStr1 == pStr2 || get_txt(pStr1) == get_txt(pStr2))
> >(gdb)
>
> Wie sieht denn der Rest des Backtraces aus?

Moin, ich hab jetzt mal den Treiber mit ein paar mehr ausgaben kompiliert
und bekomme diesmal auch einen Backtrace.

Das isser:

2002.03.20 10:17:56 LDMud 3.3.184 (3-3.184)
2002.03.20 10:17:56 Random seed: 0x3c9853c4
Loading init file /etc/init_file
Preloading: /kernel/security _______________________ 0.00 (    17)
Preloading: /server/se_decay _______________________ 0.00 (  1016)
Preloading: /server/se_banish ______________________ 0.00 (  4327)
Preloading: /server/se_event _______________________ 0.01 (  3600)
Preloading: /std/item ______________________________ 0.03 ( 11294)
Preloading: /std/living ____________________________ 0.04 ( 16900)
Preloading: /std/player ____________________________ 0.10 ( 31191)
Preloading: /std/room ______________________________ 0.03 ( 11301)
2002.03.20 10:17:57 LDMud ready for users.
2002.03.20 10:18:10 'illegal' instruction encountered.
2002.03.20 10:18:10 Current object was domains/system/room/void
domains/system/room/void std/modules/parser.c line 350
82cd988:  15          const0                     (0: 40)        line 350
82cd989: 111        8 push_local_variable_lvalue (1: 41)
82cd98b:  40          (void)=                    (2: 42)
82cd98c:  98          branch                     (0: 40)
82cd99e:  28        8 local                      (0: 40)
82cd9a0:  28        7 local                      (1: 41)
82cd9a2: 179          sizeof                     (2: 42)
82cd9a3:  48          <                          (2: 42)
82cd9a4: 102          bbranch_when_non_zero      (1: 41)
82cd98e:  28        7 local                      (0: 40)        line 351
82cd990:  28        8 local                      (1: 41)
82cd992:  60          index                      (2: 42)
82cd993: 254       45 make_shared_string         (1: 41)
82cd995:  28        8 local                      (1: 41)
82cd997: 111        7 push_local_variable_lvalue (2: 42)
82cd999: 115          index_lvalue               (3: 43)
82cd99a:  40          (void)=                    (2: 42)
82cd99b: 111        8 push_local_variable_lvalue (0: 40)        line 350
82cd99d:  31          ++                         (1: 41)
82cd99e:  28        8 local                      (0: 40)
82cd9a0:  28        7 local                      (1: 41)
82cd9a2: 179          sizeof                     (2: 42)
82cd9a3:  48          <                          (2: 42)
82cd9a4: 102       23 bbranch_when_non_zero      (1: 41)
82cd9a6:  28        7 local                      (0: 40)        line 355
82cd9a8:  15          const0                     (1: 41)
82cd9a9:  60          index                      (2: 42)
82cd9aa: 111        5 push_local_variable_lvalue (1: 41)
82cd9ac:  40          (void)=                    (2: 42)
82cd9ad:  91          save_arg_frame             (0: 40)        line 356
82cd9ae:  28        7 local                      (1: 41)
82cd9b0: 103          call_function              (2: 42)
82cd787:  90      257 clear_locals               (0: 46)        line 187
82cd78a:  15          const0                     (0: 46)
82cd78b: 111        1 push_local_variable_lvalue (1: 47)
82cd78d:  40          (void)=                    (2: 48)
82cd78e:   8        6 identifier                 (0: 46)        line 189
82cd790: 100          branch_when_non_zero       (1: 47)
82cd79a:  28        0 local                      (0: 46)        line 193
82cd79c: 180          stringp                    (1: 47)
82cd79d:  99          branch_when_zero           (1: 47)
82cd7cb:  28        0 local                      (0: 46)        line 202
82cd7cd: 111        1 push_local_variable_lvalue (1: 47)
82cd7cf:  40          (void)=                    (2: 48)
82cd7d0:  90      770 clear_locals               (0: 46)        line 206
82cd7d3:  16          const1                     (0: 46)
82cd7d4: 111        2 push_local_variable_lvalue (1: 47)
82cd7d6:  40          (void)=                    (2: 48)
82cd7d7:  15          const0                     (0: 46)        line 207
82cd7d8: 111        3 push_local_variable_lvalue (1: 47)
82cd7da:  40          (void)=                    (2: 48)
82cd7db:  15          const0                     (0: 46)        line 208
82cd7dc: 111        4 push_local_variable_lvalue (1: 47)
82cd7de:  40          (void)=                    (2: 48)
82cd7df:  28        2 local                      (0: 46)        line 211
82cd7e1:  88          pop_value                  (1: 47)
82cd7e2:  98          branch                     (0: 46)
82cd7f6:  28        2 local                      (0: 46)
82cd7f8:  28        1 local                      (1: 47)
82cd7fa: 179          sizeof                     (2: 48)
82cd7fb:  48          <                          (2: 48)
82cd7fc: 102       25 bbranch_when_non_zero      (1: 47)
82cd7fe:  28        1 local                      (0: 46)        line 218
82cd800:  16          const1                     (1: 47)
82cd801:  28        2 local                      (2: 48)
82cd803:  16          const1                     (3: 49)
82cd804:  42          -                          (4: 50)
82cd805:  64          ..                         (3: 49)
82cd806: 150        1 aggregate                  (1: 47)
82cd809: 111        4 push_local_variable_lvalue (1: 47)
82cd80b:  40          (void)=                    (2: 48)
82cd80c:  28        1 local                      (0: 46)        line 219
82cd80e:  28        2 local                      (1: 47)
82cd810:  73          nx_range                   (2: 48)
82cd811: 111        1 push_local_variable_lvalue (1: 47)
82cd813:  40          (void)=                    (2: 48)
82cd814:  28        2 local                      (0: 46)        line 222
82cd816:  88          pop_value                  (1: 47)
82cd817:  98          branch                     (0: 46)
82cd82b:  28        2 local                      (0: 46)
82cd82d:  28        1 local                      (1: 47)
82cd82f: 179          sizeof                     (2: 48)
82cd830:  49          <=                         (2: 48)
82cd831: 102       25 bbranch_when_non_zero      (1: 47)
82cd833:  28        2 local                      (0: 46)        line 229
82cd835:  16          const1                     (1: 47)
82cd836:  46          >                          (2: 48)
82cd837:  99          branch_when_zero           (1: 47)
82cd845: 150        0 aggregate                  (0: 46)        line 235
82cd848: 111        3 push_local_variable_lvalue (1: 47)
82cd84a:  40          (void)=                    (2: 48)
82cd84b:  28        1 local                      (0: 46)        line 239
82cd84d:  15          const0                     (1: 47)
82cd84e:  28        2 local                      (2: 48)
82cd850:  65          ..<                        (3: 49)
82cd851: 111        1 push_local_variable_lvalue (1: 47)
82cd853:  40          (void)=                    (2: 48)
82cd854:  98          branch                     (0: 46)        line 241
82cd8cd:  16          const1                     (0: 46)
82cd8ce: 102          bbranch_when_non_zero      (1: 47)
82cd856:  15          const0                     (0: 46)        line 243
82cd857: 111        2 push_local_variable_lvalue (1: 47)
82cd859:  40          (void)=                    (2: 48)
82cd85a:  98          branch                     (0: 46)
82cd86e:  28        2 local                      (0: 46)
82cd870:  28        1 local                      (1: 47)
82cd872: 179          sizeof                     (2: 48)
82cd873:  48          <                          (2: 48)
82cd874: 102       25 bbranch_when_non_zero      (1: 47)
82cd876:  28        1 local                      (0: 46)        line 251
82cd878:  15          const0                     (1: 47)
82cd879:  28        2 local                      (2: 48)
82cd87b:  16          const1                     (3: 49)
82cd87c:  42          -                          (4: 50)
82cd87d:  64          ..                         (3: 49)
82cd87e: 150        1 aggregate                  (1: 47)
82cd881: 111        4 push_local_variable_lvalue (1: 47)
82cd883:  76          (void)+=                   (2: 48)
82cd884:  28        2 local                      (0: 46)        line 253
82cd886:  28        1 local                      (1: 47)
82cd888: 179          sizeof                     (2: 48)
82cd889:  47          >=                         (2: 48)
82cd88a:  99        3 branch_when_zero           (1: 47)
82cd88c:  95          lbranch                    (0: 46)        line 255
82cd8d0:  28        3 local                      (0: 46)        line 276
82cd8d2: 150        1 aggregate                  (1: 47)
82cd8d5: 111        4 push_local_variable_lvalue (1: 47)
82cd8d7:  76          (void)+=                   (2: 48)
82cd8d8:  28        4 local                      (0: 46)        line 278
82cd8da:  23          return                     (1: 47)
82cd9b3:  92          restore_arg_frame          (2: 42)        line 356
82cd9b4: 111        4 push_local_variable_lvalue (1: 41)
82cd9b6:  40          (void)=                    (2: 42)
82cd9b7:  91          save_arg_frame             (0: 40)        line 360
82cd9b8:  28        5 local                      (1: 41)
82cd9ba:  28        3 local                      (2: 42)
82cd9bc: 103          call_function              (3: 43)
82cd8e3:  28        0 local                      (0: 43)        line 294
82cd8e5:  99       29 branch_when_zero           (1: 44)
82cd8e7:   8        5 identifier                 (0: 43)
82cd8e9:  37          &&                         (1: 44)
82cd8f4:  37          &&                         (1: 44)        line 295
82cd902:  98          branch                     (1: 44)        line 296
82cd911:  23          return                     (1: 44)
82cd9bf:  92          restore_arg_frame          (2: 42)        line 360
82cd9c0: 111        6 push_local_variable_lvalue (1: 41)
82cd9c2:  40          (void)=                    (2: 42)
82cd9c3:  28        6 local                      (0: 40)        line 362
82cd9c5: 100       13 branch_when_non_zero       (1: 41)
82cd9c7:  91          save_arg_frame             (0: 40)        line 364
82cd9c8:  18        3 clit                       (1: 41)
82cd9ca:  15          const0                     (2: 42)
82cd9cb: 150        2 aggregate                  (3: 43)
82cd9ce: 373        2 allocate                   (2: 42)
82cd9d0:  92          restore_arg_frame          (2: 42)
82cd9d1: 111        6 push_local_variable_lvalue (1: 41)
82cd9d3:  40          (void)=                    (2: 42)
82cd9d4:  28        4 local                      (0: 40)        line 368
82cd9d6: 150        1 aggregate                  (1: 41)
82cd9d9:  15          const0                     (1: 41)
82cd9da: 111        6 push_local_variable_lvalue (2: 42)
82cd9dc: 115          index_lvalue               (3: 43)
82cd9dd:  76          (void)+=                   (2: 42)
82cd9de:  28        2 local                      (0: 40)        line 369
82cd9e0:  38        1 ||                         (1: 41)
82cd9e2: 184          this_object                (0: 40)
82cd9e3: 150        1 aggregate                  (1: 41)
82cd9e6:  16          const1                     (1: 41)
82cd9e7: 111        6 push_local_variable_lvalue (2: 42)
82cd9e9: 115          index_lvalue               (3: 43)
82cd9ea:  76          (void)+=                   (2: 42)
82cd9eb:  28        1 local                      (0: 40)        line 370
82cd9ed: 150        1 aggregate                  (1: 41)
82cd9f0:  18        2 clit                       (1: 41)
82cd9f2: 111        6 push_local_variable_lvalue (2: 42)
82cd9f4: 115          index_lvalue               (3: 43)
82cd9f5:  76          (void)+=                   (2: 42)
82cd9f6:   8        5 identifier                 (0: 40)        line 372
82cd9f8: 100       22 branch_when_non_zero       (1: 41)
82cd9fa:  28        3 local                      (0: 40)        line 373
82cd9fc:  38        2 ||                         (1: 41)
82cd9fe:  10       64 cstring0                   (0: 40)
82cda00:  28        5 local                      (1: 41)
82cda02:  28        6 local                      (2: 42)
82cda04:  15          const0                     (3: 43)
82cda05: 152      513 m_caggregate               (4: 44)
82cda08: 152      257 m_caggregate               (2: 42)
82cda0b: 106        5 push_identifier_lvalue     (1: 41)
82cda0d:  40          (void)=                    (2: 42)
82cda0e:  98          branch                     (0: 40)        line 375
82cda3e:  24          return0                    (0: 40)        line 382
domains/system/room/void domains/system/room/void.c line 39
82e5a07:  92          restore_arg_frame          (2: 32)        line 39
82e5a08:  88          pop_value                  (1: 31)
82e5a09:  24          return0                    (0: 30)        line 40
domains/system/room/void std/object.c line 134
81b1bf9:  92          restore_arg_frame          (2: 31)        line 134
81b1bfa:  88          pop_value                  (1: 30)
81b1bfb:  91          save_arg_frame             (0: 29)        line 137
81b1bfc:   8        4 identifier                 (1: 30)
81b1bfe: 103          call_function              (2: 31)
81b8537:   0   0   0   0   0   0   0   0
'input_mail_address' in '         std/login.c' ('         std/login#0') line
515
'   start_player' in '        std/player.c' ('        std/player#2') line 294
'finish_login_process' in '        std/player.c' ('        std/player#2')
line 114
'           move' in 'std/modules/living/move.c' ('        std/player#2')
line 281
<lambda 0x82fbd3d> in '        std/player.c' ('        std/player#2') offset 7
' hook_create_ob' in '     kernel/master.c' ('       kernel/master') line 368
'          reset' in '        std/object.c' ('domains/system/room/void') line
137
<lambda 0x81b8534> in 'domains/system/room/void.c'
('domains/system/room/void') offset 1
2002.03.20 10:18:10 LDMud aborting on fatal error.
./startnativetest: line 27:  2131 Speicherzugriffsfehler  $BIN_DIR/driver -N
- -DEVERMORE -D__START_TIME__=\"`date +%y%m%d%H%M%S`\" $PORTS
[evermore@evermore bin]$

Gruß

Heiko.

- --
Dipl.-Inf. Heiko Kopp			Telefon: +49 (0) 381 4982360
Unversity of Rostock                		Fax: +49 (0) 381 4983440
Deparment of Computer Science
Chair for Computer Architecture
Albert-Einstein-Str. 21
18059 Rostock
Germany


   ----------------------------------------------------------

From: "Heiko Kopp" <heiko.kopp@informatik.uni-rostock.de>
Date: Tue, 19 Mar 2002 19:29:58 +0100

------=_NextPart_000_0001_01C1CF7C.753E3530
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

Hi Lars,
=20
ich hab mal nen kleinen Crash hier, der sich reproduzieren l=E4sst. Ohne
gdb gibt es folgende
Ausgabe:
=85
Preloading: /std/room ______________________________ 0.02 ( 11217)
2002.03.19 19:21:13 LDMud ready for users.
2002.03.19 19:21:35 Bad stack after evaluation.
sp: 8118488 minimum expected: 8118490
Instruction 42(-), num arg -1
2002.03.19 19:21:35 Current object was domains/system/room/void
./startnativetest: line 27: 13479 Speicherzugriffsfehler
$BIN_DIR/driver -N -DEVERMORE -D__START_TIME__=3D\"`date =
+%y%m%d%H%M%S`\"
$PORTS
=20
Im gdb dann folgende Ausgaben:
=20
Preloading: /std/room ______________________________ 0.03 ( 11217)
2002.03.19 19:22:40 LDMud ready for users.
2002.03.19 19:22:54 Bad stack after evaluation.
sp: 81182e8 minimum expected: 81182f0
Instruction 42(-), num arg -1
2002.03.19 19:22:54 Current object was domains/system/room/void
=20
Program received signal SIGSEGV, Segmentation fault.
0x080a8a58 in mstring_equal (pStr1=3D0x0, pStr2=3D0x816dea0) at
mstrings.c:931
931         if (pStr1 =3D=3D pStr2 || get_txt(pStr1) =3D=3D =
get_txt(pStr2))
(gdb)
=20
Ich denke es liegt an get_txt(pStr1) weil der wohl ung=FCltig ist. Wenn =
du
n=E4here
Infos brauchst, wann wie warum sag bescheid.
=20
Gru=DF
=20
Heiko.


