From:    Dafire@FinalFrontier
Short: Finalfrontier: illegal mapping size
Date:    Fri Feb 18 17:43:10 2000
Type: Bug
State: New


On 01.06.2000 Bastian says: the bug hasn't appeared since the last report.

The critical line(s) seem to be:

212:      contact_list[C_DATA_LIST] += ([c_nr:0;0;0;0;0;0]);
213:      contact_list[C_DATA_LIST][c_nr,CONTACT_TYPE] = otab[c_obj,_TYPE];
              
---------------------------------------------------------------------------

das war das letze was ich vom mud gesehen hab:

[Debug:Unbekannt] RUNTIME-ERROR:
                  Wer:    /0   Command: '0'
                  File:   
/d/Quornitum/imar/univers/raumschiff/sensor.c
                  Zeile: 213
                  Objekt: 
/d/Quornitum/imar/univers/ships/cpic.shuttle0
                  Fehler: Illegal mapping size: 1073741829
                                              0x40000005

---------------------------------------------------------------------------

From:           	"Bastian Hoyer" <bastian.hoyer@uni-essen.de>
To:             	"Lars Duening" <lars@bearnip.com>
Subject:        	crash.txt
Date sent:      	Sat, 3 Jun 2000 01:10:30 +0200

  
 hmm.. crash mit dem 206er 

also .. eine weile vor dem crash hatten wir :

02.06.00 22:06:02 [Debug:Unbekannt] RUNTIME-ERROR:
                  Wer:    /0   Command: '0'
                  File:   /d/Quornitum/imar/univers/raumschiff/sensor.c  
                  Zeile: 223
                  Objekt: /d/Quornitum/imar/univers/ships/eshiala.shuttle0
                  Fehler: Illegal mapping size: 1073741826
                                              0x40000002

das ist schon ein gutes zeichen fuer einen bevorstehenden crash...

02.06.00 23:06:04 [Debug:Unbekannt] RUNTIME-ERROR:
                  Wer:    /0   Command: '0'
                  File:   /<lambda 0x     0>   Zeile: 153476280
                                                      0x925dcb8
                  Objekt: /d/Sol/overlord/show/obj/stuhl#13339
                  Fehler: Out of memory
gdb:

#0  fatal (fmt=0x736d6574 <Address 0x736d6574 out of bounds>) at simulate.c:435
                                   'smet'
435             *((char*)0) = 0/a;

bt:
#0  fatal (fmt=0x736d6574 <Address 0x736d6574 out of bounds>) at simulate.c:435
#1  0x8 in ?? ()
#2  0x72616720 in ?? ()
      'rag '
Cannot access memory at address 0x63706c71.
                                  'cplq'

stdout:

2000.06.02 23:07:53 Garbage collection, slow_shut: 0
2000.06.02 23:07:49 Caught error: Error in loading object 'w/dafire/LPC_zst'
' modify_command' in '   i/player/tippse.c' ('      obj/paksi#7421')line 753
'          q_lpc' in 'i/Qbrain/Qbrain.c (/i/Qbrain/Qmarker.inc)' ('     obj/Qbrain#7446')line 404
'      start_lpc' in 'i/Qbrain/Qbrain.c (/i/Qbrain/Qmarker.inc)' ('     obj/Qbrain#7446')line 270
'          CATCH' in 'i/Qbrain/Qbrain.c (/i/Qbrain/Qmarker.inc)' ('     obj/Qbrain#7446')line 270
'          touch' in 'secure/simul_efun/simul_efun.c (map.inc)' ('     obj/Qbrain#7446')line 179
2000.06.02 23:07:49 ... execution continues.
DEBUG: 2000.06.02 23:07:53 GC start: 6862 objects in list, 7363 allocated
DEBUG: 2000.06.02 23:07:53 GC pass 1: 6862 objects in list, 7356 allocated
No trace.
********************************************************************************

stderr:

scanning chunk 0aa41f00, end 0aa45f08
scanning chunk 0aa3def8, end 0aa41f00
scanning chunk 0aa39ef0, end 0aa3def8
scanning chunk 0aa35ee8, end 0aa39ef0
scanning chunk 0aa31ee0, end 0aa35ee8
scanning chunk 0aa2ded8, end 0aa31ee0
scanning chunk 0aa29ed0, end 0aa2ded8
scanning chunk 0aa25ec8, end 0aa29ed0
scanning chunk 0aa21ec0, end 0aa25ec8
scanning chunk 0aa1deb8, end 0aa21ec0
scanning chunk 0aa19eb0, end 0aa1deb8
scanning chunk 0aa15ea8, end 0aa19eb0
scanning chunk 0aa11ea0, end 0aa15ea8
scanning chunk 0aa0de98, end 0aa11ea0
scanning chunk 0aa09e90, end 0aa0de98
scanning chunk 0aa05e88, end 0aa09e90
scanning chunk 0aa01e80, end 0aa05e88
scanning chunk 0a9fde78, end 0aa01e80
scanning chunk 0a9f9e70, end 0a9fde78
scanning chunk 0a9b5e68, end 0a9b9e70
scanning chunk 0a9b1e60, end 0a9b5e68
scanning chunk 0a9ade58, end 0a9b1e60
scanning chunk 0a9a9e50, end 0a9ade58
scanning chunk 0a9a5e48, end 0a9a9e50
scanning chunk 0a9a1e40, end 0a9a5e48
scanning chunk 0a99de38, end 0a9a1e40
scanning chunk 0a999e30, end 0a99de38
scanning chunk 0a995e28, end 0a999e30
scanning chunk 0a991e20, end 0a995e28
scanning chunk 0a98de18, end 0a991e20
scanning chunk 0a989e10, end 0a98de18
scanning chunk 0a985e08, end 0a989e10
scanning chunk 0a981e00, end 0a985e08
scanning chunk 0a97ddf8, end 0a981e00
scanning chunk 0a939df0, end 0a93ddf8
scanning chunk 0a935de8, end 0a939df0
scanning chunk 0a931de0, end 0a935de8
scanning chunk 0a92ddd8, end 0a931de0
scanning chunk 0a929dd0, end 0a92ddd8
scanning chunk 0a925dc8, end 0a929dd0
scanning chunk 0a921dc0, end 0a925dc8
scanning chunk 0a91ddb8, end 0a921dc0
scanning chunk 0a919db0, end 0a91ddb8
scanning chunk 0a915da8, end 0a919db0
scanning chunk 0a911da0, end 0a915da8
scanning chunk 0a90dd98, end 0a911da0
scanning chunk 0a909d90, end 0a90dd98
scanning chunk 0a905d88, end 0a909d90
scanning chunk 0a901d80, end 0a905d88
scanning chunk 0a8fdd78, end 0a901d80
scanning chunk 0a8f9d70, end 0a8fdd78
scanning chunk 0a8f9d70, end 0a8fdd78
scanning chunk 0a8f5d68, end 0a8f9d70
scanning chunk 0a8f1d60, end 0a8f5d68
scanning chunk 0a8edd58, end 0a8f1d60
scanning chunk 0a8e9d50, end 0a8edd58
scanning chunk 0a8e5d48, end 0a8e9d50
scanning chunk 0a8e1d40, end 0a8e5d48
scanning chunk 0a8ddd38, end 0a8e1d40
scanning chunk 0a8d9d30, end 0a8ddd38
scanning chunk 0a8d5d28, end 0a8d9d30
scanning chunk 0a8d1d20, end 0a8d5d28
scanning chunk 0a8cdd18, end 0a8d1d20
scanning chunk 0a8c9d10, end 0a8cdd18
scanning chunk 0a8c5d08, end 0a8c9d10
scanning chunk 0a881d00, end 0a885d08
scanning chunk 0a87dcf8, end 0a881d00
scanning chunk 0a879cf0, end 0a87dcf8
scanning chunk 0a875ce8, end 0a879cf0
scanning chunk 0a871ce0, end 0a875ce8
scanning chunk 0a86dcd8, end 0a871ce0
scanning chunk 0a869cd0, end 0a86dcd8
scanning chunk 0a865cc8, end 0a869cd0
scanning chunk 0a861cc0, end 0a865cc8
scanning chunk 0a85dcb8, end 0a861cc0
scanning chunk 0a859cb0, end 0a85dcb8
scanning chunk 0a855ca8, end 0a859cb0
scanning chunk 0a851ca0, end 0a855ca8
scanning chunk 0a84dc98, end 0a851ca0
scanning chunk 0a7c9c90, end 0a7cdc98
scanning chunk 0a785c88, end 0a789c90
2000.06.02 23:07:53 Small block error, start: a785c90, 2ba37250 vs. a789c90
                                                       found end,   exp. end
read: Die Wartezeit für die Verbindung ist abgelaufen
Erq demon exiting.

---------------------------------------------------------------------------

From:           	"Bastian Hoyer" <bastian.hoyer@uni-essen.de>
To:             	<lars@bearnip.com>
Subject:        	sensor
Date sent:      	Wed, 7 Jun 2000 02:31:03 +0200

Hallo Lars,

ich hab gesehen du hast ein paar Sachen implementiert um diesen Mapping Bug
zu finden... ich schick dir hier nochmal das Source-File.. das ganze
Raumschiff-System ist ziemlich kompliziert und ich weiss nicht ob es dir
ueberhaupt was nützt.. aber der Fehler ist immer in diesem File an dieser
Zeile 213.
Alle unsere Wizards die was auf sich halten ;) haben sich das schon
angeguckt und versucht das zu verstehen oder einen Fehler zu finden.. aber
Fehlanzeige...
Möglicherweise wird das Raumschiff System in Zukunft auf eine SQL Datenbank
umgestellt.. ich weiss nicht ob der Fehler dann überhaupt noch auftaucht..
wäre vielleicht besser wenn das vorher aufgedeckt wird.
Leider lässt sich der Fehler nicht richtig reproduzieren... die Raumschiffe
sind eigentlich ständig im Einsatz, und es ist eher selten das ein solches
Bugt...

Bastian

---------------------------------------------------------------------------
/*****************************************************************************
 * Final Frontier              - = = * = = -                 U N I V E R S   *
 *****************************************************************************
 * File:        raumschiff/sensor.c                                          *
 * Description: 
 * Author:      Imar@FF                                                      *
 *****************************************************************************/

#include <inherit.h>
#include PROPERTIES_H


#include <univers.h>

//#define DEBUGGER "peng"
#include <debug.h>

#include "/d/Quornitum/imar/univers/include/univers_prototypes.h"

/*
 mapping contact = ([Object: ({X,Y,Z}); ({BEAR,ELEV}); DISTANCE;
 				ARCS; NAME; TYPE; NR])
 
 Zugriff mittels:
 CONTACT_POS		0
 CONTACT_MOTION		1
 CONTACT_SPEED		2
 CONTACT_DIST		3
 CONTACT_ARCS		4
 CONTACT_TYPE		5
 CONTACT_NAME		6
 CONTACT_NR		7
*/


  
private void do_lr_sensor(float range)
{
  mapping otab;		// ObjTabelle des Sektors
  int i,j;
  int c_siz;
  float *p;
  object *idx;

  string work_around;

  /*
   * ref_list ist so gross wie die contact_list. Kontakte, die
   * angesprochen wurden, werden als TRUE vermerkt, alle anderen
   * werden zum Ende rausgeschmissen
   */
  int *ref_list; 
 
  /* Aufbau der contact_list :
   *
   * contact_list = ({ ({obj1, obj2, ...}), ([ 0: pos, motion, speed, dist,
   * 					 	 arcs, type, name;
   *					      1: ... ]) })
   *
   * Der erste Teil besteht aus Array von Objekten. Die Position eines Obj.
   * im Array ist der Key fuer die Obj-Daten im Mapping
   *
   * Zugriff auf DatenStruktur:
   * contact_list[C_OBJ_LIST] und contact_list[C_DATA_LIST]
   *
   * Zugriff auf Obj-Daten mittels der Defines:
   * CONTACT_POS			0
   * CONTACT_MOTION		1
   * CONTACT_DIST		2
   * CONTACT_ARCS		3
   * CONTACT_TYPE		4
   * CONTACT_NAME		5
   * CONTACT_NR			6
   */

  mixed *contact_list;

  DEBUG("senso");
 
  if(!environment() || 
     !sizeof(otab=UNIVERSD->query_object_table(pos2sector(QueryProp(P_POSITION)))))
    return 0;

  /*righ*/
  DEBUG(V(otab));
  /*end*/
  
  p = QueryProp(P_POSITION);
  contact_list = QueryProp(P_CONTACT_LIST);
  c_siz = sizeof(contact_list[C_OBJ_LIST]);
  ref_list = allocate(c_siz);
 
  idx = m_indices(otab);
  for(i=sizeof(idx);i--;)
    {
      int c_nr;		        // Kontakt-Nr
      float ship_distance;	// Abstand zum anderen Object
      float *c_motion;	        // Kontakt-Motion
      int c_arc;		// Kontakt-Arc
      object c_obj;		// Kontakt-Obj
  
#define _POS	0
#define _MOTION  1
#define _TYPE   2
 
      c_obj = idx[i];
      if(c_obj==this_object()) continue;
 
      c_nr = member(contact_list[C_OBJ_LIST],c_obj);
      if(c_nr != -1)
	ref_list[c_nr] = TRUE;
   
      ship_distance = distance( p , otab[c_obj, _POS] );

      /*
	DEBUG(sprintf("Dist: %s -> %s = %10.3f",
	query_name(),
	c_obj->query_name(),
	ship_distance));
	*/
  	
      if(range && ship_distance > range )
	{
	  if(c_nr != -1)  // Kontakt verloren
	    {  
	      work_around = TYPE_TEXT[otab[c_obj, _TYPE]];
	      if(!stringp(work_around))
		work_around = "???";

  
	      tell_console(P_NAV_CON,
			   wrap_string("[Achtung]",
				       sprintf("Kontakt (%d) verloren. "
					       " Typ: %s.\n",
					       c_nr+1,
					       work_around)));
  
	      /* Kontakt verloren:
	       * Ist die Position des c_nr im Array, so wird ein leerer Index
	       * gesetzt, aber nicht das Array verkuerzt. So verschieben sich
	       * die c_nr der Objekte nicht
	       */
	      contact_list[C_OBJ_LIST][c_nr] = 0;
  
	      /* Ist c_nr letztes ArrayElem gewesen ?, dann wird das Array von
	       * hinten nach freien Plaetzen untersucht und um diese gekuerzt
	       */
	      if(c_nr == c_siz - 1)
		{    
		  for(j=c_siz;j--;)
		    if(contact_list[C_OBJ_LIST][j] == 0)
		      c_siz--;
     
		  contact_list[C_OBJ_LIST]=contact_list[C_OBJ_LIST][0..c_siz];
		  ref_list = ref_list[0..c_siz]; 
		}
  
	      /* vielleicht rette ich die Werte in einer spaeteren Version */
	      contact_list[C_DATA_LIST] -= ([c_nr]);

	      /* moegliche Locks killen*/
	      check_laser_lock(c_nr);
   
	    } /* Kontakt verloren */
	}
      else  // Kontakt in Range oder neu
	{
	  /*
	   * Hier muss noch eine Sortierung der Contact-List eingebaut werden 
	   */
    
	  if(c_nr == -1)	// neuer Kontakt
	    {    
	      float *sph;
     
	      sph = xyz2sph( ({ p[X]-otab[c_obj, _POS][X],
				p[Y]-otab[c_obj, _POS][Y],
				p[Z]-otab[c_obj, _POS][Z] }) );
	      
	      /* Freien Platz in der Contact-List finden */
	      for(c_nr=0;c_nr<c_siz;c_nr++)
		if(contact_list[C_OBJ_LIST][c_nr] == 0)
		  break;
       
	      work_around = TYPE_TEXT[otab[c_obj, _TYPE]];
	      if(!stringp(work_around))
		work_around = "???";

	      tell_console(P_NAV_CON,
			   wrap_string("[Achtung]",
				       sprintf("Neuer Sensor Kontakt (%d)"
					       " auf %3.3f|%3.3f\nEntf.: %s"
					       " Type: %s.",
					       c_nr+1,
					       sph[BEARING],
					       sph[ELEVATION],
					       write_su2pc(ship_distance),
					       work_around)));
     
	      if(c_nr < c_siz)
		{
		  contact_list[C_OBJ_LIST][c_nr] = c_obj;
		  ref_list[c_nr] = TRUE;
		}
	      else   
		{
		  contact_list[C_OBJ_LIST] += ({ c_obj });
		  ref_list += ({ TRUE });
		  c_siz++;
		}
     
	      contact_list[C_DATA_LIST] += ([c_nr:0;0;0;0;0;0]);
	      contact_list[C_DATA_LIST][c_nr,CONTACT_TYPE] = otab[c_obj,_TYPE];
	      contact_list[C_DATA_LIST][c_nr,CONTACT_NAME] = c_obj->query_name();
   
	    } /* neuer Kontakt */
   
	  // Kontakt updaten
   
	  c_arc = arc(otab[c_obj,_POS], otab[c_obj, _MOTION], p);
   
	  contact_list[C_DATA_LIST][c_nr,CONTACT_POS]    = otab[c_obj,_POS];
	  contact_list[C_DATA_LIST][c_nr,CONTACT_MOTION] = otab[c_obj,_MOTION];
	  contact_list[C_DATA_LIST][c_nr,CONTACT_DIST]   = ship_distance;
	  contact_list[C_DATA_LIST][c_nr,CONTACT_ARCS]   = c_arc;
	} /* Kontakt in Range*/
    }
#undef _TYPE
#undef _MOTION
#undef _POS

  /* 
   * jetzt muessen alle Kontakts rausgeschmissen, die nicht referenziert
   * wurden. Dabei nur noch bis zum aktuellen c_siz gehen!!
   */
  /*
    DEBUG(sprintf("c_siz %d\nref_list %s\nobj_list %s\n---",
    c_siz,array2str(ref_list),array2str(contact_list[C_OBJ_LIST])
    ));
    */	
  for(i=c_siz-1;i>=0;i--)
    if(!ref_list[i] && contact_list[C_DATA_LIST][i])
      {
	contact_list[C_OBJ_LIST][i] = 0;
	work_around = TYPE_TEXT[contact_list[C_DATA_LIST][i, CONTACT_TYPE]];
 
	if(!stringp(work_around))
	  work_around = "???";
	  
	tell_console(P_NAV_CON,
		     wrap_string("[Achtung]",
				 sprintf("Kontakt (%d) verloren. Typ: %s.\n",
					 i+1,
					 work_around
					 )));

	contact_list[C_DATA_LIST] -= ([ i ]);
   
	/* moegliche Locks killen */
	check_laser_lock(i);
   
	/* Letzter Eintrag gewesen ? Dann wie oben verkuerzen */
	if(i == c_siz - 1)
	  {  
	    /*
	      DEBUG(sprintf("Letzter Eintrag:\n c_siz %d\nref_list %s\nobj_list %s\n---",
	      c_siz,array2str(ref_list),array2str(contact_list[C_OBJ_LIST])
	      ));
	      */
	    for(j=c_siz;j--;)
	      if(contact_list[C_OBJ_LIST][j] == 0)
		i--;
         
	    contact_list[C_OBJ_LIST]=contact_list[C_OBJ_LIST][0..i];
     
	    /* 
	       DEBUG(sprintf("Letzter EintragEnde:\n c_siz %d\ni %d\nref_list %s\nobj_list %s\n---",
	       c_siz,i,array2str(ref_list),array2str(contact_list[C_OBJ_LIST])
	       ));
	       */
	  }
      }
 
  DEBUG(sprintf("c_siz %d\nref_list %s\nobj_list %s\n---",
		c_siz,array2str(ref_list),array2str(contact_list[C_OBJ_LIST])
		));
  
  SetProp(P_CONTACT_LIST,contact_list);
}


private void do_sr_sensor(int range)
{
}


// Wird vom HeartBeat des raumschiff aufgerufen
void do_sensor() 
{
  if(!environment() || !QueryProp(P_RAW_SENSOR))
    return 0;

  if(query_system_damage(SYSTEM_LR_SENSOR) != DT_INOPERATIVE)
    do_lr_sensor(QueryProp(P_SENSOR_LR_RANGE));

  if(query_system_damage(SYSTEM_SR_SENSOR) != DT_INOPERATIVE)
    do_sr_sensor(QueryProp(P_SENSOR_SR_RANGE));
}

private void display_sensor_info(int contact_nr)
{
  float *xyz;
  float *sph;
  float *c_pos;
  float *c_motion;
  float *m_pos;
  float *m_motion;
  int i, size;
  
  string c_arc;
  string out;
  
  mixed *contact_list;  
  out = "\n"+TRENNLINIE+center("Sensor - Report\n",S_WIDTH)+TRENNLINIE+
    "Nr. Typ    Peilung   Entf.   Arc  Peilung Geschw. Arc Name\n"+
    TRENNLINIE;

  contact_list = QueryProp(P_CONTACT_LIST);
  if(!sizeof(contact_list[C_OBJ_LIST]))
    {
      tell_console(P_NAV_CON,out+center("Keine Kontakte\n",78)+TRENNLINIE,
		   DOER);
      return;
    }
  
  m_pos    = QueryProp(P_POSITION);
  m_motion = QueryProp(P_MOTION);
  	
  for(size = sizeof(contact_list[C_OBJ_LIST]),i=0;i<size;i++)
    {
      if(contact_list[C_OBJ_LIST][i] == 0)
	continue;
    
      if(contact_nr && contact_nr != (i+1))
	continue;
  
      c_pos = contact_list[C_DATA_LIST][i,CONTACT_POS];
   
      /* calculate relative positions */
      xyz = ({0.0 ,0.0 ,0.0}); 
DEBUG("X ist"+X+"\n");
DEBUG("Y ist"+Y+"\n");
DEBUG("Z ist"+Z+"\n");
      xyz[X] = c_pos[X] - m_pos[X];
      xyz[Y] = c_pos[Y] - m_pos[Y];
      xyz[Z] = c_pos[Z] - m_pos[Z];
      
      sph = xyz2sph( xyz );
      c_motion = contact_list[C_DATA_LIST][i,CONTACT_MOTION];
      c_arc = arc_text(contact_list[C_DATA_LIST][i,CONTACT_ARCS]);
   
      out += right((i+1),3)+" "+
	left(TYPE_TEXT[contact_list[C_DATA_LIST][i,CONTACT_TYPE]],6)+" "+
	left(sph[BEARING],4)+" "+
	left(sph[ELEVATION],4)+" "+
	left(write_su2pc(sph[RANGE]),7)+" "+
	right(arc_text(arc( m_pos, m_motion, c_pos)),3)+"  "+
	left(c_motion[BEARING],4)+" "+
	left(c_motion[ELEVATION],4)+" "+
	right(write_su2pc(c_motion[RANGE]),5)+" "+
	right(c_arc,3)+" "+
	left(contact_list[C_DATA_LIST][i,CONTACT_NAME],24)+"\n";
  
      if(contact_nr)
   	break;
    } 	  
  
  out += TRENNLINIE;
  
  tell_console(P_NAV_CON,out, DOER);
}



/*
 * Allen Objekten im Sector, die einen Kontakt auf uns haben str schicken 
 */
void tell_contacts(string str)
{ 
  mapping otab;
  mixed *contact_list;
  int i;
  object *iobj;
 
  if(!environment()) return;
 
  otab=(mapping)UNIVERSD->query_object_table(pos2sector(QueryProp(P_POSITION)));
 
  if(!otab) return;
 
  iobj = m_indices(otab);
  for(i=sizeof(iobj);i--;)
    if(contact_list = iobj[i]->QueryProp(P_CONTACT_LIST))
      if(member(contact_list[C_OBJ_LIST],this_object()))
	iobj[i]->tell_console(P_NAV_CON,str);
}

int sensor_parse(string str)
{
  string *exp;
  int c_nr;
 
  
  if(!QueryProp(P_SYSTEM_ACTIVATE))
    {
      tell_console(P_NAV_CON,"[Kein System ist aktiviert.]\n", DOER);
      return OK;
    }

  exp = explode(lower_case(str||"")," ")-({""});
 
  if(sizeof(exp) > 0)
    {
      if(exp[0] == "status" || exp[0] == "report")
	{
	  if(sizeof(exp) > 1)
	    c_nr = to_int(exp[1]);
	  else
	    c_nr = 0;
    
	  display_sensor_info(c_nr);
	}
    }
  else
    {
      notify_fail("sensor <report|status> <kontakt-nr>\n");
      return 0;
    }
 
  return 1;
}
 
void create()
{
  SetProp(P_CONTACT_LIST,({ ({}), ([]) }) );

  Set(P_RAW_SENSOR,		SAVE, F_MODE); 
  Set(P_SENSOR_NAME,		SAVE, F_MODE);
  Set(P_SENSOR_GENDER,		SAVE, F_MODE);
  Set(P_SENSOR_LONG,		SAVE, F_MODE);
  Set(P_SENSOR_ID,		SAVE, F_MODE);
  Set(P_SENSOR_LR_RANGE,	SAVE, F_MODE);
  Set(P_SENSOR_SR_RANGE,	SAVE, F_MODE);
  Set(P_CONTACT_LIST,		SAVE, F_MODE);
}


---------------------------------------------------------------------------
>From bearnip  Sat Jun 10 08:10:51 2000
Received: from eins.teaw.de (h-213.61.12.14.host.de.colt.net [213.61.12.14])
	by csoft.net (8.10.2/8.10.1) with SMTP id e5ADAob15310
	for <lars@bearnip.com>; Sat, 10 Jun 2000 08:10:51 -0500
Received: (qmail 6659 invoked from network); 10 Jun 2000 13:08:00 -0000
Received: from p3e9bf075.dip0.t-ipconnect.de (HELO dabook) (62.155.240.117)
  by h-213.61.12.14.host.de.colt.net with SMTP; 10 Jun 2000 13:08:00 -0000
From: "Bastian Hoyer" <bastian.hoyer@zitronentee.de>
To: "Lars Duening" <lars@bearnip.com>
Subject: RE: AW: crash.txt
Date: Sat, 10 Jun 2000 15:09:41 +0200
Message-ID: <FNEEIDFHGKHHPALBGMHCOECCCAAA.bastian.hoyer@zitronentee.de>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2910.0)
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2919.6700
Importance: Normal
In-Reply-To: <0FVW00FAXU5OSA@dgismtp04.wcomnet.com>


> Hmm, ich denke hier hast du ein Attachment vergessen (das mit den
> Speicherinhalten) :-). Aber warte mit dem Schicken etwas - bearnip
> leidet gerade unter einem Hardwarecrash.

ehrlich gesagt wusste ich nicht wie das geht.. aber hier nu das zeugs :
(also schreib mir sowas nachste mal besser dazu ;)))

(gdb) x/256xb 0xA785C90-128
0xa785c10:      0x20    0x4f    0x73    0x74    0x65    0x6e    0x20    0x64
0xa785c18:      0x61    0x76    0x6f    0x6e    0x2e    0x0a    0x00    0x00
0xa785c20:      0x10    0x00    0x00    0x30    0xa0    0x0c    0xa3    0x0a
0xa785c28:      0x61    0x6c    0x74    0x65    0x20    0x43    0x6c    0x65
0xa785c30:      0x61    0x6e    0x2d    0x4f    0x2d    0x42    0x6f    0x74
0xa785c38:      0x20    0x73    0x63    0x68    0x77    0x65    0x62    0x74
0xa785c40:      0x20    0x68    0x6f    0x6c    0x70    0x72    0x69    0x67
0xa785c48:      0x20    0x6e    0x61    0x63    0x68    0x20    0x4e    0x6f
0xa785c50:      0x72    0x64    0x65    0x6e    0x20    0x64    0x61    0x76
0xa785c58:      0x6f    0x6e    0x2e    0x0a    0x00    0x0a    0x00    0x00
0xa785c60:      0x0a    0x00    0x00    0x30    0x2f    0x64    0x2f    0x53
0xa785c68:      0x6f    0x6c    0x2f    0x6f    0x76    0x65    0x72    0x6c
0xa785c70:      0x6f    0x72    0x64    0x2f    0x72    0x75    0x65    0x73
0xa785c78:      0x74    0x75    0x6e    0x67    0x2f    0x65    0x73    0x62
0xa785c80:      0x65    0x69    0x6e    0x65    0x00    0x00    0x00    0x00
0xa785c88:      0x02    0x10    0x00    0xf0    0x84    0x1c    0x78    0x0a
0xa785c90:      0x10    0x00    0x00    0x10    0x20    0x61    0x75    0x66
0xa785c98:      0x7a    0x75    0x73    0x63    0x68    0x6c    0x69    0x65
0xa785ca0:      0x73    0x73    0x65    0x6e    0x2c    0x20    0x68    0x61
0xa785ca8:      0x74    0x20    0x61    0x62    0x65    0x72    0x20    0x6e
0xa785cb0:      0x69    0x63    0x68    0x74    0x20    0x64    0x65    0x6e
0xa785cb8:      0x20    0x72    0x69    0x63    0x68    0x74    0x69    0x67
0xa785cc0:      0x65    0x6e    0x20    0x53    0x63    0x68    0x6c    0x75
0xa785cc8:      0x65    0x73    0x73    0x65    0x6c    0x2e    0x00    0x00
0xa785cd0:      0x10    0x00    0x00    0x10    0x4d    0x6f    0x63    0x74
0xa785cd8:      0x65    0x7a    0x75    0x6d    0x61    0x20    0x6b    0x72
0xa785ce0:      0x61    0x62    0x62    0x65    0x6c    0x74    0x20    0x77
0xa785ce8:      0x69    0x65    0x20    0x65    0x69    0x6e    0x20    0x6b
0xa785cf0:      0x6c    0x65    0x69    0x6e    0x65    0x73    0x20    0x42
0xa785cf8:      0x61    0x62    0x79    0x20    0x6e    0x61    0x63    0x68
0xa785d00:      0x20    0x4f    0x73    0x74    0x65    0x6e    0x20    0x64
0xa785d08:      0x61    0x76    0x6f    0x6e    0x2e    0x0a    0x00    0x00


(gdb) x/64xw 0xA785C90-128
0xa785c10:      0x74734f20      0x64206e65      0x6e6f7661      0x00000a2e
0xa785c20:      0x30000010      0x0aa30ca0      0x65746c61      0x656c4320
0xa785c30:      0x4f2d6e61      0x746f422d      0x68637320      0x74626577
0xa785c40:      0x6c6f6820      0x67697270      0x63616e20      0x6f4e2068
0xa785c50:      0x6e656472      0x76616420      0x0a2e6e6f      0x00000a00
0xa785c60:      0x3000000a      0x532f642f      0x6f2f6c6f      0x6c726576
0xa785c70:      0x2f64726f      0x73657572      0x676e7574      0x6273652f
0xa785c80:      0x656e6965      0x00000000      0xf0001002      0x0a781c84
0xa785c90:      0x10000010      0x66756120      0x6373757a      0x65696c68
0xa785ca0:      0x6e657373      0x6168202c      0x62612074      0x6e207265
0xa785cb0:      0x74686369      0x6e656420      0x63697220      0x67697468
0xa785cc0:      0x53206e65      0x756c6863      0x65737365      0x00002e6c
0xa785cd0:      0x10000010      0x74636f4d      0x6d757a65      0x726b2061
0xa785ce0:      0x65626261      0x7720746c      0x65206569      0x6b206e69
0xa785cf0:      0x6e69656c      0x42207365      0x20796261      0x6863616e
0xa785d00:      0x74734f20      0x64206e65      0x6e6f7661      0x00000a2e

x/256sb 0xA785C90-128
0xa785c10:         " Osten davon.\n"
0xa785c1f:       ""
0xa785c20:       "\020"
0xa785c22:       ""
0xa785c23:       "0 \f?\nalte Clean-O-Bot schwebt holprig nach Norden
davon.\n"
0xa785c5d:       "\n"
0xa785c5f:       ""
0xa785c60:       "\n"
0xa785c62:       ""
0xa785c63:       "0/d/Sol/overlord/ruestung/esbeine"
0xa785c85:       ""
0xa785c86:       ""
0xa785c87:       ""
0xa785c88:       "\002\020"
0xa785c8b:       "?\204\034x\n\020"
0xa785c92:       ""
0xa785c93:       "\020 aufzuschliessen, hat aber nicht den richtigen
Schluessel."
0xa785ccf:       ""
0xa785cd0:       "\020"
0xa785cd2:       ""
0xa785cd3:       "\020Moctezuma krabbelt wie ein kleines Baby nach Osten
davon.\n"
0xa785d0f:       ""
0xa785d10:       "\020"
0xa785d12:       ""
0xa785d13:
"\020(\\<will\\>.*\\<lichtschild\\>.*)|(\\<will\\>.*\\<lichtkugel\\>.*)"
0xa785d4f:       ""
0xa785d50:       "\022"
0xa785d52:       ""
0xa785d53:       "\020"
0xa785d55:       ""
0xa785d56:       ""
0xa785d57:       ""
0xa785d58:       "\024"
0xa785d5a:       ""
0xa785d5b:       ""
0xa785d5c:       ":R9\beR9\b\236?9\beY9\b>?9\b\002"
0xa785d72:       "\002"
0xa785d74:       "\005"
0xa785d76:       ""
0xa785d77:       ""
0xa785d78:       "\002"
0xa785d7a:       "\002"
0xa785d7c:       "\005"
0xa785d7e:       ""
0xa785d7f:       ""
0xa785d80:       "\002"
0xa785d82:       "\002"
0xa785d84:       "\005"
0xa785d86:       ""
0xa785d87:       ""
0xa785d88:       "\002"
0xa785d8a:       "\002"
0xa785d8c:       "\005"
0xa785d8e:       ""
0xa785d8f:       ""
0xa785d90:       "\002"
0xa785d92:       "\002"
0xa785d94:       "\005"
0xa785d96:       ""
0xa785d97:       ""
0xa785d98:       "\022"
0xa785d9a:       ""
0xa785d9b:       "\020"
0xa785d9d:       ""
0xa785d9e:       ""
0xa785d9f:       ""
0xa785da0:       "\024"
0xa785da2:       ""
0xa785da3:       ""
0xa785da4:       ":R9\beR9\b\236?9\beY9\b>?9\b\002"
0xa785dba:       ""
0xa785dbb:       ""
0xa785dbc:       "\a"
0xa785dbe:       ""
0xa785dbf:       ""
0xa785dc0:       "\002"
0xa785dc2:       ""
0xa785dc3:       ""
0xa785dc4:       "\005"
0xa785dc6:       ""
0xa785dc7:       ""
0xa785dc8:       "\002"
0xa785dca:       ""
0xa785dcb:       ""
0xa785dcc:       "\004"
0xa785dce:       ""
0xa785dcf:       ""
0xa785dd0:       "\002"
0xa785dd2:       ""
0xa785dd3:       ""
0xa785dd4:       "\f"
0xa785dd6:       ""
0xa785dd7:       ""
0xa785dd8:       "\002"
0xa785dda:       ""
0xa785ddb:       ""
0xa785ddc:       "\a"
0xa785dde:       ""
0xa785ddf:       ""
0xa785de0:       "\022"
0xa785de2:       ""
0xa785de3:
"\020#'d/Akaardan/quillian/gegenstaende/chronokom#13245->long_display"
0xa785e25:       "\n"
0xa785e27:       ""
0xa785e28:       "\022"
0xa785e2a:       ""
0xa785e2b:       "\020"
0xa785e2d:       ""
0xa785e2e:       ""
0xa785e2f:       ""
0xa785e30:       "\024"
0xa785e32:       ""
0xa785e33:       ""
0xa785e34:       ":R9\beR9\b\236?9\beY9\b>?9\b\002"
0xa785e4a:       ""
0xa785e4b:       ""
0xa785e4c:       "\003"
0xa785e4e:       ""
0xa785e4f:       ""
0xa785e50:       "\002"
0xa785e52:       ""
0xa785e53:       ""
0xa785e54:       "\003"
0xa785e56:       ""
0xa785e57:       ""
0xa785e58:       "\002"
0xa785e5a:       ""
0xa785e5b:       ""
0xa785e5c:       "\003"
0xa785e5e:       ""
0xa785e5f:       ""
0xa785e60:       "\002"
0xa785e62:       ""
0xa785e63:       ""
0xa785e64:       "\003"
0xa785e66:       ""
0xa785e67:       ""
0xa785e68:       "\002"
0xa785e6a:       ""
0xa785e6b:       ""
0xa785e6c:       "\003"
0xa785e6e:       ""
0xa785e6f:       ""
0xa785e70:       "\022"
0xa785e72:       ""
0xa785e73:       "\020"
0xa785e75:       ""
0xa785e76:       ""
0xa785e77:       ""
0xa785e78:       "\024"
0xa785e7a:       ""
0xa785e7b:       ""
0xa785e7c:       "e\211\032\b\236w/\b\202'4\b?\2369\bz|9\b\004"
0xa785e92:       "\002"
0xa785e94:       "\004\ba\b\003"
0xa785e9a:       "\002"
0xa785e9c:       "\036\0324\b\003"
0xa785ea2:       "\002"
0xa785ea4:       "\"-A\b\003"
0xa785eaa:       ""
0xa785eab:       ""
0xa785eac:       "d&Q\n\003"
0xa785eb2:       ""
0xa785eb3:       ""
0xa785eb4:       "\234Ix\n\022"
0xa785eba:       ""
0xa785ebb:       "\020"
0xa785ebd:       ""
0xa785ebe:       ""
0xa785ebf:       ""
0xa785ec0:       "\024"
0xa785ec2:       ""
0xa785ec3:       ""
0xa785ec4:       ":R9\beR9\b\236?9\beY9\b>?9\b\002"
0xa785eda:       "\002"
0xa785edc:       "\002"
0xa785ede:       ""
0xa785edf:       ""
0xa785ee0:       "\002"
0xa785ee2:       "\002"
0xa785ee4:       "\002"
0xa785ee6:       ""
0xa785ee7:       ""
0xa785ee8:       "\002"
0xa785eea:       "\002"
0xa785eec:       "\001"
0xa785eee:       ""
0xa785eef:       ""
0xa785ef0:       "\002"
0xa785ef2:       "\002"
0xa785ef4:       "\004"
0xa785ef6:       ""
0xa785ef7:       ""
0xa785ef8:       "\002"
0xa785efa:       "\002"
0xa785efc:       "\003"
0xa785efe:       ""
0xa785eff:       ""
0xa785f00:       "\020"
0xa785f02:       ""
0xa785f03:
"\020#'d/Akaardan/quillian/kor/fstat/ebene0/halle->regen_long"
0xa785f3d:       ""
0xa785f3e:       "?"
0xa785f40:       "\022"
0xa785f42:       ""
0xa785f43:       "\020"
0xa785f45:       ""
0xa785f46:       ""
0xa785f47:       ""
0xa785f48:       "\024"
0xa785f4a:       ""
0xa785f4b:       ""
0xa785f4c:       ":R9\beR9\b\236?9\beY9\b>?9\b\002"
0xa785f62:       ""
0xa785f63:       ""
0xa785f64:       "\002"
0xa785f66:       ""
0xa785f67:       ""
0xa785f68:       "\002"
0xa785f6a:       ""
0xa785f6b:       ""
0xa785f6c:       "\002"
0xa785f6e:       ""
0xa785f6f:       ""
0xa785f70:       "\002"
0xa785f72:       ""
0xa785f73:       ""
0xa785f74:       ""
0xa785f75:       ""
0xa785f76:       ""
0xa785f77:       ""
0xa785f78:       "\002"
0xa785f7a:       ""
0xa785f7b:       ""
0xa785f7c:       "\004"
0xa785f7e:       ""
0xa785f7f:       ""
0xa785f80:       "\002"
0xa785f82:       ""
0xa785f83:       ""
0xa785f84:       "\002"
0xa785f86:       ""
0xa785f87:       ""
0xa785f88:       "\022"
0xa785f8a:       ""
0xa785f8b:       "\020"
0xa785f8d:       ""
0xa785f8e:       ""
0xa785f8f:       ""
0xa785f90:       "\024"
0xa785f92:       ""
0xa785f93:       ""
0xa785f94:       "e\211\032\b\236w/\b\202'4\b?\2369\b\226-9\b\004"
0xa785faa:       "\002"
0xa785fac:       "DA,\n\003"
0xa785fb2:       "\002"

---------------------------------------------------------------------------
